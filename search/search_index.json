{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mapas y OpenData, Localizaci\u00f3n, Visualizaci\u00f3n y An\u00e1lisis de GeoDatos Materiales para el m\u00f3dulo 2: Mapas y OpenData, Localizaci\u00f3n, Visualizaci\u00f3n y An\u00e1lisis de GeoDatos Repo: https://github.com/gis-master-m2/m2-geoweb Temario Sesi\u00f3n 1 1. Introducci\u00f3n a la GeoWeb 2. La Plataforma GitHub y \u00f3rdenes b\u00e1sicas Git. 3. Mi primer proyecto en GitHub Sesi\u00f3n 2* 4. Introduccion a Leaflet 5. Plugins Leaflet 6. Buscador de Farmacias con Leaflet Sesi\u00f3n 3 7. Introducci\u00f3n a Vector-Tiles y Mapbox Studio 8. MapBox Studio y MapBox GL JS 9. Pr\u00e1ctica Cementerio 10. Visor edificios Catastro Sesi\u00f3n 4 11. Introducci\u00f3n Mapas 3D 12. Mapa de rutas Sesi\u00f3n 5* 13. StoryTelling Sesi\u00f3n 6 14. Mapas personalizados con Maputnik y MapBox GL JS 15. MapBox GL JS con recursos externos 16. Visor de terremotos Sesi\u00f3n 7* 17. Mallas discretas y algoritmos en JS 18. Visualizaci\u00f3n y publicaci\u00f3n con Kepler GL Sesi\u00f3n 8 19. Recursos OpenData 20. Publicaci\u00f3n en Medium Preguntas Frecuentes Recursos necesarios (todos los recursos tienen versiones para Windows,Linux y Mac) Editor de c\u00f3didgoVisualStudio Code https://code.visualstudio.com/ Browser. Google Chrome o navegador basado en Chromium ejemplo Brave Servidor web. Plugin VSCode https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer Cliente GIT https://git-scm.com/download/win Ser\u00e1 necessario crear una cuenta de usuario en: GitHub https://github.com/ MapBox https://www.mapbox.com/ Medium https://medium.com/ Autor Victor Pascual Ayats sfggeogis@gmail.com","title":"Inicio"},{"location":"#mapas-y-opendata-localizacion-visualizacion-y-analisis-de-geodatos","text":"Materiales para el m\u00f3dulo 2: Mapas y OpenData, Localizaci\u00f3n, Visualizaci\u00f3n y An\u00e1lisis de GeoDatos","title":"Mapas y OpenData, Localizaci\u00f3n, Visualizaci\u00f3n y An\u00e1lisis de GeoDatos"},{"location":"#repo","text":"https://github.com/gis-master-m2/m2-geoweb","title":"Repo:"},{"location":"#temario","text":"Sesi\u00f3n 1 1. Introducci\u00f3n a la GeoWeb 2. La Plataforma GitHub y \u00f3rdenes b\u00e1sicas Git. 3. Mi primer proyecto en GitHub Sesi\u00f3n 2* 4. Introduccion a Leaflet 5. Plugins Leaflet 6. Buscador de Farmacias con Leaflet Sesi\u00f3n 3 7. Introducci\u00f3n a Vector-Tiles y Mapbox Studio 8. MapBox Studio y MapBox GL JS 9. Pr\u00e1ctica Cementerio 10. Visor edificios Catastro Sesi\u00f3n 4 11. Introducci\u00f3n Mapas 3D 12. Mapa de rutas Sesi\u00f3n 5* 13. StoryTelling Sesi\u00f3n 6 14. Mapas personalizados con Maputnik y MapBox GL JS 15. MapBox GL JS con recursos externos 16. Visor de terremotos Sesi\u00f3n 7* 17. Mallas discretas y algoritmos en JS 18. Visualizaci\u00f3n y publicaci\u00f3n con Kepler GL Sesi\u00f3n 8 19. Recursos OpenData 20. Publicaci\u00f3n en Medium Preguntas Frecuentes","title":"Temario"},{"location":"#recursos-necesarios-todos-los-recursos-tienen-versiones-para-windowslinux-y-mac","text":"Editor de c\u00f3didgoVisualStudio Code https://code.visualstudio.com/ Browser. Google Chrome o navegador basado en Chromium ejemplo Brave Servidor web. Plugin VSCode https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer Cliente GIT https://git-scm.com/download/win","title":"Recursos necesarios (todos los recursos tienen versiones para Windows,Linux y Mac)"},{"location":"#sera-necessario-crear-una-cuenta-de-usuario-en","text":"GitHub https://github.com/ MapBox https://www.mapbox.com/ Medium https://medium.com/","title":"Ser\u00e1 necessario crear una  cuenta de usuario en:"},{"location":"#autor","text":"Victor Pascual Ayats sfggeogis@gmail.com","title":"Autor"},{"location":"faq/","text":"Preguntas frecuentes Al intentar hacer push el Git me pide un nombre de usuario y correo Si al hacer un commit la primera vez tenemos este aviso Run git config --global user.email \"you@example.com\" git config --global user.name \"Your Name\" to set your account 's default identity. Omit --global to set the identity only in this repository. fatal: unable to auto-detect email address (got ' usuario@yourpc. ( none ) ' ) Entramos nuestor usuario y correo de git y volvemos a hacer push git config --global user.email micorreo@gmail.com git config --global user.name misusuario git pull git add . git commit -m \"change readme\" git push -u origin master Medium no me deja publicar el Post Si al intenar publicar un Post por primera vez Medium me dice.. \"Publishing from your account is currently limited due to account newness, incomplete profile, or inactivity. Please complete your profile, and use Medium more to unlock publishing. Any posts or responses have been saved to your draft folder and will be available when youre able to publish.\" Medium tiene que validar nuestra cuenta el Post Editamos nuestro perfil con un texto descriptivo y una imagen (no hace falta foto personal si no quereis) Salimos de la sesi\u00f3n de Medium (LogOut) y volvemos a entrar (Login) Si a\u00fan as\u00ed no funciona, esperamos 24h. En principio despu\u00e9s de este periodo nos tendria que dejar publicar sin problemas","title":"Preguntas Frecuentes"},{"location":"faq/#preguntas-frecuentes","text":"","title":"Preguntas frecuentes"},{"location":"faq/#al-intentar-hacer-push-el-git-me-pide-un-nombre-de-usuario-y-correo","text":"Si al hacer un commit la primera vez tenemos este aviso Run git config --global user.email \"you@example.com\" git config --global user.name \"Your Name\" to set your account 's default identity. Omit --global to set the identity only in this repository. fatal: unable to auto-detect email address (got ' usuario@yourpc. ( none ) ' ) Entramos nuestor usuario y correo de git y volvemos a hacer push git config --global user.email micorreo@gmail.com git config --global user.name misusuario git pull git add . git commit -m \"change readme\" git push -u origin master","title":"Al intentar hacer push el Git me pide un nombre de usuario y correo"},{"location":"faq/#medium-no-me-deja-publicar-el-post","text":"Si al intenar publicar un Post por primera vez Medium me dice.. \"Publishing from your account is currently limited due to account newness, incomplete profile, or inactivity. Please complete your profile, and use Medium more to unlock publishing. Any posts or responses have been saved to your draft folder and will be available when youre able to publish.\" Medium tiene que validar nuestra cuenta el Post Editamos nuestro perfil con un texto descriptivo y una imagen (no hace falta foto personal si no quereis) Salimos de la sesi\u00f3n de Medium (LogOut) y volvemos a entrar (Login) Si a\u00fan as\u00ed no funciona, esperamos 24h. En principio despu\u00e9s de este periodo nos tendria que dejar publicar sin problemas","title":"Medium no me deja publicar el Post"},{"location":"farmacias_leaflet/","text":"Atencion!! Buscador de Farmacias de Barcelona Nos han encargado realizar un mapa para poder localizar y buscar las farmacias de Barcelona Los datos de farmacias son del web de Datos Abiertos de Barcelona https://opendata-ajuntament.barcelona.cat/data/es/dataset/sanitat-farmacies Existe un plugin de Leaflet llamado Leaflet-ajax que permite cargar capas GeoJSON ya sea en local o en remoto Leaflet-ajax https://github.com/calvinmetcalf/leaflet-ajax Existe un plugin de Leaflet llamado Leaflet-search que permite buscar dentro de atributos de un GeoJSON Leaflet-Search https://github.com/stefanocudini/leaflet-search Ejemplo buscador de Farmacias Paso 1:Visualizar datos Visualizamos con QGIS para ver c\u00f3mo es, el archivo de /geoweb/datos/farmacias.geojson Convertir a GeoJson El archivo de faramacias lo hemos descargado del portal https://opendata-ajuntament.barcelona.cat/data/es/dataset/sanitat-farmacies . Para ver c\u00f3mo transformar y reproyectar un archivo CSV a GeoJson con Qgis mira el video 7 Paso 2: Crear archivo farmacias.html Abrimos archivo mapabase.html y guardamos como File-->Save as farmacias.html A\u00f1adimos un titulo y la funci\u00f3n inicial initMapaFarmacias() de nuestro proyecto Llamamos a la funci\u00f3n initMapaFarmacias() en el body onLoad < html lang = \"es\" > < head > < title > Farmacias </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < link rel = \"stylesheet\" href = \"css/estilobase.css\" /> < script src = \"js/mapabase.js\" ></ script > < script > function initMapaFarmacias (){ init (); } </ script > </ head > < body onLoad = \"initMapaFarmacias()\" > < div id = \"map\" > </ div > </ body > </ html > Paso 3:A\u00f1adir plugin A\u00f1adimos Plugins al proyecto Podemos descargar plugins del directorio /dist y guardarlos en nuestros directorios /js o /css Tambi\u00e9n podemos utilizar la URL directamente (nuestro caso) < html lang = \"es\" > < head > < title > Farmacias </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < script src = \"https://calvinmetcalf.github.io/leaflet-ajax/dist/leaflet.ajax.js\" ></ script > < link rel = \"stylesheet\" href = \"css/estilobase.css\" /> < script src = \"js/mapabase.js\" ></ script > < script > function initMapaFarmacias (){ init (); } </ script > </ head > < body onLoad = \"initMapaFarmacias()\" > < div id = \"map\" > </ div > </ body > </ html > Paso 4:Cargamos GeoJson Farmacias Miramos documentaci\u00f3n Leaflet-Ajax plugin https://github.com/calvinmetcalf/leaflet-ajax Miramos referencia L.Geojson https://leafletjs.com/reference-1.7.1.html#geojson Dentro de nuestro directorio /geoweb/js/ creamos el archivo farmacias.js var layerFarmacias ; var urlFarmacias = \"datos/farmacias.geojson\" ; function addDatosFarmacias () { layerFarmacias = new L . GeoJSON . AJAX ( urlFarmacias , { onEachFeature : function ( feature , layer ) { popupContent = \"<b>\" + feature . properties . EQUIPAMENT + \"</b>\" + \"<br>\" + feature . properties . TIPUS_VIA + \". \" + feature . properties . NOM_CARRER + \" \" + feature . properties . NUM_CARRER_1 + \"</b>\" ; layer . bindPopup ( popupContent ); }, pointToLayer : function ( feature , latlng ) { return L . circleMarker ( latlng , { radius : 6 , fillColor : \"#00ff00\" , color : \"#ffffff\" , weight : 3 , opacity : 1 , fillOpacity : 0.8 }); } }). addTo ( map ); map . setView ([ 41.399733 , 2.168598 ], 13 ); // controlCapas.addOverlay(layerFarmacias,\"Farmacias\"); } Paso 5: A\u00f1adimos farmacias.js al archivo farmacias.html Llamamos funcion addDatosFarmacias() < html lang = \"es\" > < head > < title > Farmacias </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < script src = \"https://calvinmetcalf.github.io/leaflet-ajax/dist/leaflet.ajax.js\" ></ script > < link rel = \"stylesheet\" href = \"css/estilobase.css\" /> < script src = \"js/mapabase.js\" ></ script > < script src = \"js/farmacias.js\" ></ script > < script > function initMapaFarmacias (){ init (); addDatosFarmacias (); } </ script > </ head > < body onLoad = \"initMapaFarmacias()\" > < div id = \"map\" > </ div > </ body > </ html > Miramos que funcione Paso 6:Buscar Farmacias Miramos documentaci\u00f3n Leaflet-Search plugin https://github.com/stefanocudini/leaflet-search A\u00f1adimos URL plugin < html lang = \"es\" > < head > < title > Farmacias </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < script src = \"https://calvinmetcalf.github.io/leaflet-ajax/dist/leaflet.ajax.js\" ></ script > < script src = \"https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.js\" ></ script > < link rel = \"stylesheet\" href = \"https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.css\" /> < link rel = \"stylesheet\" href = \"css/estilobase.css\" /> < script src = \"js/mapabase.js\" ></ script > < script src = \"js/farmacias.js\" ></ script > < script > function initMapaFarmacias (){ init (); addDatosFarmacias (); } </ script > </ head > < body onLoad = \"initMapaFarmacias()\" > < div id = \"map\" > </ div > </ body > </ html > A\u00f1adimos el control dentro de la funci\u00f3n addDatosFarmacias() de farmacias.js var layerFarmacias ; var urlFarmacias = \"datos/farmacias.geojson\" ; function addDatosFarmacias () { layerFarmacias = new L . GeoJSON . AJAX ( urlFarmacias , { onEachFeature : function ( feature , layer ) { popupContent = \"<b>\" + feature . properties . EQUIPAMENT + \"</b>\" + \"<br>\" + feature . properties . TIPUS_VIA + \". \" + feature . properties . NOM_CARRER + \" \" + feature . properties . NUM_CARRER_1 + \"</b>\" ; layer . bindPopup ( popupContent ); }, pointToLayer : function ( feature , latlng ) { return L . circleMarker ( latlng , { radius : 6 , fillColor : \"#00ff00\" , color : \"#ffffff\" , weight : 3 , opacity : 1 , fillOpacity : 0.8 }); } }). addTo ( map ); map . setView ([ 41.399733 , 2.168598 ], 13 ); // controlCapas.addOverlay(layerFarmacias,\"Farmacias\"); var searchControl = new L . Control . Search ({ layer : layerFarmacias , initial : false , propertyName : 'EQUIPAMENT' , circleLocation : true , moveToLocation : function ( latlng ) { map . setView ( latlng , 17 ); } }); searchControl . on ( 'search:locationfound' , function ( e ) { e . layer . openPopup (); }); map . addControl ( searchControl ); } Probamos visor y buscamos farm\u00e1cias Paso 7: \u00bfA\u00f1adimos el plugin de Cluster? Este es uno de lo plugins m\u00e1s utilizados en Lealfte Miramos documentaci\u00f3n https://github.com/Leaflet/Leaflet.markercluster A\u00f1adimos URL plugin < html lang = \"es\" > < head > < title > Farmacias </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < script src = \"https://calvinmetcalf.github.io/leaflet-ajax/dist/leaflet.ajax.js\" ></ script > < script src = \"https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.js\" ></ script > < link rel = \"stylesheet\" href = \"https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.css\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.css\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.Default.css\" /> < script src = \"https://unpkg.com/leaflet.markercluster@1.4.1/dist/leaflet.markercluster.js\" ></ script > < link rel = \"stylesheet\" href = \"css/estilobase.css\" /> < script src = \"js/mapabase.js\" ></ script > < script src = \"js/farmacias.js\" ></ script > < script > function initMapaFarmacias (){ init (); addDatosFarmacias (); } </ script > </ head > < body onLoad = \"initMapaFarmacias()\" > < div id = \"map\" > </ div > </ body > </ html > A\u00f1adimos la capa dentro de la funci\u00f3n addDatosFarmacias() de farmacias.js var layerFarmacias ; var urlFarmacias = \"datos/farmacias.geojson\" ; function addDatosFarmacias () { var puntosCluster = L . markerClusterGroup (); layerFarmacias = new L . GeoJSON . AJAX ( urlFarmacias , { onEachFeature : function ( feature , layer ) { popupContent = \"<b>\" + feature . properties . EQUIPAMENT + \"</b>\" + \"<br>\" + feature . properties . TIPUS_VIA + \". \" + feature . properties . NOM_CARRER + \" \" + feature . properties . NUM_CARRER_1 + \"</b>\" ; layer . bindPopup ( popupContent ); }, pointToLayer : function ( feature , latlng ) { puntosCluster . addLayer ( L . marker ( latlng )); return L . circleMarker ( latlng , { radius : 6 , fillColor : \"#00ff00\" , color : \"#ffffff\" , weight : 3 , opacity : 1 , fillOpacity : 0.8 }); } }). addTo ( map ); map . setView ([ 41.399733 , 2.168598 ], 13 ); controlCapas . addOverlay ( layerFarmacias , \"Farmacias\" ); controlCapas . addOverlay ( puntosCluster , \"Cluster\" ); var searchControl = new L . Control . Search ({ layer : layerFarmacias , initial : false , propertyName : 'EQUIPAMENT' , circleLocation : true , moveToLocation : function ( latlng ) { map . setView ( latlng , 17 ); } }); searchControl . on ( 'search:locationfound' , function ( e ) { e . layer . openPopup (); }); map . addControl ( searchControl ); } Probamos visualizaci\u00f3n \u00bfSubimos el ejemplo al GitHub? Acordaros tambi\u00e9s de actualizar index.html git pull git add . git commit -m \"ejemplos leaflet\" git push origin main Descargar ejemplos sesion 2 ejemplos-sesion2.zip Pr\u00e1ctica libre no puntuable para cargar GeoJSONs con plugin GeoJSON AJAX Abre mapabase.html --> guardar c\u00f3mo mapatest.html A\u00f1ade el plugin de GeoJSON AJAX Prueba las diferentes formas de trabajar con GeoJSONs y a\u00f1\u00e1delas como overlayMaps en el control de capas GeoJson por defecto var comarcasPoligonoDefault = new L . GeoJSON . AJAX ( 'datos/comarcas.geojson' ). addTo ( map ); var farmaciasPuntoDefault = new L . GeoJSON . AJAX ( 'datos/farmacias.geojson' ). addTo ( map ); var carrilsBiciLineaDefault = new L . GeoJSON . AJAX ( 'datos/carrils-bici.geojson' ). addTo ( map ); GeoJson con estilos var comarcasPoligonoStyle = new L . GeoJSON . AJAX ( 'datos/comarcas.geojson' , { style : function ( feature ) { return { fillColor : \"#fab81e\" , color : \"#ffffff\" , weight : 2 , opacity : 1 , fillOpacity : 0.5 } } }). addTo ( map ); var farmaciasPuntoStyle = new L . GeoJSON . AJAX ( 'datos/farmacias.geojson' , { pointToLayer : function ( feature , latlng ) { return L . circleMarker ( latlng , { radius : 6 , fillColor : \"#00ff00\" , color : \"#ffffff\" , weight : 3 , opacity : 1 , fillOpacity : 0.8 }) } }). addTo ( map ); var carrilsBiciLineaStyle = new L . GeoJSON . AJAX ( 'datos/carrils-bici.geojson' , { style : function ( feature ) { return { color : \"#d607f2\" , weight : 6 } } }). addTo ( map ); GeoJson con estilos y Popups var comarcasPoligonoStylePop = new L . GeoJSON . AJAX ( 'datos/comarcas.geojson' , { style : function ( feature ) { return { fillColor : \"#fab81e\" , color : \"#ffffff\" , weight : 2 , opacity : 1 , fillOpacity : 0.5 } }, onEachFeature : function ( feature , layer ) { popupContentPol = \"<b>\" + feature . properties . NOM + \"</b>\" ; layer . bindPopup ( popupContentPol ); }, }). addTo ( map ); var farmaciasPuntoStylePop = new L . GeoJSON . AJAX ( 'datos/farmacias.geojson' , { pointToLayer : function ( feature , latlng ) { return L . circleMarker ( latlng , { radius : 6 , fillColor : \"#00ff00\" , color : \"#ffffff\" , weight : 3 , opacity : 1 , fillOpacity : 0.8 }) }, onEachFeature : function ( feature , layer ) { popupContentP = \"<b>\" + feature . properties . EQUIPAMENT + \"</b>\" ; layer . bindPopup ( popupContentP ); }, }). addTo ( map ); var carrilsBiciLineaStylePop = new L . GeoJSON . AJAX ( 'datos/carrils-bici.geojson' , { style : function ( feature ) { return { color : \"#d607f2\" , weight : 6 } }, onEachFeature : function ( feature , layer ) { popupContentL = \"<b>\" + feature . properties . TOOLTIP + \"</b>\" ; layer . bindPopup ( popupContentL ); }, }). addTo ( map ); GeoJson remoto var rivers = new L . GeoJSON . AJAX ( 'https://raw.githubusercontent.com/nvkelso/natural-earth-vector/master/geojson/ne_10m_rivers_europe.geojson' , { style : function ( feature ) { return { color : \"#00ffe1\" , weight : 6 } }, }). addTo ( map ); Plugin Geosearch: Ejemplo extra buscador de Callejero Plugin que permite connectar con servicios de Geocodificaci\u00f3n * Plugin https://github.com/MuellerMatthew/L.GeoSearch < html lang = \"es\" > < head > < title > Callejero </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet-geosearch@2.7.0/assets/css/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet-geosearch@2.7.0/dist/bundle.min.js\" ></ script > < link rel = \"stylesheet\" href = \"css/estilobase.css\" /> < script src = \"js/mapabase.js\" ></ script > < script > function initMapaCalles () { init (); new GeoSearch . GeoSearchControl ({ // provider: new GeoSearch.OpenStreetMapProvider() provider : new GeoSearch . EsriProvider () }). addTo ( map ); } </ script > </ head > < body onLoad = \"initMapaCalles()\" > < div id = \"map\" > </ div > </ body > </ html >","title":"6. Buscador de Farmacias con Leaflet"},{"location":"farmacias_leaflet/#ejemplo-buscador-de-farmacias","text":"","title":"Ejemplo buscador de Farmacias"},{"location":"farmacias_leaflet/#paso-1visualizar-datos","text":"Visualizamos con QGIS para ver c\u00f3mo es, el archivo de /geoweb/datos/farmacias.geojson Convertir a GeoJson El archivo de faramacias lo hemos descargado del portal https://opendata-ajuntament.barcelona.cat/data/es/dataset/sanitat-farmacies . Para ver c\u00f3mo transformar y reproyectar un archivo CSV a GeoJson con Qgis mira el video 7","title":"Paso 1:Visualizar datos"},{"location":"farmacias_leaflet/#paso-2-crear-archivo-farmaciashtml","text":"Abrimos archivo mapabase.html y guardamos como File-->Save as farmacias.html A\u00f1adimos un titulo y la funci\u00f3n inicial initMapaFarmacias() de nuestro proyecto Llamamos a la funci\u00f3n initMapaFarmacias() en el body onLoad < html lang = \"es\" > < head > < title > Farmacias </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < link rel = \"stylesheet\" href = \"css/estilobase.css\" /> < script src = \"js/mapabase.js\" ></ script > < script > function initMapaFarmacias (){ init (); } </ script > </ head > < body onLoad = \"initMapaFarmacias()\" > < div id = \"map\" > </ div > </ body > </ html >","title":"Paso 2: Crear archivo farmacias.html"},{"location":"farmacias_leaflet/#paso-3anadir-plugin","text":"A\u00f1adimos Plugins al proyecto Podemos descargar plugins del directorio /dist y guardarlos en nuestros directorios /js o /css Tambi\u00e9n podemos utilizar la URL directamente (nuestro caso) < html lang = \"es\" > < head > < title > Farmacias </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < script src = \"https://calvinmetcalf.github.io/leaflet-ajax/dist/leaflet.ajax.js\" ></ script > < link rel = \"stylesheet\" href = \"css/estilobase.css\" /> < script src = \"js/mapabase.js\" ></ script > < script > function initMapaFarmacias (){ init (); } </ script > </ head > < body onLoad = \"initMapaFarmacias()\" > < div id = \"map\" > </ div > </ body > </ html >","title":"Paso 3:A\u00f1adir plugin"},{"location":"farmacias_leaflet/#paso-4cargamos-geojson-farmacias","text":"Miramos documentaci\u00f3n Leaflet-Ajax plugin https://github.com/calvinmetcalf/leaflet-ajax Miramos referencia L.Geojson https://leafletjs.com/reference-1.7.1.html#geojson Dentro de nuestro directorio /geoweb/js/ creamos el archivo farmacias.js var layerFarmacias ; var urlFarmacias = \"datos/farmacias.geojson\" ; function addDatosFarmacias () { layerFarmacias = new L . GeoJSON . AJAX ( urlFarmacias , { onEachFeature : function ( feature , layer ) { popupContent = \"<b>\" + feature . properties . EQUIPAMENT + \"</b>\" + \"<br>\" + feature . properties . TIPUS_VIA + \". \" + feature . properties . NOM_CARRER + \" \" + feature . properties . NUM_CARRER_1 + \"</b>\" ; layer . bindPopup ( popupContent ); }, pointToLayer : function ( feature , latlng ) { return L . circleMarker ( latlng , { radius : 6 , fillColor : \"#00ff00\" , color : \"#ffffff\" , weight : 3 , opacity : 1 , fillOpacity : 0.8 }); } }). addTo ( map ); map . setView ([ 41.399733 , 2.168598 ], 13 ); // controlCapas.addOverlay(layerFarmacias,\"Farmacias\"); }","title":"Paso 4:Cargamos GeoJson Farmacias"},{"location":"farmacias_leaflet/#paso-5","text":"A\u00f1adimos farmacias.js al archivo farmacias.html Llamamos funcion addDatosFarmacias() < html lang = \"es\" > < head > < title > Farmacias </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < script src = \"https://calvinmetcalf.github.io/leaflet-ajax/dist/leaflet.ajax.js\" ></ script > < link rel = \"stylesheet\" href = \"css/estilobase.css\" /> < script src = \"js/mapabase.js\" ></ script > < script src = \"js/farmacias.js\" ></ script > < script > function initMapaFarmacias (){ init (); addDatosFarmacias (); } </ script > </ head > < body onLoad = \"initMapaFarmacias()\" > < div id = \"map\" > </ div > </ body > </ html > Miramos que funcione","title":"Paso 5:"},{"location":"farmacias_leaflet/#paso-6buscar-farmacias","text":"Miramos documentaci\u00f3n Leaflet-Search plugin https://github.com/stefanocudini/leaflet-search A\u00f1adimos URL plugin < html lang = \"es\" > < head > < title > Farmacias </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < script src = \"https://calvinmetcalf.github.io/leaflet-ajax/dist/leaflet.ajax.js\" ></ script > < script src = \"https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.js\" ></ script > < link rel = \"stylesheet\" href = \"https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.css\" /> < link rel = \"stylesheet\" href = \"css/estilobase.css\" /> < script src = \"js/mapabase.js\" ></ script > < script src = \"js/farmacias.js\" ></ script > < script > function initMapaFarmacias (){ init (); addDatosFarmacias (); } </ script > </ head > < body onLoad = \"initMapaFarmacias()\" > < div id = \"map\" > </ div > </ body > </ html > A\u00f1adimos el control dentro de la funci\u00f3n addDatosFarmacias() de farmacias.js var layerFarmacias ; var urlFarmacias = \"datos/farmacias.geojson\" ; function addDatosFarmacias () { layerFarmacias = new L . GeoJSON . AJAX ( urlFarmacias , { onEachFeature : function ( feature , layer ) { popupContent = \"<b>\" + feature . properties . EQUIPAMENT + \"</b>\" + \"<br>\" + feature . properties . TIPUS_VIA + \". \" + feature . properties . NOM_CARRER + \" \" + feature . properties . NUM_CARRER_1 + \"</b>\" ; layer . bindPopup ( popupContent ); }, pointToLayer : function ( feature , latlng ) { return L . circleMarker ( latlng , { radius : 6 , fillColor : \"#00ff00\" , color : \"#ffffff\" , weight : 3 , opacity : 1 , fillOpacity : 0.8 }); } }). addTo ( map ); map . setView ([ 41.399733 , 2.168598 ], 13 ); // controlCapas.addOverlay(layerFarmacias,\"Farmacias\"); var searchControl = new L . Control . Search ({ layer : layerFarmacias , initial : false , propertyName : 'EQUIPAMENT' , circleLocation : true , moveToLocation : function ( latlng ) { map . setView ( latlng , 17 ); } }); searchControl . on ( 'search:locationfound' , function ( e ) { e . layer . openPopup (); }); map . addControl ( searchControl ); } Probamos visor y buscamos farm\u00e1cias","title":"Paso 6:Buscar Farmacias"},{"location":"farmacias_leaflet/#paso-7-anadimos-el-plugin-de-cluster","text":"Este es uno de lo plugins m\u00e1s utilizados en Lealfte Miramos documentaci\u00f3n https://github.com/Leaflet/Leaflet.markercluster A\u00f1adimos URL plugin < html lang = \"es\" > < head > < title > Farmacias </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < script src = \"https://calvinmetcalf.github.io/leaflet-ajax/dist/leaflet.ajax.js\" ></ script > < script src = \"https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.js\" ></ script > < link rel = \"stylesheet\" href = \"https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.css\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.css\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.Default.css\" /> < script src = \"https://unpkg.com/leaflet.markercluster@1.4.1/dist/leaflet.markercluster.js\" ></ script > < link rel = \"stylesheet\" href = \"css/estilobase.css\" /> < script src = \"js/mapabase.js\" ></ script > < script src = \"js/farmacias.js\" ></ script > < script > function initMapaFarmacias (){ init (); addDatosFarmacias (); } </ script > </ head > < body onLoad = \"initMapaFarmacias()\" > < div id = \"map\" > </ div > </ body > </ html > A\u00f1adimos la capa dentro de la funci\u00f3n addDatosFarmacias() de farmacias.js var layerFarmacias ; var urlFarmacias = \"datos/farmacias.geojson\" ; function addDatosFarmacias () { var puntosCluster = L . markerClusterGroup (); layerFarmacias = new L . GeoJSON . AJAX ( urlFarmacias , { onEachFeature : function ( feature , layer ) { popupContent = \"<b>\" + feature . properties . EQUIPAMENT + \"</b>\" + \"<br>\" + feature . properties . TIPUS_VIA + \". \" + feature . properties . NOM_CARRER + \" \" + feature . properties . NUM_CARRER_1 + \"</b>\" ; layer . bindPopup ( popupContent ); }, pointToLayer : function ( feature , latlng ) { puntosCluster . addLayer ( L . marker ( latlng )); return L . circleMarker ( latlng , { radius : 6 , fillColor : \"#00ff00\" , color : \"#ffffff\" , weight : 3 , opacity : 1 , fillOpacity : 0.8 }); } }). addTo ( map ); map . setView ([ 41.399733 , 2.168598 ], 13 ); controlCapas . addOverlay ( layerFarmacias , \"Farmacias\" ); controlCapas . addOverlay ( puntosCluster , \"Cluster\" ); var searchControl = new L . Control . Search ({ layer : layerFarmacias , initial : false , propertyName : 'EQUIPAMENT' , circleLocation : true , moveToLocation : function ( latlng ) { map . setView ( latlng , 17 ); } }); searchControl . on ( 'search:locationfound' , function ( e ) { e . layer . openPopup (); }); map . addControl ( searchControl ); } Probamos visualizaci\u00f3n \u00bfSubimos el ejemplo al GitHub? Acordaros tambi\u00e9s de actualizar index.html git pull git add . git commit -m \"ejemplos leaflet\" git push origin main Descargar ejemplos sesion 2 ejemplos-sesion2.zip","title":"Paso 7: \u00bfA\u00f1adimos el plugin de Cluster?"},{"location":"farmacias_leaflet/#practica-libre-no-puntuable-para-cargar-geojsons-con-plugin-geojson-ajax","text":"Abre mapabase.html --> guardar c\u00f3mo mapatest.html A\u00f1ade el plugin de GeoJSON AJAX Prueba las diferentes formas de trabajar con GeoJSONs y a\u00f1\u00e1delas como overlayMaps en el control de capas GeoJson por defecto var comarcasPoligonoDefault = new L . GeoJSON . AJAX ( 'datos/comarcas.geojson' ). addTo ( map ); var farmaciasPuntoDefault = new L . GeoJSON . AJAX ( 'datos/farmacias.geojson' ). addTo ( map ); var carrilsBiciLineaDefault = new L . GeoJSON . AJAX ( 'datos/carrils-bici.geojson' ). addTo ( map ); GeoJson con estilos var comarcasPoligonoStyle = new L . GeoJSON . AJAX ( 'datos/comarcas.geojson' , { style : function ( feature ) { return { fillColor : \"#fab81e\" , color : \"#ffffff\" , weight : 2 , opacity : 1 , fillOpacity : 0.5 } } }). addTo ( map ); var farmaciasPuntoStyle = new L . GeoJSON . AJAX ( 'datos/farmacias.geojson' , { pointToLayer : function ( feature , latlng ) { return L . circleMarker ( latlng , { radius : 6 , fillColor : \"#00ff00\" , color : \"#ffffff\" , weight : 3 , opacity : 1 , fillOpacity : 0.8 }) } }). addTo ( map ); var carrilsBiciLineaStyle = new L . GeoJSON . AJAX ( 'datos/carrils-bici.geojson' , { style : function ( feature ) { return { color : \"#d607f2\" , weight : 6 } } }). addTo ( map ); GeoJson con estilos y Popups var comarcasPoligonoStylePop = new L . GeoJSON . AJAX ( 'datos/comarcas.geojson' , { style : function ( feature ) { return { fillColor : \"#fab81e\" , color : \"#ffffff\" , weight : 2 , opacity : 1 , fillOpacity : 0.5 } }, onEachFeature : function ( feature , layer ) { popupContentPol = \"<b>\" + feature . properties . NOM + \"</b>\" ; layer . bindPopup ( popupContentPol ); }, }). addTo ( map ); var farmaciasPuntoStylePop = new L . GeoJSON . AJAX ( 'datos/farmacias.geojson' , { pointToLayer : function ( feature , latlng ) { return L . circleMarker ( latlng , { radius : 6 , fillColor : \"#00ff00\" , color : \"#ffffff\" , weight : 3 , opacity : 1 , fillOpacity : 0.8 }) }, onEachFeature : function ( feature , layer ) { popupContentP = \"<b>\" + feature . properties . EQUIPAMENT + \"</b>\" ; layer . bindPopup ( popupContentP ); }, }). addTo ( map ); var carrilsBiciLineaStylePop = new L . GeoJSON . AJAX ( 'datos/carrils-bici.geojson' , { style : function ( feature ) { return { color : \"#d607f2\" , weight : 6 } }, onEachFeature : function ( feature , layer ) { popupContentL = \"<b>\" + feature . properties . TOOLTIP + \"</b>\" ; layer . bindPopup ( popupContentL ); }, }). addTo ( map ); GeoJson remoto var rivers = new L . GeoJSON . AJAX ( 'https://raw.githubusercontent.com/nvkelso/natural-earth-vector/master/geojson/ne_10m_rivers_europe.geojson' , { style : function ( feature ) { return { color : \"#00ffe1\" , weight : 6 } }, }). addTo ( map );","title":"Pr\u00e1ctica libre no puntuable para cargar GeoJSONs con plugin GeoJSON AJAX"},{"location":"farmacias_leaflet/#plugin-geosearch-ejemplo-extra-buscador-de-callejero","text":"Plugin que permite connectar con servicios de Geocodificaci\u00f3n * Plugin https://github.com/MuellerMatthew/L.GeoSearch < html lang = \"es\" > < head > < title > Callejero </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet-geosearch@2.7.0/assets/css/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet-geosearch@2.7.0/dist/bundle.min.js\" ></ script > < link rel = \"stylesheet\" href = \"css/estilobase.css\" /> < script src = \"js/mapabase.js\" ></ script > < script > function initMapaCalles () { init (); new GeoSearch . GeoSearchControl ({ // provider: new GeoSearch.OpenStreetMapProvider() provider : new GeoSearch . EsriProvider () }). addTo ( map ); } </ script > </ head > < body onLoad = \"initMapaCalles()\" > < div id = \"map\" > </ div > </ body > </ html >","title":"Plugin Geosearch: Ejemplo extra  buscador de Callejero"},{"location":"introduccion_a_cesium/","text":"Recursos Cesium JS Web https://cesiumjs.org/ API https://cesiumjs.org/refdoc/ Ejemplos https://cesiumjs.org/Cesium/Build/Apps/Sandcastle/index.html Definici\u00f3n https://en.wikipedia.org/wiki/Virtual_globe Tutoriales http://cesiumjs.org/tutorials.html http://cesiumjs.org/demos.html http://developer.digitalglobe.com/docs/maps-api/integration-examples/maps-apicesium-js/ http://cesiumjs.org/Cesium/Apps/Sandcastle/index.html Videos https://www.youtube.com/watch?v=ELYsCn-caXY https://www.youtube.com/watch?v=YZ_2T6dgSw4 https://www.youtube.com/watch?v=S745qetDaCc https://www.youtube.com/watch?v=lhzYRnNYmwo Descripci\u00f3n Cesium JS es una libreria basada en WebGL, creada por la empresa AGI, que permite trabajar con globos virtuales 3D Cesium destaca por haber creado de forma abierta las especificaciones de : * Formato GLTF * Especificaci\u00f3n 3D Vector-Tiles \u00bfC\u00f3mo empezar? Nos damos de alta en https://cesium.com/ion/signup?gs=true Copiamos nuestro token Access Tokens Mapa b\u00e1sico Creamos cesium-basico.html dentro directorio geoweb Ejemplo b\u00e1sico : < html lang = \"es\" > < head > < title > Ejemplo 0 Cesium b\u00e1sico </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < script src = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Cesium.js\" ></ script > < link href = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Widgets/widgets.css\" rel = \"stylesheet\" > < style > # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } </ style > < script > function Init () { Cesium . Ion . defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY' ; map = new Cesium . Viewer ( 'map' ); //add Properties /* map.camera.flyTo({ destination : Cesium.Cartesian3.fromDegrees( 2.1806,41.4003, 15000) }); */ }; </ script > </ head > < body onload = \"Init()\" > < div id = \"map\" ></ div > </ body > </ html > Mapa personalizado Creamos cesium-personalizado.html < html lang = \"es\" > < head > < title > Ejemplo 0 Cesium b\u00e1sico </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < script src = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Cesium.js\" ></ script > < link href = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Widgets/widgets.css\" rel = \"stylesheet\" > < style > # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } </ style > < script > function Init () { Cesium . Ion . defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY' ; map = new Cesium . Viewer ( 'map' , { imageryProvider : new Cesium . ArcGisMapServerImageryProvider ({ url : '//services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/' , }), timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); map . camera . flyTo ({ destination : Cesium . Cartesian3 . fromDegrees ( 2.1806 , 41.4003 , 15000 ), orientation : { pitch : Cesium . Math . toRadians ( - 45.0 ) }, }); }; </ script > </ head > < body onload = \"Init()\" > < div id = \"map\" ></ div > </ body > </ html > Mapa con datos externos GeoJSON Creamos cesium-ruta.html < html lang = \"es\" > < head > < title > Ruta cesium </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < script src = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Cesium.js\" ></ script > < link href = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Widgets/widgets.css\" rel = \"stylesheet\" > < style > # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } </ style > < script > function Init () { Cesium . Ion . defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY' ; map = new Cesium . Viewer ( 'map' , { imageryProvider : new Cesium . ArcGisMapServerImageryProvider ({ url : '//services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/' , }), timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); GPX_lyr = Cesium . GeoJsonDataSource . load ( 'datos/ruta.geojson' , { stroke : Cesium . Color . RED , strokeWidth : 3 , clampToGround : true }); GPX_lyr . then ( function ( dataSource ) { map . dataSources . add ( dataSource ); map . flyTo ( dataSource ); }); }; </ script > </ head > < body onload = \"Init()\" > < div id = \"map\" ></ div > </ body > </ html > Mapa Cesium con Mapbox y/o ICGC Creamos cesium-mapbox-icgc.html < html lang = \"es\" > < head > < title > Ejemplo 0 Cesium b\u00e1sico </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < script src = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Cesium.js\" ></ script > < link href = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Widgets/widgets.css\" rel = \"stylesheet\" > < style > # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } </ style > < script > function Init () { var imageReference = new Cesium . UrlTemplateImageryProvider ({ url : 'https://api.mapbox.com/styles/v1/gismasterm2/cjqg9p2lm00442rqm4vlk89rt/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' }); /* var imageReference=new Cesium.createOpenStreetMapImageryProvider({ url: 'https://geoserveis.icgc.cat/icc_mapesmultibase/noutm/wmts/orto/GRID3857/', fileExtension: 'jpeg', maximumLevel: 19, credit: 'Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya' }); */ Cesium . Ion . defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY' ; map = new Cesium . Viewer ( 'map' , { imageryProvider : imageReference , timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); map . camera . flyTo ({ destination : Cesium . Cartesian3 . fromDegrees ( 2.1806 , 41.4003 , 15000 ), orientation : { pitch : Cesium . Math . toRadians ( - 45.0 ) }, }); }; </ script > </ head > < body onload = \"Init()\" > < div id = \"map\" ></ div > </ body > </ html > Mapa con capas Creamos cesium-capas.html < html lang = \"es\" > < head > < title > Ejemplo extra </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < script src = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Cesium.js\" ></ script > < link href = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Widgets/widgets.css\" rel = \"stylesheet\" > < script src = \"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\" ></ script > < style > # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } html { height : 100 % ; } # capas { position : absolute ; top : 10 px ; left : 10 px ; z-index : 1000 ; width : auto ; height : auto ; background-color : white ; } li { list-style-type : none ; } ul { padding : 10 px !important } </ style > < script > function Init () { var imageReference = new Cesium . UrlTemplateImageryProvider ({ url : 'https://api.mapbox.com/styles/v1/gismasterm2/cjqg9p2lm00442rqm4vlk89rt/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' }); Cesium . Ion . defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY' ; map = new Cesium . Viewer ( 'map' , { imageryProvider : imageReference , timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); map . camera . flyTo ({ destination : Cesium . Cartesian3 . fromDegrees ( 2.1806 , 41.4003 , 15000 ), orientation : { pitch : Cesium . Math . toRadians ( - 45.0 ) }, }); var overlay = map . imageryLayers ; var ortoICGC = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : 'https://geoserveis.icgc.cat/icc_mapesmultibase/noutm/wmts/orto/GRID3857/' , fileExtension : 'jpeg' , maximumLevel : 19 , credit : 'Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya' })); ortoICGC . show = false ; var topoICGC = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : 'https://geoserveis.icgc.cat/icc_mapesmultibase/noutm/wmts/topo/GRID3857/' , fileExtension : 'jpeg' , maximumLevel : 19 , credit : 'Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya' })); topoICGC . show = false ; var topo2ICGC = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : 'https://tilemaps.icgc.cat/mapfactory/wmts/topo_suau/CAT3857/' , fileExtension : 'png' , maximumLevel : 19 , credit : 'Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya' })); topo2ICGC . show = false ; var orto46 = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : 'https://tilemaps.icgc.cat/mapfactory/wmts/orto46/CAT3857/' , fileExtension : 'png' , maximumLevel : 17 , credit : 'Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya' })); orto46 . show = false ; 2 $ ( '.chk_capes' ). on ( 'click' , function () { var layer = $ ( this ). val (); var estado = $ ( this ). prop ( 'checked' ); if ( layer == 'ortoICGC' ) { ortoICGC . show = estado ; } else if ( layer == 'topoICGC' ) { topoICGC . show = estado ; } else if ( layer == 'topo2ICGC' ) { topo2ICGC . show = estado ; } else if ( layer == 'orto46' ) { orto46 . show = estado ; } }); //fin onclick }; </ script > </ head > < body onload = \"Init()\" > < div id = \"capas\" > < ul > < li > Capas </ li > < li > < input type = \"checkbox\" value = \"ortoICGC\" class = \"chk_capes\" > ortoICGC </ li > < li > < input type = \"checkbox\" value = \"topoICGC\" class = \"chk_capes\" > topoICGC </ li > < li > < input type = \"checkbox\" value = \"topo2ICGC\" class = \"chk_capes\" > topo2ICGC </ li > < li > < input type = \"checkbox\" value = \"orto46\" class = \"chk_capes\" > orto46 </ li > </ div > < div id = \"map\" ></ div > </ body > </ html >","title":"Introduccion a cesium"},{"location":"introduccion_a_cesium/#recursos-cesium-js","text":"Web https://cesiumjs.org/ API https://cesiumjs.org/refdoc/ Ejemplos https://cesiumjs.org/Cesium/Build/Apps/Sandcastle/index.html Definici\u00f3n https://en.wikipedia.org/wiki/Virtual_globe Tutoriales http://cesiumjs.org/tutorials.html http://cesiumjs.org/demos.html http://developer.digitalglobe.com/docs/maps-api/integration-examples/maps-apicesium-js/ http://cesiumjs.org/Cesium/Apps/Sandcastle/index.html Videos https://www.youtube.com/watch?v=ELYsCn-caXY https://www.youtube.com/watch?v=YZ_2T6dgSw4 https://www.youtube.com/watch?v=S745qetDaCc https://www.youtube.com/watch?v=lhzYRnNYmwo","title":"Recursos Cesium JS"},{"location":"introduccion_a_cesium/#descripcion","text":"Cesium JS es una libreria basada en WebGL, creada por la empresa AGI, que permite trabajar con globos virtuales 3D Cesium destaca por haber creado de forma abierta las especificaciones de : * Formato GLTF * Especificaci\u00f3n 3D Vector-Tiles","title":"Descripci\u00f3n"},{"location":"introduccion_a_cesium/#como-empezar","text":"Nos damos de alta en https://cesium.com/ion/signup?gs=true Copiamos nuestro token Access Tokens","title":"\u00bfC\u00f3mo empezar?"},{"location":"introduccion_a_cesium/#mapa-basico","text":"Creamos cesium-basico.html dentro directorio geoweb Ejemplo b\u00e1sico : < html lang = \"es\" > < head > < title > Ejemplo 0 Cesium b\u00e1sico </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < script src = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Cesium.js\" ></ script > < link href = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Widgets/widgets.css\" rel = \"stylesheet\" > < style > # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } </ style > < script > function Init () { Cesium . Ion . defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY' ; map = new Cesium . Viewer ( 'map' ); //add Properties /* map.camera.flyTo({ destination : Cesium.Cartesian3.fromDegrees( 2.1806,41.4003, 15000) }); */ }; </ script > </ head > < body onload = \"Init()\" > < div id = \"map\" ></ div > </ body > </ html >","title":"Mapa b\u00e1sico"},{"location":"introduccion_a_cesium/#mapa-personalizado","text":"Creamos cesium-personalizado.html < html lang = \"es\" > < head > < title > Ejemplo 0 Cesium b\u00e1sico </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < script src = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Cesium.js\" ></ script > < link href = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Widgets/widgets.css\" rel = \"stylesheet\" > < style > # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } </ style > < script > function Init () { Cesium . Ion . defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY' ; map = new Cesium . Viewer ( 'map' , { imageryProvider : new Cesium . ArcGisMapServerImageryProvider ({ url : '//services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/' , }), timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); map . camera . flyTo ({ destination : Cesium . Cartesian3 . fromDegrees ( 2.1806 , 41.4003 , 15000 ), orientation : { pitch : Cesium . Math . toRadians ( - 45.0 ) }, }); }; </ script > </ head > < body onload = \"Init()\" > < div id = \"map\" ></ div > </ body > </ html >","title":"Mapa personalizado"},{"location":"introduccion_a_cesium/#mapa-con-datos-externos-geojson","text":"Creamos cesium-ruta.html < html lang = \"es\" > < head > < title > Ruta cesium </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < script src = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Cesium.js\" ></ script > < link href = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Widgets/widgets.css\" rel = \"stylesheet\" > < style > # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } </ style > < script > function Init () { Cesium . Ion . defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY' ; map = new Cesium . Viewer ( 'map' , { imageryProvider : new Cesium . ArcGisMapServerImageryProvider ({ url : '//services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/' , }), timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); GPX_lyr = Cesium . GeoJsonDataSource . load ( 'datos/ruta.geojson' , { stroke : Cesium . Color . RED , strokeWidth : 3 , clampToGround : true }); GPX_lyr . then ( function ( dataSource ) { map . dataSources . add ( dataSource ); map . flyTo ( dataSource ); }); }; </ script > </ head > < body onload = \"Init()\" > < div id = \"map\" ></ div > </ body > </ html >","title":"Mapa con datos externos GeoJSON"},{"location":"introduccion_a_cesium/#mapa-cesium-con-mapbox-yo-icgc","text":"Creamos cesium-mapbox-icgc.html < html lang = \"es\" > < head > < title > Ejemplo 0 Cesium b\u00e1sico </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < script src = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Cesium.js\" ></ script > < link href = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Widgets/widgets.css\" rel = \"stylesheet\" > < style > # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } </ style > < script > function Init () { var imageReference = new Cesium . UrlTemplateImageryProvider ({ url : 'https://api.mapbox.com/styles/v1/gismasterm2/cjqg9p2lm00442rqm4vlk89rt/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' }); /* var imageReference=new Cesium.createOpenStreetMapImageryProvider({ url: 'https://geoserveis.icgc.cat/icc_mapesmultibase/noutm/wmts/orto/GRID3857/', fileExtension: 'jpeg', maximumLevel: 19, credit: 'Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya' }); */ Cesium . Ion . defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY' ; map = new Cesium . Viewer ( 'map' , { imageryProvider : imageReference , timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); map . camera . flyTo ({ destination : Cesium . Cartesian3 . fromDegrees ( 2.1806 , 41.4003 , 15000 ), orientation : { pitch : Cesium . Math . toRadians ( - 45.0 ) }, }); }; </ script > </ head > < body onload = \"Init()\" > < div id = \"map\" ></ div > </ body > </ html >","title":"Mapa Cesium con Mapbox y/o ICGC"},{"location":"introduccion_a_cesium/#mapa-con-capas","text":"Creamos cesium-capas.html < html lang = \"es\" > < head > < title > Ejemplo extra </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < script src = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Cesium.js\" ></ script > < link href = \"https://cesiumjs.org/releases/1.65/Build/Cesium/Widgets/widgets.css\" rel = \"stylesheet\" > < script src = \"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\" ></ script > < style > # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } html { height : 100 % ; } # capas { position : absolute ; top : 10 px ; left : 10 px ; z-index : 1000 ; width : auto ; height : auto ; background-color : white ; } li { list-style-type : none ; } ul { padding : 10 px !important } </ style > < script > function Init () { var imageReference = new Cesium . UrlTemplateImageryProvider ({ url : 'https://api.mapbox.com/styles/v1/gismasterm2/cjqg9p2lm00442rqm4vlk89rt/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' }); Cesium . Ion . defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY' ; map = new Cesium . Viewer ( 'map' , { imageryProvider : imageReference , timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); map . camera . flyTo ({ destination : Cesium . Cartesian3 . fromDegrees ( 2.1806 , 41.4003 , 15000 ), orientation : { pitch : Cesium . Math . toRadians ( - 45.0 ) }, }); var overlay = map . imageryLayers ; var ortoICGC = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : 'https://geoserveis.icgc.cat/icc_mapesmultibase/noutm/wmts/orto/GRID3857/' , fileExtension : 'jpeg' , maximumLevel : 19 , credit : 'Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya' })); ortoICGC . show = false ; var topoICGC = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : 'https://geoserveis.icgc.cat/icc_mapesmultibase/noutm/wmts/topo/GRID3857/' , fileExtension : 'jpeg' , maximumLevel : 19 , credit : 'Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya' })); topoICGC . show = false ; var topo2ICGC = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : 'https://tilemaps.icgc.cat/mapfactory/wmts/topo_suau/CAT3857/' , fileExtension : 'png' , maximumLevel : 19 , credit : 'Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya' })); topo2ICGC . show = false ; var orto46 = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : 'https://tilemaps.icgc.cat/mapfactory/wmts/orto46/CAT3857/' , fileExtension : 'png' , maximumLevel : 17 , credit : 'Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya' })); orto46 . show = false ; 2 $ ( '.chk_capes' ). on ( 'click' , function () { var layer = $ ( this ). val (); var estado = $ ( this ). prop ( 'checked' ); if ( layer == 'ortoICGC' ) { ortoICGC . show = estado ; } else if ( layer == 'topoICGC' ) { topoICGC . show = estado ; } else if ( layer == 'topo2ICGC' ) { topo2ICGC . show = estado ; } else if ( layer == 'orto46' ) { orto46 . show = estado ; } }); //fin onclick }; </ script > </ head > < body onload = \"Init()\" > < div id = \"capas\" > < ul > < li > Capas </ li > < li > < input type = \"checkbox\" value = \"ortoICGC\" class = \"chk_capes\" > ortoICGC </ li > < li > < input type = \"checkbox\" value = \"topoICGC\" class = \"chk_capes\" > topoICGC </ li > < li > < input type = \"checkbox\" value = \"topo2ICGC\" class = \"chk_capes\" > topo2ICGC </ li > < li > < input type = \"checkbox\" value = \"orto46\" class = \"chk_capes\" > orto46 </ li > </ div > < div id = \"map\" ></ div > </ body > </ html >","title":"Mapa con capas"},{"location":"introduccion_a_las_tecnologias_geoweb/","text":"Introducci\u00f3n a las tecnolog\u00edas GeoWeb Conjunto de tecnolog\u00edas, t\u00e9cnicas y lenguajes que permiten exponer y consumir v\u00eda WWW (http) todas aquellas funcionalidades propias de los llamados sistemas de Informaci\u00f3n geogr\u00e1ficos (GIS) Temario Presentaci\u00f3n de m\u00f3dulo Introducci\u00f3n a las tecnolog\u00edas GeoWeb Conceptos clave geoweb Tecnolog\u00edas geoweb \u00bfC\u00f3mo vamos a trabajar? Ver presentaci\u00f3n Introduccion-geoweb.pptx","title":"1. Introducci\u00f3n a la GeoWeb"},{"location":"introduccion_a_las_tecnologias_geoweb/#introduccion-a-las-tecnologias-geoweb","text":"Conjunto de tecnolog\u00edas, t\u00e9cnicas y lenguajes que permiten exponer y consumir v\u00eda WWW (http) todas aquellas funcionalidades propias de los llamados sistemas de Informaci\u00f3n geogr\u00e1ficos (GIS) Temario Presentaci\u00f3n de m\u00f3dulo Introducci\u00f3n a las tecnolog\u00edas GeoWeb Conceptos clave geoweb Tecnolog\u00edas geoweb \u00bfC\u00f3mo vamos a trabajar?","title":"Introducci\u00f3n a las tecnolog\u00edas GeoWeb"},{"location":"introduccion_a_las_tecnologias_geoweb/#ver-presentacion-introduccion-geowebpptx","text":"","title":"Ver presentaci\u00f3n Introduccion-geoweb.pptx"},{"location":"introduccion_a_leaflet/","text":"4. Introduccion a Leaflet Leaflet es una librer\u00eda JavaScript opensource utilizada por Flickr, Wikimedia, foursquare, OSM, carto, GIS Cloud, Washington Post, Wall Street Journal, Geocaching.com, etc. Puntos fuertes de la API de Leaflet son: Facilidad para aprender y usar Soporte m\u00f3vil HTML 5, CSS3 y pasarela WebGL Funciona tanto en los modernos como en los viejos navegadores web Muchos plugins API bien documentada Recursos Leaflet JS Web http://leafletjs.com/ API http://leafletjs.com/reference.html Plugins http://leafletjs.com/plugins.html Definici\u00f3n https://en.wikipedia.org/wiki/Leaflet_(software) Tutoriales http://www.digital-geography.com/category/leaflet-js/ http://leafletjs.com/examples.html http://maptimeboston.github.io/leaflet-intro/ http://asmaloney.com/2014/01/code/creating-an-interactive-map-with-leaflet-andopenstreetmap/ http://mappinggis.com/2013/06/como-crear-un-mapa-con-leaflet/ Videos https://www.youtube.com/watch?v=7Tll2k57ork https://egghead.io/lessons/javascript-get-started-with-leafletjs-mapping https://www.youtube.com/watch?v=1VYvjHb6KeM https://www.youtube.com/watch?v=TseoObyFg8E \u00bfC\u00f3mo empezar? Descargamos geoweb.zip y descomprimir dentro de nuestro directorio geoweb del servidor web En VSCODE creamos la p\u00e1gina leaflet-basico.html dentro directorio geoweb A\u00f1adiremos el siguiente c\u00f3digo que es la estructura b\u00e1sica de una p\u00e1gina : < html lang = \"es\" > < head > < title > Leaflet b\u00e1sico </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > </ head > < body > </ body > </ html > Vamos a crear un mapa con Leaflet, para ello incluiremos en la cabecera <head> de una p\u00e1gina web la librer\u00eda JavaScript leaflet.js (que contiene el c\u00f3digo de la liber\u00eda) y la hoja de estilo leaflet.css (con la hoja de estilos de la librer\u00eda): < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > Dentro de la etiqueta <body> encontramos el marcado para el mapa, que genera un \u00fanico elemento de documento. Tambi\u00e9n damos al contenedor un atributo id para que podamos hacer referencia a \u00e9l en nuestro c\u00f3digo: < body > < div id = \"map\" ></ div > </ body > Nuestra p\u00e1gina tendria este aspecto < html lang = \"es\" > < head > < title > Leaflet b\u00e1sico </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > </ head > < body > < div id = \"map\" ></ div > </ body > </ html > A\u00f1adiremos un estilo al mapa para que ocupe toda la p\u00e1gina web, dentro la etiqueta <style/> dentro del <head> < style > body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } </ style > Ahora nuestra p\u00e1gina tendria este aspecto < html lang = \"es\" > < head > < title > Leaflet b\u00e1sico </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < style > body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } </ style > </ head > < body > < div id = \"map\" ></ div > </ body > </ html > Ahora crearemos y empezaremos a programar dentro del tag <script> justo encima de </head> Crearemos la funci\u00f3n Init para crear un Mapa y a\u00f1adir una capa de OSM L.map es la clase central de la API. Se usa para crear y manipular el mapa. El mapa por defecto tiene dos controles: uno de zoom y uno de atribuci\u00f3n. L.map L.map Es el constructor principal de Leaflet Propiedades: https://leafletjs.com/reference-1.7.1.html#map-factory M\u00e9todos: https://leafletjs.com/reference-1.7.1.html#map-methods-for-modifying-map-state Eventos: https://leafletjs.com/reference-1.7.1.html#map-event L.tileLayer L.tileLayer Es un tipo de capa raster que se a\u00f1ade al objeto L.map Referencia: https://leafletjs.com/reference-1.7.1.html#tilelayer < script > var map , capa1 ; function init (){ map = L . map ( \"map\" ,{ center : [ 41.6863 , 1.8382 ], zoom : 8 }); capa1 = L . tileLayer ( \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" , { maxZoom : 19 , minZoom : 1 , attribution : \"OSM\" }); capa1 . addTo ( map ); } </ script > Llamaremos a la funci\u00f3n desde el evento onload del <body> < body onLoad = \"init()\" > Leaflet b\u00e1sico < html lang = \"es\" > < head > < title > Leaflet b\u00e1sico </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < style > body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } </ style > < script > var map , capa1 ; function init (){ map = L . map ( \"map\" ,{ center : [ 41.6863 , 1.8382 ], zoom : 8 }); capa1 = L . tileLayer ( \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" , { maxZoom : 19 , minZoom : 1 , attribution : \"OSM\" }); capa1 . addTo ( map ); } </ script > </ head > < body onLoad = \"init()\" > < div id = \"map\" ></ div > </ body > </ html > \u00bfQue acabamos de hacer? Miramos dentro del tag <script> Hemos creado la variable global map Usamos L.map() para instanciar el objeto mapa, pasando el id del <div> d\u00f3nde ir\u00e1 el mapa Utilizamos las opciones center y zoom iniciar el mapa Tambi\u00e9n podr\u00edamos utilizar el m\u00e9todo setView map =L.map('map').setView([41.6863, 1.8382], 8);) Usamos L.tileLayer() para crear una capa base en un servidor OSM de tiles. {z}/{x}/{y}. Tambi\u00e9n pasamos algunas opciones Attribution : atribuci\u00f3n de la capa maxZoom y minZoom :niveles de zoom. Usamos m\u00e9todo addTo() para a\u00f1adir la capa al mapa Si quisieramos a\u00f1adir un punto al mapa L . marker ([ 41.3954 , 2.16859 ]). addTo ( map ); Si quisieramos a\u00f1adir un popup al punto L . marker ([ 41.3954 , 2.16859 ]). addTo ( map ). bindPopup ( 'Hola punto' ); Si quisieramos que el popup estuviera abierto por defecto L . marker ([ 41.3954 , 2.16859 ]). addTo ( map ). bindPopup ( 'Hola punto' ). openPopup (); Lo mismo pero programando diferente var punto = L . marker ([ 41.3954 , 2.16859 ]); punto . addTo ( map ); punto . bindPopup ( 'Hola punto' ); punto . openPopup (); Si quiero a\u00f1adir un punto de tipo c\u00edrculo, con opciones (vector) var punto = L . circleMarker ([ 41.3954 , 2.16859 ],{ color : '#ffffff' , fillColor : '#00ff00' , fillOpacity : 0.9 , radius : 8 }); punto . addTo ( map ); punto . bindPopup ( 'Hola punto' ); punto . openPopup (); Si quisieramos a\u00f1adir un punto con estilo al hacer clic en el mapa(Evento) map . on ( 'click' , function ( e ) { new L . circleMarker ( e . latlng , { color : '#ffffff' , fillColor : '#00ff00' , fillOpacity : 0.9 , radius : 8 }). addTo ( map ) . bindPopup ( e . latlng . lat + \",\" + e . latlng . lng ) . openPopup (); }); \u00bfSubimos el ejemplo al GitHub? git pull git add . git commit -m \"primer ejemplo leaflet\" git push Ejemplo 1 Controles A\u00f1adimos controles de capas y escala. Creamos la p\u00e1gina leaflet-controles.html dentro directorio geoweb L.control.layers L.control.layers Es un control que nos permite activar y desactivar capas base (baseLayers) y \"overlays\" Referencia: https://leafletjs.com/reference-1.7.1.html#control-layers L.control.scale Es un control a\u00f1ade un escala gr\u00e1fica del mapa Referencia: https://leafletjs.com/reference-1.7.1.html#control-scale < html lang = \"es\" > < head > < title > Ejemplo 1 Leaflet-controles </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < style > body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } </ style > < script > var map , osm , esri , terreno ; var controlCapas ; var controlEscala ; function init () { map = L . map ( 'map' ). setView ([ 41.6863 , 1.8382 ], 8 ); esri = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}' , { maxZoom : 17 , minZoom : 1 , attribution : 'Tiles \u00a9 Esri' , }). addTo ( map ); osm = L . tileLayer ( 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png' , { maxZoom : 19 , minZoom : 1 , attribution : 'OSM' }); terreno = L . tileLayer ( 'http://{s}.tile.stamen.com/terrain-background/{z}/{x}/{y}.png' , { maxZoom : 19 , attribution : 'Stamen terrain' , opacity : 0.5 }); var baseMaps = { \"Orto_esri\" : esri , \"Mapa_osm\" : osm }; var overlayMaps = { \"Terrain\" : terreno }; controlCapas = L . control . layers ( baseMaps , overlayMaps ); controlCapas . addTo ( map ); controlEscala = L . control . scale (); controlEscala . addTo ( map ); } </ script > </ head > < body onLoad = \"init()\" > < div id = \"map\" > </ div > </ body > </ html > Pregunta \u00bfComo lo har\u00edamos para ver el control de capas abierto por defecto? Ejemplo 2 Provider Creamos la p\u00e1gina leaflet-provider.html dentro directorio geoweb \u00bfQue mapas de fondo puedo a\u00f1adir? http://leaflet-extras.github.io/leaflet-providers/preview/ < html lang = \"es\" > < head > < title > Ejemplo Leaflet provider </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < style > body { margin : 0 ; } # map { height : 100 % ; width : 100 % ; background-color : #ffffff } </ style > < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < script > var map , osm , controlCapas ; function init () { map = L . map ( 'map' , { center : [ 39.6863 , 2.8382 ], zoom : 8 }); osm = L . tileLayer ( 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png' , { maxZoom : 19 , minZoom : 1 , attribution : '&copy; <a href=\"http://www.openstreetmap.org/copyright\"/>OpenStreetMap</a>' }). addTo ( map ); var OpenStreetMap_DE = L . tileLayer ( 'http://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png' , { attribution : '&copy; <a href=\"http://www.openstreetmap.org/copyright\"/>OpenStreetMap</a>' }); var OpenStreetMap_HOT = L . tileLayer ( 'http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png' , { attribution : '&copy; <a href=\"http://www.openstreetmap.org/copyright\"/>OpenStreetMap</a>, Tiles courtesy of <a href=\"http://hot.openstreetmap.org/\" target=\"_blank\"/>Humanitarian OpenStreetMapTeam</a>' }); var Hydda_Base = L . tileLayer ( 'http://{s}.tile.openstreetmap.se/hydda/base/{z}/{x}/{y}.png' , { minZoom : 0 , maxZoom : 18 , attribution : 'Tiles courtesy of <a href=\"http://openstreetmap.se/\" target=\"_blank\"/>OpenStreetMap Sweden</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\"/>OpenStreetMap</a>' }); var Stamen_Toner = L . tileLayer ( 'http://{s}.tile.stamen.com/toner/{z}/{x}/{y}.png' , { attribution : 'Map tiles by <a href=\"http://stamen.com\"/>Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\"/>CC BY 3.0</a> &mdash; Map data &copy;<a href=\"http://www.openstreetmap.org/copyright\"/>OpenStreetMap</a>' , subdomains : 'abcd' , minZoom : 0 , maxZoom : 20 }); var Stamen_Watercolor = L . tileLayer ( 'http://{s}.tile.stamen.com/watercolor/{z}/{x}/{y}.png' , { attribution : 'Map tiles by <a href=\"http://stamen.com\"/>Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\"/>CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\"/>OpenStreetMap</a>' , subdomains : 'abcd' , minZoom : 1 , maxZoom : 16 }); var Esri_WorldStreetMap = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}' , { attribution : 'Tiles &copy; Esri &mdash; Source: Esri, DeLorme, NAVTEQ, USGS,Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), TomTom,2012' }); var Esri_WorldTopoMap = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}' , { attribution : 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap,iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, EsriChina (Hong Kong), and the GIS User Community' }); var Esri_WorldImagery = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}' , { attribution : 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX,GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community' }); var Esri_WorldShadedRelief = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}' , { attribution : 'Tiles &copy; Esri &mdash; Source: Esri' , maxZoom : 13 }); var Esri_OceanBasemap = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/Ocean_Basemap/MapServer/tile/{z}/{y}/{x}' , { attribution : 'Tiles &copy; Esri &mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH,CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri' , maxZoom : 13 }); var mapaBase = { 'OSM' : osm , 'OpenStreetMap_DE' : OpenStreetMap_DE , 'OpenStreetMap_HOT' : OpenStreetMap_HOT , 'Hydda_Base' : Hydda_Base , 'Stamen_Toner' : Stamen_Toner , 'Stamen_Watercolor' : Stamen_Watercolor , 'Esri_WorldStreetMap' : Esri_WorldStreetMap , 'Esri_WorldTopoMap' : Esri_WorldTopoMap , 'Esri_WorldImagery' : Esri_WorldImagery , 'Esri_WorldShadedRelief' : Esri_WorldShadedRelief , 'Esri_OceanBasemap' : Esri_OceanBasemap }; controlCapas = L . control . layers ( mapaBase , null ); controlCapas . addTo ( map ); controlEscala = L . control . scale (); controlEscala . addTo ( map ); } </ script > </ head > < body onLoad = \"init()\" > < div id = \"map\" > </ div > </ body > </ html > Pregunta \u00bfC\u00f3mo a\u00f1adiriamos una capa de tipo \"overlay\"? Pr\u00e1ctica Creamos un nuevo ejemplo llamado mapabase.html con tres capas \"baseLayers\" de fondo: Mapa, Orto, H\u00edbrido Truco Podemos agrupar capas utilizando L.LayerGroup https://leafletjs.com/examples/layers-control/ var hibrid = L . layerGroup (); var Esri_WorldImagery2 = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}' , { attribution : 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX,GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community' }). addTo ( hibrid ); var Stamen_TonerHybrid = L . tileLayer ( 'https://stamen-tiles-{s}.a.ssl.fastly.net/toner-hybrid/{z}/{x}/{y}{r}.{ext}' , { attribution : 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>' , subdomains : 'abcd' , minZoom : 0 , maxZoom : 20 , ext : 'png' }). addTo ( hibrid ); Soluci\u00f3n pr\u00e1ctica < html lang = \"es\" > < head > < title > Ejemplo Leaflet mapa base </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < style > body { margin : 0 ; } # map { height : 100 % ; width : 100 % ; background-color : #ffffff } </ style > < script > var map , osm , controlCapas ; function init () { map = L . map ( 'map' , { center : [ 42.6863 , 2.8382 ], zoom : 7 }); osm = L . tileLayer ( 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png' , { maxZoom : 19 , minZoom : 1 , attribution : '&copy; <a href=\"http://www.openstreetmap.org/copyright\"/>OpenStreetMap</a>' }); var Esri_WorldImagery = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}' , { attribution : 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX,GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community' }); var hibrid = L . layerGroup (); var Esri_WorldImagery2 = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}' , { attribution : 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX,GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community' }). addTo ( hibrid ); var Stamen_TonerHybrid = L . tileLayer ( 'https://stamen-tiles-{s}.a.ssl.fastly.net/toner-hybrid/{z}/{x}/{y}{r}.{ext}' , { attribution : 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>' , subdomains : 'abcd' , minZoom : 0 , maxZoom : 20 , ext : 'png' }). addTo ( hibrid ); hibrid . addTo ( map ); var mapaBase = { 'Mapa' : osm , 'Foto' : Esri_WorldImagery , 'Hibrid' : hibrid }; controlCapas = L . control . layers ( mapaBase , null , { collapsed : false }); controlCapas . addTo ( map ); controlEscala = L . control . scale (); controlEscala . addTo ( map ); } </ script > </ head > < body onLoad = \"init()\" > < div id = \"map\" > </ div > </ body > </ html > Reutilizar c\u00f3digo Cuando programamos debemos intentar NO escribir el mismo c\u00f3digo dos veces y siempre que podamos debemos reutilizarlo. Algunas t\u00e9cnicas ser\u00edan: Crear peque\u00f1as funciones lo m\u00e1s at\u00f3micas posibles Encapsular las funciones en clases o archivos *JS Encapsular los estilos en archivos *CSS Vamos a crear estos archivos dentro de los directorios /geoweb/js/ el archivo mapabase.js /geoweb/css/ el archivo estilobase.css Cortamos y copiamos dentro de mapabase.js el c\u00f3digo JavaScript, est\u00e1 dentro de los tag <script></script> de nuestro mapabase.html Cortamos y copiamos dentro de estilobase.css el c\u00f3digo CSS, est\u00e1 dentro de los tag <style></style> de nuestro mapabase.html No hay que copiar los tag, solo borrarlos A\u00f1adimos los archivos creados a nuestro mapabase.html de la siguiente forma. < html lang = \"es\" > < head > < title > Ejemplo Leaflet mapa base </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < link rel = \"stylesheet\" href = \"css/estilobase.css\" /> < script src = \"js/mapabase.js\" ></ script > </ head > < body onLoad = \"init()\" > < div id = \"map\" > </ div > </ body > </ html > \u00bfSubimos el ejemplo al GitHub? git pull git add . git commit -m \"mapa base leaflet\" git push","title":"4. Introduccion a Leaflet"},{"location":"introduccion_a_leaflet/#4-introduccion-a-leaflet","text":"Leaflet es una librer\u00eda JavaScript opensource utilizada por Flickr, Wikimedia, foursquare, OSM, carto, GIS Cloud, Washington Post, Wall Street Journal, Geocaching.com, etc. Puntos fuertes de la API de Leaflet son: Facilidad para aprender y usar Soporte m\u00f3vil HTML 5, CSS3 y pasarela WebGL Funciona tanto en los modernos como en los viejos navegadores web Muchos plugins API bien documentada","title":"4. Introduccion a Leaflet"},{"location":"introduccion_a_leaflet/#recursos-leaflet-js","text":"","title":"Recursos Leaflet JS"},{"location":"introduccion_a_leaflet/#web","text":"http://leafletjs.com/","title":"Web"},{"location":"introduccion_a_leaflet/#api","text":"http://leafletjs.com/reference.html","title":"API"},{"location":"introduccion_a_leaflet/#plugins","text":"http://leafletjs.com/plugins.html","title":"Plugins"},{"location":"introduccion_a_leaflet/#definicion","text":"https://en.wikipedia.org/wiki/Leaflet_(software)","title":"Definici\u00f3n"},{"location":"introduccion_a_leaflet/#tutoriales","text":"http://www.digital-geography.com/category/leaflet-js/ http://leafletjs.com/examples.html http://maptimeboston.github.io/leaflet-intro/ http://asmaloney.com/2014/01/code/creating-an-interactive-map-with-leaflet-andopenstreetmap/ http://mappinggis.com/2013/06/como-crear-un-mapa-con-leaflet/","title":"Tutoriales"},{"location":"introduccion_a_leaflet/#videos","text":"https://www.youtube.com/watch?v=7Tll2k57ork https://egghead.io/lessons/javascript-get-started-with-leafletjs-mapping https://www.youtube.com/watch?v=1VYvjHb6KeM https://www.youtube.com/watch?v=TseoObyFg8E","title":"Videos"},{"location":"introduccion_a_leaflet/#como-empezar","text":"Descargamos geoweb.zip y descomprimir dentro de nuestro directorio geoweb del servidor web En VSCODE creamos la p\u00e1gina leaflet-basico.html dentro directorio geoweb A\u00f1adiremos el siguiente c\u00f3digo que es la estructura b\u00e1sica de una p\u00e1gina : < html lang = \"es\" > < head > < title > Leaflet b\u00e1sico </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > </ head > < body > </ body > </ html > Vamos a crear un mapa con Leaflet, para ello incluiremos en la cabecera <head> de una p\u00e1gina web la librer\u00eda JavaScript leaflet.js (que contiene el c\u00f3digo de la liber\u00eda) y la hoja de estilo leaflet.css (con la hoja de estilos de la librer\u00eda): < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > Dentro de la etiqueta <body> encontramos el marcado para el mapa, que genera un \u00fanico elemento de documento. Tambi\u00e9n damos al contenedor un atributo id para que podamos hacer referencia a \u00e9l en nuestro c\u00f3digo: < body > < div id = \"map\" ></ div > </ body > Nuestra p\u00e1gina tendria este aspecto < html lang = \"es\" > < head > < title > Leaflet b\u00e1sico </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > </ head > < body > < div id = \"map\" ></ div > </ body > </ html > A\u00f1adiremos un estilo al mapa para que ocupe toda la p\u00e1gina web, dentro la etiqueta <style/> dentro del <head> < style > body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } </ style > Ahora nuestra p\u00e1gina tendria este aspecto < html lang = \"es\" > < head > < title > Leaflet b\u00e1sico </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < style > body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } </ style > </ head > < body > < div id = \"map\" ></ div > </ body > </ html > Ahora crearemos y empezaremos a programar dentro del tag <script> justo encima de </head> Crearemos la funci\u00f3n Init para crear un Mapa y a\u00f1adir una capa de OSM L.map es la clase central de la API. Se usa para crear y manipular el mapa. El mapa por defecto tiene dos controles: uno de zoom y uno de atribuci\u00f3n. L.map","title":"\u00bfC\u00f3mo empezar?"},{"location":"introduccion_a_leaflet/#lmap","text":"Es el constructor principal de Leaflet Propiedades: https://leafletjs.com/reference-1.7.1.html#map-factory M\u00e9todos: https://leafletjs.com/reference-1.7.1.html#map-methods-for-modifying-map-state Eventos: https://leafletjs.com/reference-1.7.1.html#map-event L.tileLayer","title":"L.map"},{"location":"introduccion_a_leaflet/#ltilelayer","text":"Es un tipo de capa raster que se a\u00f1ade al objeto L.map Referencia: https://leafletjs.com/reference-1.7.1.html#tilelayer < script > var map , capa1 ; function init (){ map = L . map ( \"map\" ,{ center : [ 41.6863 , 1.8382 ], zoom : 8 }); capa1 = L . tileLayer ( \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" , { maxZoom : 19 , minZoom : 1 , attribution : \"OSM\" }); capa1 . addTo ( map ); } </ script > Llamaremos a la funci\u00f3n desde el evento onload del <body> < body onLoad = \"init()\" >","title":"L.tileLayer"},{"location":"introduccion_a_leaflet/#leaflet-basico","text":"< html lang = \"es\" > < head > < title > Leaflet b\u00e1sico </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < style > body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } </ style > < script > var map , capa1 ; function init (){ map = L . map ( \"map\" ,{ center : [ 41.6863 , 1.8382 ], zoom : 8 }); capa1 = L . tileLayer ( \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" , { maxZoom : 19 , minZoom : 1 , attribution : \"OSM\" }); capa1 . addTo ( map ); } </ script > </ head > < body onLoad = \"init()\" > < div id = \"map\" ></ div > </ body > </ html > \u00bfQue acabamos de hacer? Miramos dentro del tag <script> Hemos creado la variable global map Usamos L.map() para instanciar el objeto mapa, pasando el id del <div> d\u00f3nde ir\u00e1 el mapa Utilizamos las opciones center y zoom iniciar el mapa Tambi\u00e9n podr\u00edamos utilizar el m\u00e9todo setView map =L.map('map').setView([41.6863, 1.8382], 8);) Usamos L.tileLayer() para crear una capa base en un servidor OSM de tiles. {z}/{x}/{y}. Tambi\u00e9n pasamos algunas opciones Attribution : atribuci\u00f3n de la capa maxZoom y minZoom :niveles de zoom. Usamos m\u00e9todo addTo() para a\u00f1adir la capa al mapa Si quisieramos a\u00f1adir un punto al mapa L . marker ([ 41.3954 , 2.16859 ]). addTo ( map ); Si quisieramos a\u00f1adir un popup al punto L . marker ([ 41.3954 , 2.16859 ]). addTo ( map ). bindPopup ( 'Hola punto' ); Si quisieramos que el popup estuviera abierto por defecto L . marker ([ 41.3954 , 2.16859 ]). addTo ( map ). bindPopup ( 'Hola punto' ). openPopup (); Lo mismo pero programando diferente var punto = L . marker ([ 41.3954 , 2.16859 ]); punto . addTo ( map ); punto . bindPopup ( 'Hola punto' ); punto . openPopup (); Si quiero a\u00f1adir un punto de tipo c\u00edrculo, con opciones (vector) var punto = L . circleMarker ([ 41.3954 , 2.16859 ],{ color : '#ffffff' , fillColor : '#00ff00' , fillOpacity : 0.9 , radius : 8 }); punto . addTo ( map ); punto . bindPopup ( 'Hola punto' ); punto . openPopup (); Si quisieramos a\u00f1adir un punto con estilo al hacer clic en el mapa(Evento) map . on ( 'click' , function ( e ) { new L . circleMarker ( e . latlng , { color : '#ffffff' , fillColor : '#00ff00' , fillOpacity : 0.9 , radius : 8 }). addTo ( map ) . bindPopup ( e . latlng . lat + \",\" + e . latlng . lng ) . openPopup (); }); \u00bfSubimos el ejemplo al GitHub? git pull git add . git commit -m \"primer ejemplo leaflet\" git push","title":"Leaflet b\u00e1sico"},{"location":"introduccion_a_leaflet/#ejemplo-1-controles","text":"A\u00f1adimos controles de capas y escala. Creamos la p\u00e1gina leaflet-controles.html dentro directorio geoweb L.control.layers","title":"Ejemplo 1 Controles"},{"location":"introduccion_a_leaflet/#lcontrollayers","text":"Es un control que nos permite activar y desactivar capas base (baseLayers) y \"overlays\" Referencia: https://leafletjs.com/reference-1.7.1.html#control-layers","title":"L.control.layers"},{"location":"introduccion_a_leaflet/#lcontrolscale","text":"Es un control a\u00f1ade un escala gr\u00e1fica del mapa Referencia: https://leafletjs.com/reference-1.7.1.html#control-scale < html lang = \"es\" > < head > < title > Ejemplo 1 Leaflet-controles </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < style > body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } </ style > < script > var map , osm , esri , terreno ; var controlCapas ; var controlEscala ; function init () { map = L . map ( 'map' ). setView ([ 41.6863 , 1.8382 ], 8 ); esri = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}' , { maxZoom : 17 , minZoom : 1 , attribution : 'Tiles \u00a9 Esri' , }). addTo ( map ); osm = L . tileLayer ( 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png' , { maxZoom : 19 , minZoom : 1 , attribution : 'OSM' }); terreno = L . tileLayer ( 'http://{s}.tile.stamen.com/terrain-background/{z}/{x}/{y}.png' , { maxZoom : 19 , attribution : 'Stamen terrain' , opacity : 0.5 }); var baseMaps = { \"Orto_esri\" : esri , \"Mapa_osm\" : osm }; var overlayMaps = { \"Terrain\" : terreno }; controlCapas = L . control . layers ( baseMaps , overlayMaps ); controlCapas . addTo ( map ); controlEscala = L . control . scale (); controlEscala . addTo ( map ); } </ script > </ head > < body onLoad = \"init()\" > < div id = \"map\" > </ div > </ body > </ html > Pregunta","title":"L.control.scale"},{"location":"introduccion_a_leaflet/#ejemplo-2-provider","text":"Creamos la p\u00e1gina leaflet-provider.html dentro directorio geoweb \u00bfQue mapas de fondo puedo a\u00f1adir? http://leaflet-extras.github.io/leaflet-providers/preview/ < html lang = \"es\" > < head > < title > Ejemplo Leaflet provider </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < style > body { margin : 0 ; } # map { height : 100 % ; width : 100 % ; background-color : #ffffff } </ style > < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < script > var map , osm , controlCapas ; function init () { map = L . map ( 'map' , { center : [ 39.6863 , 2.8382 ], zoom : 8 }); osm = L . tileLayer ( 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png' , { maxZoom : 19 , minZoom : 1 , attribution : '&copy; <a href=\"http://www.openstreetmap.org/copyright\"/>OpenStreetMap</a>' }). addTo ( map ); var OpenStreetMap_DE = L . tileLayer ( 'http://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png' , { attribution : '&copy; <a href=\"http://www.openstreetmap.org/copyright\"/>OpenStreetMap</a>' }); var OpenStreetMap_HOT = L . tileLayer ( 'http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png' , { attribution : '&copy; <a href=\"http://www.openstreetmap.org/copyright\"/>OpenStreetMap</a>, Tiles courtesy of <a href=\"http://hot.openstreetmap.org/\" target=\"_blank\"/>Humanitarian OpenStreetMapTeam</a>' }); var Hydda_Base = L . tileLayer ( 'http://{s}.tile.openstreetmap.se/hydda/base/{z}/{x}/{y}.png' , { minZoom : 0 , maxZoom : 18 , attribution : 'Tiles courtesy of <a href=\"http://openstreetmap.se/\" target=\"_blank\"/>OpenStreetMap Sweden</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\"/>OpenStreetMap</a>' }); var Stamen_Toner = L . tileLayer ( 'http://{s}.tile.stamen.com/toner/{z}/{x}/{y}.png' , { attribution : 'Map tiles by <a href=\"http://stamen.com\"/>Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\"/>CC BY 3.0</a> &mdash; Map data &copy;<a href=\"http://www.openstreetmap.org/copyright\"/>OpenStreetMap</a>' , subdomains : 'abcd' , minZoom : 0 , maxZoom : 20 }); var Stamen_Watercolor = L . tileLayer ( 'http://{s}.tile.stamen.com/watercolor/{z}/{x}/{y}.png' , { attribution : 'Map tiles by <a href=\"http://stamen.com\"/>Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\"/>CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\"/>OpenStreetMap</a>' , subdomains : 'abcd' , minZoom : 1 , maxZoom : 16 }); var Esri_WorldStreetMap = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}' , { attribution : 'Tiles &copy; Esri &mdash; Source: Esri, DeLorme, NAVTEQ, USGS,Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), TomTom,2012' }); var Esri_WorldTopoMap = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}' , { attribution : 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap,iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, EsriChina (Hong Kong), and the GIS User Community' }); var Esri_WorldImagery = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}' , { attribution : 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX,GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community' }); var Esri_WorldShadedRelief = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}' , { attribution : 'Tiles &copy; Esri &mdash; Source: Esri' , maxZoom : 13 }); var Esri_OceanBasemap = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/Ocean_Basemap/MapServer/tile/{z}/{y}/{x}' , { attribution : 'Tiles &copy; Esri &mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH,CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri' , maxZoom : 13 }); var mapaBase = { 'OSM' : osm , 'OpenStreetMap_DE' : OpenStreetMap_DE , 'OpenStreetMap_HOT' : OpenStreetMap_HOT , 'Hydda_Base' : Hydda_Base , 'Stamen_Toner' : Stamen_Toner , 'Stamen_Watercolor' : Stamen_Watercolor , 'Esri_WorldStreetMap' : Esri_WorldStreetMap , 'Esri_WorldTopoMap' : Esri_WorldTopoMap , 'Esri_WorldImagery' : Esri_WorldImagery , 'Esri_WorldShadedRelief' : Esri_WorldShadedRelief , 'Esri_OceanBasemap' : Esri_OceanBasemap }; controlCapas = L . control . layers ( mapaBase , null ); controlCapas . addTo ( map ); controlEscala = L . control . scale (); controlEscala . addTo ( map ); } </ script > </ head > < body onLoad = \"init()\" > < div id = \"map\" > </ div > </ body > </ html > Pregunta","title":"Ejemplo 2 Provider"},{"location":"introduccion_a_leaflet/#practica","text":"Creamos un nuevo ejemplo llamado mapabase.html con tres capas \"baseLayers\" de fondo: Mapa, Orto, H\u00edbrido Truco","title":"Pr\u00e1ctica"},{"location":"introduccion_a_leaflet/#reutilizar-codigo","text":"Cuando programamos debemos intentar NO escribir el mismo c\u00f3digo dos veces y siempre que podamos debemos reutilizarlo. Algunas t\u00e9cnicas ser\u00edan: Crear peque\u00f1as funciones lo m\u00e1s at\u00f3micas posibles Encapsular las funciones en clases o archivos *JS Encapsular los estilos en archivos *CSS Vamos a crear estos archivos dentro de los directorios /geoweb/js/ el archivo mapabase.js /geoweb/css/ el archivo estilobase.css Cortamos y copiamos dentro de mapabase.js el c\u00f3digo JavaScript, est\u00e1 dentro de los tag <script></script> de nuestro mapabase.html Cortamos y copiamos dentro de estilobase.css el c\u00f3digo CSS, est\u00e1 dentro de los tag <style></style> de nuestro mapabase.html No hay que copiar los tag, solo borrarlos A\u00f1adimos los archivos creados a nuestro mapabase.html de la siguiente forma. < html lang = \"es\" > < head > < title > Ejemplo Leaflet mapa base </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" /> < meta name = \"robots\" content = \"index,follow\" /> < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < link rel = \"stylesheet\" href = \"css/estilobase.css\" /> < script src = \"js/mapabase.js\" ></ script > </ head > < body onLoad = \"init()\" > < div id = \"map\" > </ div > </ body > </ html > \u00bfSubimos el ejemplo al GitHub? git pull git add . git commit -m \"mapa base leaflet\" git push","title":"Reutilizar c\u00f3digo"},{"location":"introduccion_a_mapbox/","text":"Web https://www.mapbox.com/ Productos https://www.mapbox.com/products/ APIs https://www.mapbox.com/api-documentation/ P\u00e1gina refer\u00e9ncia MapBox GL!! https://www.mapbox.com/mapbox-gl-js/api/ GitHUB https://github.com/mapbox Tutoriales https://www.mapbox.com/mapbox-gl-js/example/simple-map/ https://www.mapbox.com/help/tutorials/ https://www.mapbox.com/help/studio-manual/ https://ovrdc.github.io/gis-tutorials/mapbox/ Videos https://www.youtube.com/watch?v=jrnoFU5Wkdo https://www.youtube.com/watch?v=Zn3Xx-TSrM8 https://www.youtube.com/watch?v=r6Ij_34xTD0 https://www.youtube.com/watch?v=YhynsA9_fPc Descripci\u00f3n Ver presentaci\u00f3n MapxBox es una empresa privada que ofrece una plataforma para la publicac\u00f3n de mapas. Mapbox destaca por creado de forma abierta MBTiles Vector Tiles MapBox GL MapBox Studio es una herramienta para personalizar y publicar estilos de mapa vector Maputnik es un editor libre (no de Mapbox) que tambi\u00e9n sirve para editar estilos de mapas vector \u00bfC\u00f3mo empezar? Nos damos de alta en MapBox MapBox Studio 1-Creamos nuestor propio estilo Entramos en MapBox.com seleccionamos nuestro avatar Studio Dentro de Studio tenemos tres opciones b\u00e1sicas Styles : Para crear nuestros estilos pr\u00f2pios Tilesets : Para subir nuestros datos y convertirlos en Vector Tiles y/o integrarlos con nuestros estilos Dataset : Para subir capas GeoJson que pueden ser convertidas a Tilesets Seleccionamos --> Styles --> New style Seleccionamos un estilo como base y cambiamos colores Customize Cambiamos nombre del estilo \"Bicing\" Una vez hemos acabado --> Publish your style --> Publish as new Share, develop, and use your style -- Copiamos Style URL y Access token Truco Si seleccionamos \"Third party\" tambi\u00e9 podemos exponer el estilo com WMTS (Raster) en Leaflet!! Nos divertimos con Cartogram!! https://apps.mapbox.com/cartogram/ 2-Visualizar estilo propio con Mapbox Gl JS MapBox tiene una libreria JavaScript llamada MapBox GL JS para visualizar estilos entre otras muchas otras funcionalidades P\u00e1gina refer\u00e9ncia MapBox GL!! * https://www.mapbox.com/mapbox-gl-js/api/ Warning Siempre que utilizemos alg\u00fan estilo de Mapbox studio o alg\u00fan servicio de Mapbox deberemos a\u00f1adir nuestro Access Token mapboxgl.Map Es el constructor principal del mapa https://docs.mapbox.com/mapbox-gl-js/api/#map var map = new mapboxgl . Map ({ container : 'map' , // container id style : 'mapbox://styles/mapbox/streets-v11' , // stylesheet location center : [ - 74.5 , 40 ], // starting position [lng, lat] zoom : 9 // starting zoom }); Creamos mapbox-basico.html < html > < head > < meta charset = 'utf-8' /> < title > Mapbox estilo </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < style > body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } </ style > < script > //A\u00f1adir vuestor token y vuestro estilo function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; var map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/gismasterm2/ck4zvjxxs2b8m1cmjumqlru5i' , center : [ 2.16859 , 41.3954 ], zoom : 13 , attributionControl : false }); } </ script > </ head > < body onload = \"init()\" > < div id = \"map\" ></ div > </ body > </ html > Podemos a\u00f1adir algunos controles Controles https://docs.mapbox.com/mapbox-gl-js/api/#user%20interface IControl NavigationControl GeolocateControl AttributionControl ScaleControl FullscreenControl Popup Marker < html > < head > < meta charset = 'utf-8' /> < title > Mapbox estilo </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < style > body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } </ style > < script > //A\u00f1adir vuestor token y vuestro estilo function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; var map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/gismasterm2/ck4zvjxxs2b8m1cmjumqlru5i' , center : [ 2.16859 , 41.3954 ], zoom : 13 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); } </ script > </ head > < body onload = \"init()\" > < div id = \"map\" ></ div > </ body > </ html > \u00bfA\u00f1adimos control GeoLocalizaci\u00f3n? https://docs.mapbox.com/mapbox-gl-js/api/#geolocatecontrol map . addControl ( new mapboxgl . GeolocateControl ()); o con opciones... map . addControl ( new mapboxgl . GeolocateControl ({ positionOptions : { enableHighAccuracy : true }, trackUserLocation : true })); \u00bfA\u00f1adimos un marker? https://docs.mapbox.com/mapbox-gl-js/api/#marker var marker = new mapboxgl . Marker () . setLngLat ([ 2.161648 , 41.3977 ]) . addTo ( map ); 3-A\u00f1adir una capa nueva propia a un estilo Nos gustaria que en nuestro estilo estuvieran los carriles bici de Barcelona https://opendata-ajuntament.barcelona.cat/data/es/dataset/carril-bici Paso 1 Descargamos en formato GeoJson los carriles bicicleta de barcelona en https://opendata-ajuntament.barcelona.cat/data/es/dataset/carril-bici Utilizamos QGIS para visualizar Paso 2 -A\u00f1adimos la capa a Mapbox.com Entramos en MapBox.com Studio --> Tilesets --> New tileset Arrastramos CARRIL_BICI.geojson A\u00f1adimos TileSet a nuestro estilo Studio --> Styles --> Bicing --> Layers --> Add Layer --> Carril_Bici Cambiamos color Publicamos Visualizamos mapbox-basico.html \u00bfQue ha pasado? 4- Visualizar nuestor propio Tileset como una capa independiente Paso 1 Descargamos las vias ciclables de Barcelona (vias que no son carriles bici pero se puede ir en bicicleta ) https://opendata-ajuntament.barcelona.cat/data/es/dataset/bicing En formato GeoJson VIES_CICLABLES.geojson Paso 2 Entramos en MapBox.com Studio --> Tilesets --> New tileset Arrastramos VIES_CICLABLES.geojson *Copiamos ID y nombre de la capa Editamos mapbox-basico.html y a\u00f1adimos < html > < head > < meta charset = 'utf-8' /> < title > Mapbox estilo </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < style > body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } </ style > < script > //A\u00f1adir vuestor token y vuestro estilo function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; var map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/gismasterm2/ck4zvjxxs2b8m1cmjumqlru5i' , center : [ 2.16859 , 41.3954 ], zoom : 13 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( 'load' , function () { map . addSource ( \"viasciclables_source\" , { type : \"vector\" , url : \"mapbox://gismasterm2.25lhjr43\" //poner mapbox://vuestro id }); //fin map source map . addLayer ({ id : \"viasciclables\" , type : \"line\" , source : \"viasciclables_source\" , 'source-layer' : \"VIES_CICLABLES-2smuz5\" , //poner vuestro titulo capa paint : { 'line-color' : \"#00ff00\" , \"line-width\" : 3 } }); }); } </ script > </ head > < body onload = \"init()\" > < div id = \"map\" ></ div > </ body > </ html > Probamos cambiar estilo de las vias ciclables https://docs.mapbox.com/mapbox-gl-js/style-spec/#layers-line A\u00f1adimos un Popup al evento click Eventos del mapa https://docs.mapbox.com/mapbox-gl-js/api/#map.event:click < html > < head > < meta charset = 'utf-8' /> < title > Mapbox estilo </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < style > body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } </ style > < script > //A\u00f1adir vuestor token y vuestro estilo function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; var map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/gismasterm2/ck4zvjxxs2b8m1cmjumqlru5i' , center : [ 2.16859 , 41.3954 ], zoom : 13 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( 'load' , function () { map . addSource ( \"viasciclables_source\" , { type : \"vector\" , url : \"mapbox://gismasterm2.25lhjr43\" //poner mapbox://vuestro id }); //fin map source map . addLayer ({ id : \"viasciclables\" , type : \"line\" , source : \"viasciclables_source\" , 'source-layer' : \"VIES_CICLABLES-2smuz5\" , //poner vuestro titulo capa paint : { 'line-color' : \"#00ff00\" , \"line-width\" : 3 } }); }); map . on ( 'click' , 'viasciclables' , function ( e ){ var text = \"\" ; //console.info(e); for ( key in e . features [ 0 ]. properties ){ text += \"<b>\" + key + \"</b>:\" + e . features [ 0 ]. properties [ key ] + \"<br>\" ; } new mapboxgl . Popup () . setLngLat ( e . lngLat ) . setHTML ( text ) . addTo ( map ); }); map . on ( 'mouseenter' , 'viasciclables' , function () { map . getCanvas (). style . cursor = 'pointer' ; }); map . on ( 'mouseleave' , 'viasciclables' , function () { map . getCanvas (). style . cursor = '' ; }); } </ script > </ head > < body onload = \"init()\" > < div id = \"map\" ></ div > </ body > </ html > \u00bfSubimos el ejemplo al GitHub? git pull git add . git commit -m \"mapa mapbox\" git push Warning Pr\u00e1ctica Cementrio. Puntuable!! * Creamos nuevo estilo en Mapbox.com Cargamos capas datos/constru_cementerio.geojson y datos/cementerio.geojson A\u00f1adimos como tileset en MapxBox Integramos el tileset dentro nuestro estilo creado Studio --> Styles --> Mi estilo --> Layers --> Add Layer --> Mi tileset Editamos estilo capas publicamos Creamos visor ejemplo mapbox-cementerio.html Subimos ejemplo al GitHUB Truco Las capa de poligonos puedes ser a\u00f1adidas a un estilo como tipo \"Fill extrusion\" y ser representados en 2.5D. Preparamos datos La carga de datos dentro de Mapbox puede ser lenta sobretodo si tenemos alg\u00fan dataset pesado Vamos cargar todas las construcciones de Barcelona que ofrece la Direccion General de Catastro http://www.catastro.minhap.es/webinspire/index.html Descargamos datos http://www.catastro.minhap.es/INSPIRE/Buildings/08/08900-BARCELONA/A.ES.SDGC.BU.08900.zip Convertimos el archivo A.ES.SDGC.BU.08900.buildingpart.gml a GeoJSON \"contrucciones.geojson\" con QGIS Lo cargamos como Tileset dentro de MapBox.com Ejemplo Extra: Visualizar estilo Mapbox en Leaflet < html lang = \"es\" > < head > < title > Leaflet y Mapox </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < style > body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } </ style > < script > var map ; var capa1 ; function init () { map = L . map ( 'map' , { center : [ 41.6863 , 1.8382 ], zoom : 8 , attributionControl : false }); // substituir por vuestra layer // Substituir \"wmts\" por \"tiles/256/{z}/{x}/{y}\" /* https://api.mapbox.com/styles/v1/gismasterm2/ck4zvjxxs2b8m1cmjumqlru5i/wmts?access_token=pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA */ capa1 = L . tileLayer ( 'https://api.mapbox.com/styles/v1/gismasterm2/ck4zvjxxs2b8m1cmjumqlru5i/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' , { maxZoom : 19 , minZoom : 1 , attribution : 'Mapbox' }); capa1 . addTo ( map ); } </ script > </ head > < body onload = \"init()\" > < div id = \"map\" ></ div > </ body > </ html > \u00bfSubimos el ejemplo al GitHub? git pull git add . git commit -m \"mapa base mapbox\" git push","title":"10. Visor edificios Catastro"},{"location":"introduccion_a_mapbox/#web","text":"https://www.mapbox.com/","title":"Web"},{"location":"introduccion_a_mapbox/#productos","text":"https://www.mapbox.com/products/","title":"Productos"},{"location":"introduccion_a_mapbox/#apis","text":"https://www.mapbox.com/api-documentation/","title":"APIs"},{"location":"introduccion_a_mapbox/#pagina-referencia-mapbox-gl","text":"https://www.mapbox.com/mapbox-gl-js/api/","title":"P\u00e1gina refer\u00e9ncia MapBox GL!!"},{"location":"introduccion_a_mapbox/#github","text":"https://github.com/mapbox","title":"GitHUB"},{"location":"introduccion_a_mapbox/#tutoriales","text":"https://www.mapbox.com/mapbox-gl-js/example/simple-map/ https://www.mapbox.com/help/tutorials/ https://www.mapbox.com/help/studio-manual/ https://ovrdc.github.io/gis-tutorials/mapbox/","title":"Tutoriales"},{"location":"introduccion_a_mapbox/#videos","text":"https://www.youtube.com/watch?v=jrnoFU5Wkdo https://www.youtube.com/watch?v=Zn3Xx-TSrM8 https://www.youtube.com/watch?v=r6Ij_34xTD0 https://www.youtube.com/watch?v=YhynsA9_fPc","title":"Videos"},{"location":"introduccion_a_mapbox/#descripcion","text":"Ver presentaci\u00f3n MapxBox es una empresa privada que ofrece una plataforma para la publicac\u00f3n de mapas. Mapbox destaca por creado de forma abierta MBTiles Vector Tiles MapBox GL MapBox Studio es una herramienta para personalizar y publicar estilos de mapa vector Maputnik es un editor libre (no de Mapbox) que tambi\u00e9n sirve para editar estilos de mapas vector","title":"Descripci\u00f3n"},{"location":"introduccion_a_mapbox/#como-empezar","text":"Nos damos de alta en MapBox","title":"\u00bfC\u00f3mo empezar?"},{"location":"introduccion_a_mapbox/#mapbox-studio","text":"","title":"MapBox Studio"},{"location":"introduccion_a_mapbox/#1-creamos-nuestor-propio-estilo","text":"Entramos en MapBox.com seleccionamos nuestro avatar Studio Dentro de Studio tenemos tres opciones b\u00e1sicas Styles : Para crear nuestros estilos pr\u00f2pios Tilesets : Para subir nuestros datos y convertirlos en Vector Tiles y/o integrarlos con nuestros estilos Dataset : Para subir capas GeoJson que pueden ser convertidas a Tilesets Seleccionamos --> Styles --> New style Seleccionamos un estilo como base y cambiamos colores Customize Cambiamos nombre del estilo \"Bicing\" Una vez hemos acabado --> Publish your style --> Publish as new Share, develop, and use your style -- Copiamos Style URL y Access token Truco","title":"1-Creamos nuestor propio estilo"},{"location":"introduccion_a_mapbox/#2-visualizar-estilo-propio-con-mapbox-gl-js","text":"MapBox tiene una libreria JavaScript llamada MapBox GL JS para visualizar estilos entre otras muchas otras funcionalidades P\u00e1gina refer\u00e9ncia MapBox GL!! * https://www.mapbox.com/mapbox-gl-js/api/ Warning","title":"2-Visualizar estilo propio con Mapbox Gl JS"},{"location":"introduccion_a_mapbox/#3-anadir-una-capa-nueva-propia-a-un-estilo","text":"Nos gustaria que en nuestro estilo estuvieran los carriles bici de Barcelona https://opendata-ajuntament.barcelona.cat/data/es/dataset/carril-bici","title":"3-A\u00f1adir una capa nueva propia a un estilo"},{"location":"introduccion_a_mapbox/#paso-1","text":"Descargamos en formato GeoJson los carriles bicicleta de barcelona en https://opendata-ajuntament.barcelona.cat/data/es/dataset/carril-bici Utilizamos QGIS para visualizar","title":"Paso 1"},{"location":"introduccion_a_mapbox/#paso-2-anadimos-la-capa-a-mapboxcom","text":"Entramos en MapBox.com Studio --> Tilesets --> New tileset Arrastramos CARRIL_BICI.geojson A\u00f1adimos TileSet a nuestro estilo Studio --> Styles --> Bicing --> Layers --> Add Layer --> Carril_Bici Cambiamos color Publicamos Visualizamos mapbox-basico.html \u00bfQue ha pasado?","title":"Paso 2 -A\u00f1adimos la capa a Mapbox.com"},{"location":"introduccion_a_mapbox/#4-visualizar-nuestor-propio-tileset-como-una-capa-independiente","text":"","title":"4- Visualizar nuestor propio Tileset como una capa independiente"},{"location":"introduccion_a_mapbox/#paso-1_1","text":"Descargamos las vias ciclables de Barcelona (vias que no son carriles bici pero se puede ir en bicicleta ) https://opendata-ajuntament.barcelona.cat/data/es/dataset/bicing En formato GeoJson VIES_CICLABLES.geojson","title":"Paso 1"},{"location":"introduccion_a_mapbox/#paso-2","text":"Entramos en MapBox.com Studio --> Tilesets --> New tileset Arrastramos VIES_CICLABLES.geojson *Copiamos ID y nombre de la capa Editamos mapbox-basico.html y a\u00f1adimos < html > < head > < meta charset = 'utf-8' /> < title > Mapbox estilo </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < style > body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } </ style > < script > //A\u00f1adir vuestor token y vuestro estilo function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; var map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/gismasterm2/ck4zvjxxs2b8m1cmjumqlru5i' , center : [ 2.16859 , 41.3954 ], zoom : 13 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( 'load' , function () { map . addSource ( \"viasciclables_source\" , { type : \"vector\" , url : \"mapbox://gismasterm2.25lhjr43\" //poner mapbox://vuestro id }); //fin map source map . addLayer ({ id : \"viasciclables\" , type : \"line\" , source : \"viasciclables_source\" , 'source-layer' : \"VIES_CICLABLES-2smuz5\" , //poner vuestro titulo capa paint : { 'line-color' : \"#00ff00\" , \"line-width\" : 3 } }); }); } </ script > </ head > < body onload = \"init()\" > < div id = \"map\" ></ div > </ body > </ html > Probamos cambiar estilo de las vias ciclables https://docs.mapbox.com/mapbox-gl-js/style-spec/#layers-line A\u00f1adimos un Popup al evento click Eventos del mapa https://docs.mapbox.com/mapbox-gl-js/api/#map.event:click < html > < head > < meta charset = 'utf-8' /> < title > Mapbox estilo </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < style > body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } </ style > < script > //A\u00f1adir vuestor token y vuestro estilo function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; var map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/gismasterm2/ck4zvjxxs2b8m1cmjumqlru5i' , center : [ 2.16859 , 41.3954 ], zoom : 13 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( 'load' , function () { map . addSource ( \"viasciclables_source\" , { type : \"vector\" , url : \"mapbox://gismasterm2.25lhjr43\" //poner mapbox://vuestro id }); //fin map source map . addLayer ({ id : \"viasciclables\" , type : \"line\" , source : \"viasciclables_source\" , 'source-layer' : \"VIES_CICLABLES-2smuz5\" , //poner vuestro titulo capa paint : { 'line-color' : \"#00ff00\" , \"line-width\" : 3 } }); }); map . on ( 'click' , 'viasciclables' , function ( e ){ var text = \"\" ; //console.info(e); for ( key in e . features [ 0 ]. properties ){ text += \"<b>\" + key + \"</b>:\" + e . features [ 0 ]. properties [ key ] + \"<br>\" ; } new mapboxgl . Popup () . setLngLat ( e . lngLat ) . setHTML ( text ) . addTo ( map ); }); map . on ( 'mouseenter' , 'viasciclables' , function () { map . getCanvas (). style . cursor = 'pointer' ; }); map . on ( 'mouseleave' , 'viasciclables' , function () { map . getCanvas (). style . cursor = '' ; }); } </ script > </ head > < body onload = \"init()\" > < div id = \"map\" ></ div > </ body > </ html > \u00bfSubimos el ejemplo al GitHub? git pull git add . git commit -m \"mapa mapbox\" git push Warning","title":"Paso 2"},{"location":"introduccion_a_mapbox/#practica-cementrio-puntuable","text":"","title":"Pr\u00e1ctica Cementrio. Puntuable!!"},{"location":"introduccion_a_mapbox/#preparamos-datos","text":"La carga de datos dentro de Mapbox puede ser lenta sobretodo si tenemos alg\u00fan dataset pesado Vamos cargar todas las construcciones de Barcelona que ofrece la Direccion General de Catastro http://www.catastro.minhap.es/webinspire/index.html Descargamos datos http://www.catastro.minhap.es/INSPIRE/Buildings/08/08900-BARCELONA/A.ES.SDGC.BU.08900.zip Convertimos el archivo A.ES.SDGC.BU.08900.buildingpart.gml a GeoJSON \"contrucciones.geojson\" con QGIS Lo cargamos como Tileset dentro de MapBox.com","title":"Preparamos datos"},{"location":"introduccion_a_mapbox/#ejemplo-extra-visualizar-estilo-mapbox-en-leaflet","text":"< html lang = \"es\" > < head > < title > Leaflet y Mapox </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > < style > body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } </ style > < script > var map ; var capa1 ; function init () { map = L . map ( 'map' , { center : [ 41.6863 , 1.8382 ], zoom : 8 , attributionControl : false }); // substituir por vuestra layer // Substituir \"wmts\" por \"tiles/256/{z}/{x}/{y}\" /* https://api.mapbox.com/styles/v1/gismasterm2/ck4zvjxxs2b8m1cmjumqlru5i/wmts?access_token=pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA */ capa1 = L . tileLayer ( 'https://api.mapbox.com/styles/v1/gismasterm2/ck4zvjxxs2b8m1cmjumqlru5i/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' , { maxZoom : 19 , minZoom : 1 , attribution : 'Mapbox' }); capa1 . addTo ( map ); } </ script > </ head > < body onload = \"init()\" > < div id = \"map\" ></ div > </ body > </ html > \u00bfSubimos el ejemplo al GitHub? git pull git add . git commit -m \"mapa base mapbox\" git push","title":"Ejemplo Extra: Visualizar estilo Mapbox en Leaflet"},{"location":"introduccion_a_vector_tiles/","text":"Introducci\u00f3n a Vector Tiles y Mapbox (I) Vector Tiles es un formato para almacenar datos geogr\u00e1ficos en formato binario (Google Protobuf) y pensados para la visualizaci\u00f3n en navegadores web modernos que soporten webGL. Una tesela vectorial (vector tiles) contiene datos vectoriales georreferenciados (puede contener m\u00faltiples capas), recortados en teselas para facilitar su recuperaci\u00f3n. Son equivalentes a las teselas raster tradicionales (XYZ,WMTS, TMS) pero retornan datos vectoriales en lugar de una imagen. Cada conjunto de teselas vectoriales tiene su propio esquema. Un esquema consiste en nombres de capas, atributos, selecci\u00f3n de elementos. Contexto En 2005 GoogleMaps introdujo una \"nueva\" forma de mostrar datos geogr\u00e1ficos por la web, pregenerando el mapa por niveles de zoom y tiles (teselas) de 256x256 pixeles. Tambi\u00e9n cre\u00f3 una nueva proyecci\u00f3n basada en mercator, llamada pseude-mercator o web mercator , cuyo c\u00f3digo EPSG es 3857 Despu\u00e9s de GoogleMaps, otros proveedores o plataformas c\u00f3mo OpenStreetMap siguen esta misma forma de organizar la geoinformaci\u00f3n. HTTP Para cargar la im\u00e1genes se ulitza una llamada HTTP rest d\u00f3nde se especifica; https://.../.../z/x/y.format Z= Nivel de zoom X=coordenada X Y=coordenada Y Formato Raster: Im\u00e1gen png o JPEG Vector: (pbf o mvt) Protocolos Existen tres especificaciones para servir tiles TMS (Tile Map Service): X Y coordenadas empiezan de debajo izquierda (t\u00edpico eje cartesiano de coordenadas) WMTS (Web Map Tile Service): OGC estandard , corrdenadas empiezan de arriba izquierda. ZXY o \"slippy map\": Igual que TMS pero la Y empieza por arriba izquierda Caracteristicas Las teselas vectoriales han sido utilizadas por el cliente Android de Google Maps desde diciembre de 2010 y en el cliente de escritorio desde 2013. Las teselas vectoriales para renderizar los datos de OpenStreetMap se propusieron por primera vez en marzo de 2013 y est\u00e1n soportadas por Mapnik, el renderizador de datos de OpenStreetMap m\u00e1s utilizado. Mapbox, proveedor comercial de herramientas de cartograf\u00eda personalizada y de hosting, es el m\u00e1xini impulsor de esta tecnologia y ha centrado su herramienta de cartograf\u00eda, Mapbox Studio, en torno a las teselas vectoriales. Cada tile es un contenedor de datos vectores y atributos Los Tiles no tienen estilo, el estilo se aplica en cliente Soporta rotaci\u00f3n y orientaci\u00f3n Soporta extrusi\u00f3n y 3D Herramientas y recursos Fuente: https://github.com/mapbox/awesome-vector-tiles Parsers & Generators vector-tile-js - Parses vector tiles with JavaScript. mapnik-vector-tile - C++ vector tile read/write implementation on top of Mapnik. mbtiles-cpp - C++ library for decoding of mbtiles and vector data into function callbacks. vector-tile-py - Python tool to convert a Mapnik vector tile to GeoJSON node-mapnik - Node.js API for vector tiles which depends on mapnik-vector-tile vector-tile-cs - Parses vector tiles with C# (native C# implementation, no dependencies). mapbox-vector-tile-cs - Parses vector tiles with C# (uses protobuf-net). tilelive-bridge - Implements Tilelive API for creating vector tiles from traditional Mapnik datasources in Node.js. tilelive-vector - Implements Tilelive API for reading vector tiles and rendering to image tiles in Node.js. mapbox-vector-tile is a Python package for vector tile encoding. Used in Mapzen's vector tile service tileserver and TileStache. :warning: Only support V1 Tile spec and not V2, no longer maintained geojson-vt - Slice GeoJSON into vector tiles on the fly in the browser. java-vector-tile - A java encoder and decoder for vector tiles. mapbox-vector-tile-java - Encode and decode v2.1 Mapbox Vector Tiles. Convert JTS Geometry to and from MVT features, including simple user data support. Utility functions for converting world coordinates to MVT coordinates and clipping to a tile envelope. cached-vector-tile - An alternative implementation of the vector-tile-js interface, backed by plain JS objects/arrays rather than parsed-on-demand protobuf data. Trades away memory efficiency for faster feature.loadGeometry() calls. tilegrinder - A helper library for applying a data altering function on each vector tile in an MBTiles, using the native protobuf wrapper for de- and encoding, recompressing the results and storing them either in an MBTiles or as single files. SwiftVectorTiles - A Swift encoder for vector tiles according to the Mapbox vector tile spec. orb - A Go geometry library with mvt <-> geojson support. Clients Mapbox GL Native - C++/OpenGL vector maps library with native SDKs for Android, iOS, Node.js, macOS, and Qt Mapbox GL JS - JavaScript/WebGL vector maps library. OpenLayers 3 - JavaScript vector & raster library. WhirlyGlobe/Maply - Objective C code that is able to read and render vector tiles(and style with mapnik xml) on iOS devices. Leaflet.MapboxVectorTile is able to read PBF MapboxVectorTiles from a REST endpoint and render them as a TileLayer on a Leaflet Map. Use this option if you want to utilize vector tiles on a standard Leaflet web map without needing WebGL. CARTO Mobile SDK - C++ maps library focused on offline features, for iOS, Android, Windows Phone and Xamarin with bindings for Java, Objective-C and C#. Based on Nutiteq Maps SDK , but open source and uses CartoCSS. Mapzen Tangram - JavaScript library for rendering 2D & 3D maps live in a web browser with WebGL, supports MVT, GeoJSON, TopoJSON Mapzen Tangram-es - C++ library for rendering 2D and 3D maps using OpenGL ES 2 with custom styling and interactions mapbox-gl-leaflet - Create Mapbox GL layers in Leaflet react-native-mapbox-gl - Render Mapbox GL maps from React applications hoverboard - Render vector tiles on canvas with Leaflet 0.7.x (supports GeoJSON, TopoJSON, and protobuf) :warning: no longer maintained Leaflet.VectorGrid - Display gridded vector data (sliced GeoJSON, TopoJSON or Mapbox Vector Tiles) in Leaflet 1.0.0 ArcGIS API for JavaScript - Draw vector tile layers as part of your web map. Rendering done via mapbox-gl-js integration. mapscii - A Vector Tile to Braille and ASCII renderer for xterm-compatible terminals Unofficial Mapbox GL Native bindings for Qt QML - Qt QML bindings for Qt 5.6 and higher. Mapbox-vector-tiles-basic-js-renderer - A fork of mapbox-gl-js giving you full control over rendering of specific tiles, also provides vector tile overlay for google maps. Applications / Command line tools Mapbox Studio - Web design studio for creating and styling vector tiles. Mapbox Studio Classic - Desktop design studio for both creating vector tiles from raw geodata and for rendering them on-the-fly into image tiles. Internally uses tilelive.js modules to handle vector tiles (see tilelive-bridge and tilelive-vector ) :warning: use Mapbox Studio instead. kosmtik - Design maps with CartoCSS and Mapnik. ArcGIS Pro - Generate vector tiles from maps authored in ArcGIS Pro or imported from ArcMap. MVT Styler - map style editor for vector tiles. Maputnik - A visual style editor for the Mapbox GL style specification. QGIS Vector Tiles Reader - QGIS Python plugin which reads Mapbox Vector Tiles from local MBTiles file or remote mapbox-gl-inspect - Plugin for Mapbox GL JS to view the view and inspect VT features. CLI Utilities mbview - Watch MBTiles in your localhost. View tiles in a basic Mapbox GL JS webapp locally tippecanoe - Build vector tilesets from large collections of GeoJSON features. tilemaker - Command line tool to produce vector tiles directly from an .osm.pbf extract without an intermediate database. mapbox-filter - Filter MBTiles according to Mapbox GL JS styles, shrink MBTiles directly, serve locally over http, publish to S3-compatibile storage vector-tiles-producer Command line tool in C++ to creates vector tiles for a given area at chosen zoom levels using a Mapnik XML. :warning: no longer maintained vt-geojson - decodes vector tiles to GeoJSON FeatureCollections tl - An alternate command line interface to tilelive tileshrink - Reduce the layer extent and simplify the resulting geometries of all vector tiles in an MBTiles tiler @GeoVation - Command line tool for converting GeoJSON, Shapefiles or PostGIS layer to raw Vector Tiles (or MBTiles) tiler @thomersch - Command line tool to convert GeoJSON to Vector Tiles (written in Go language). geojson2mvt - npm package for building a static vector tile tree for given xyz bounds from a geojson file (uses geojson-vt ) OGR MVT and MBTiles - The GDAL/OGR MVT and MBTILES drivers can be used to read and write vector tiles, respectively as tileset on the filesystem or in a mbtiles container (GDAL >= 2.3.0) MBUtil - Import and export MBTiles to disk :warning: no longer maintained Datamaps C application that can be used to create vector tiles and store them in an mbtiles. See the render-vector command. :warning: no longer maintained, use tippecanoe instead Mapbox GL JS Plugins gl-draw - Adds support for drawing and editing features on Mapbox GL JS maps Servers tessera - Supports serving and rendering vector tiles. Uses the same core libraries as Mapbox Studio. tessella - lightweight Node.js Mapbox Vector Tiles server. Inspired by tessera. tilestrata - with tilestrata-vt, it can generate Mapnik Vector Tiles; with tilestrata-postgismvt , it can serve Mapbox Vector Tiles from a PostGIS db Utilery Server to generate vector tiles from PostGIS queries. Python based :warning: no longer maintained tileserver Mapzen Vector Tile Service. TileStache added support for Mapbox Vector tiles via .pbf extension requests. Kartotherian Wikipedia tile server with Tilerator backend tile pre-generator ArcGIS Online - Supports serving vector tiles and rendering in the mapping application powered by the ArcGIS API for JavaScript Portal for ArcGIS - Supports serving vector tiles and rendering in the mapping application powered by the ArcGIS API for JavaScript tilesplash - A light and quick nodejs webserver for serving topojson or mapbox vector tiles from a postgis backend go-vtile-example - An example server written in Go Tegola - A MVT server written in pure Go that supports serving tiles from a PostGIS data provider. t-rex - MVT server in a single executable written in Rust. Serves tiles from PostGIS supporting custom tile grids. OSM Scout Server - Maps server providing vector and raster tiles, geocoder, and router. Designed to be used on Linux (mobile and PC) to provide offline maps; written in C++ postserve - A small Python based tileserver using ST_AsMVT and ST_AsMVTGeom to generate vector tiles on the fly. Designed for use with PostGIS 2.4 and the OpenMapTiles project SpatialServer (PGRestAPI) - A multi-purpose GeoSpatial NodeJS web server created at SpatialDev that not only serves MBTiles stuffed with vector tiles, it can also cut vector tiles on the fly from a PostGIS database. :warning: No longer maintained. OpenMapTiles - Set of open-source tools for self-hosting of OpenStreetMap maps in more than 50 languages. It provides both raster as well as vector tiles, WMS and WMTS services for GIS programs, support for JavaScript viewers and mobile SDK. Hastile - Haskell web server using PostGIS to deliver vector tiles. MapServer - Open Source platform for publishing spatial data and interactive mapping applications to the web. MVT output available in 7.2 Low-level utilities vt-pbf serialize JavaScript objects representing vector tiles into binary Protocol Buffer encodings of vector tiles vtzero - minimalist vector tile decoder and encoder in C++ mvt-fixtures - a suite of valid and invalid test fixtures according to the Mapbox Vector Tile spec versions. Includes simplified unit test fixtures and real-world fixtures to test your encoders and decoders. zellige - command line utility written to convert GeoJSON to MVT. mapbox-gl-function - Mapbox GL style function evaluator :warning: now maintained as party of mapbox-gl-js mapbox-gl-filter-simplify - Simplifies and complexifies filters in Mapbox GL Styles :warning: removed Articles Vector tiles remixed - guide to using tilemaker to generating vector tiles Build Your Own Static Vector Tile Pipeline - guide transforming, encoding and hosting tiles in the cloud; using ogr2ogr + tippecanoe + Mapbox GL JS Using the new MVT function in PostGIS - Building a vector tile service with PostGIS, express, and pg-promise. License","title":"Introduccion a vector tiles"},{"location":"introduccion_a_vector_tiles/#introduccion-a-vector-tiles-y-mapbox-i","text":"Vector Tiles es un formato para almacenar datos geogr\u00e1ficos en formato binario (Google Protobuf) y pensados para la visualizaci\u00f3n en navegadores web modernos que soporten webGL. Una tesela vectorial (vector tiles) contiene datos vectoriales georreferenciados (puede contener m\u00faltiples capas), recortados en teselas para facilitar su recuperaci\u00f3n. Son equivalentes a las teselas raster tradicionales (XYZ,WMTS, TMS) pero retornan datos vectoriales en lugar de una imagen. Cada conjunto de teselas vectoriales tiene su propio esquema. Un esquema consiste en nombres de capas, atributos, selecci\u00f3n de elementos.","title":"Introducci\u00f3n a Vector Tiles y Mapbox (I)"},{"location":"introduccion_a_vector_tiles/#contexto","text":"En 2005 GoogleMaps introdujo una \"nueva\" forma de mostrar datos geogr\u00e1ficos por la web, pregenerando el mapa por niveles de zoom y tiles (teselas) de 256x256 pixeles. Tambi\u00e9n cre\u00f3 una nueva proyecci\u00f3n basada en mercator, llamada pseude-mercator o web mercator , cuyo c\u00f3digo EPSG es 3857 Despu\u00e9s de GoogleMaps, otros proveedores o plataformas c\u00f3mo OpenStreetMap siguen esta misma forma de organizar la geoinformaci\u00f3n.","title":"Contexto"},{"location":"introduccion_a_vector_tiles/#http","text":"Para cargar la im\u00e1genes se ulitza una llamada HTTP rest d\u00f3nde se especifica; https://.../.../z/x/y.format Z= Nivel de zoom X=coordenada X Y=coordenada Y Formato Raster: Im\u00e1gen png o JPEG Vector: (pbf o mvt)","title":"HTTP"},{"location":"introduccion_a_vector_tiles/#protocolos","text":"Existen tres especificaciones para servir tiles TMS (Tile Map Service): X Y coordenadas empiezan de debajo izquierda (t\u00edpico eje cartesiano de coordenadas) WMTS (Web Map Tile Service): OGC estandard , corrdenadas empiezan de arriba izquierda. ZXY o \"slippy map\": Igual que TMS pero la Y empieza por arriba izquierda","title":"Protocolos"},{"location":"introduccion_a_vector_tiles/#caracteristicas","text":"Las teselas vectoriales han sido utilizadas por el cliente Android de Google Maps desde diciembre de 2010 y en el cliente de escritorio desde 2013. Las teselas vectoriales para renderizar los datos de OpenStreetMap se propusieron por primera vez en marzo de 2013 y est\u00e1n soportadas por Mapnik, el renderizador de datos de OpenStreetMap m\u00e1s utilizado. Mapbox, proveedor comercial de herramientas de cartograf\u00eda personalizada y de hosting, es el m\u00e1xini impulsor de esta tecnologia y ha centrado su herramienta de cartograf\u00eda, Mapbox Studio, en torno a las teselas vectoriales. Cada tile es un contenedor de datos vectores y atributos Los Tiles no tienen estilo, el estilo se aplica en cliente Soporta rotaci\u00f3n y orientaci\u00f3n Soporta extrusi\u00f3n y 3D","title":"Caracteristicas"},{"location":"introduccion_a_vector_tiles/#herramientas-y-recursos","text":"Fuente: https://github.com/mapbox/awesome-vector-tiles","title":"Herramientas y recursos"},{"location":"introduccion_a_vector_tiles/#parsers-generators","text":"vector-tile-js - Parses vector tiles with JavaScript. mapnik-vector-tile - C++ vector tile read/write implementation on top of Mapnik. mbtiles-cpp - C++ library for decoding of mbtiles and vector data into function callbacks. vector-tile-py - Python tool to convert a Mapnik vector tile to GeoJSON node-mapnik - Node.js API for vector tiles which depends on mapnik-vector-tile vector-tile-cs - Parses vector tiles with C# (native C# implementation, no dependencies). mapbox-vector-tile-cs - Parses vector tiles with C# (uses protobuf-net). tilelive-bridge - Implements Tilelive API for creating vector tiles from traditional Mapnik datasources in Node.js. tilelive-vector - Implements Tilelive API for reading vector tiles and rendering to image tiles in Node.js. mapbox-vector-tile is a Python package for vector tile encoding. Used in Mapzen's vector tile service tileserver and TileStache. :warning: Only support V1 Tile spec and not V2, no longer maintained geojson-vt - Slice GeoJSON into vector tiles on the fly in the browser. java-vector-tile - A java encoder and decoder for vector tiles. mapbox-vector-tile-java - Encode and decode v2.1 Mapbox Vector Tiles. Convert JTS Geometry to and from MVT features, including simple user data support. Utility functions for converting world coordinates to MVT coordinates and clipping to a tile envelope. cached-vector-tile - An alternative implementation of the vector-tile-js interface, backed by plain JS objects/arrays rather than parsed-on-demand protobuf data. Trades away memory efficiency for faster feature.loadGeometry() calls. tilegrinder - A helper library for applying a data altering function on each vector tile in an MBTiles, using the native protobuf wrapper for de- and encoding, recompressing the results and storing them either in an MBTiles or as single files. SwiftVectorTiles - A Swift encoder for vector tiles according to the Mapbox vector tile spec. orb - A Go geometry library with mvt <-> geojson support.","title":"Parsers &amp; Generators"},{"location":"introduccion_a_vector_tiles/#clients","text":"Mapbox GL Native - C++/OpenGL vector maps library with native SDKs for Android, iOS, Node.js, macOS, and Qt Mapbox GL JS - JavaScript/WebGL vector maps library. OpenLayers 3 - JavaScript vector & raster library. WhirlyGlobe/Maply - Objective C code that is able to read and render vector tiles(and style with mapnik xml) on iOS devices. Leaflet.MapboxVectorTile is able to read PBF MapboxVectorTiles from a REST endpoint and render them as a TileLayer on a Leaflet Map. Use this option if you want to utilize vector tiles on a standard Leaflet web map without needing WebGL. CARTO Mobile SDK - C++ maps library focused on offline features, for iOS, Android, Windows Phone and Xamarin with bindings for Java, Objective-C and C#. Based on Nutiteq Maps SDK , but open source and uses CartoCSS. Mapzen Tangram - JavaScript library for rendering 2D & 3D maps live in a web browser with WebGL, supports MVT, GeoJSON, TopoJSON Mapzen Tangram-es - C++ library for rendering 2D and 3D maps using OpenGL ES 2 with custom styling and interactions mapbox-gl-leaflet - Create Mapbox GL layers in Leaflet react-native-mapbox-gl - Render Mapbox GL maps from React applications hoverboard - Render vector tiles on canvas with Leaflet 0.7.x (supports GeoJSON, TopoJSON, and protobuf) :warning: no longer maintained Leaflet.VectorGrid - Display gridded vector data (sliced GeoJSON, TopoJSON or Mapbox Vector Tiles) in Leaflet 1.0.0 ArcGIS API for JavaScript - Draw vector tile layers as part of your web map. Rendering done via mapbox-gl-js integration. mapscii - A Vector Tile to Braille and ASCII renderer for xterm-compatible terminals Unofficial Mapbox GL Native bindings for Qt QML - Qt QML bindings for Qt 5.6 and higher. Mapbox-vector-tiles-basic-js-renderer - A fork of mapbox-gl-js giving you full control over rendering of specific tiles, also provides vector tile overlay for google maps.","title":"Clients"},{"location":"introduccion_a_vector_tiles/#applications-command-line-tools","text":"Mapbox Studio - Web design studio for creating and styling vector tiles. Mapbox Studio Classic - Desktop design studio for both creating vector tiles from raw geodata and for rendering them on-the-fly into image tiles. Internally uses tilelive.js modules to handle vector tiles (see tilelive-bridge and tilelive-vector ) :warning: use Mapbox Studio instead. kosmtik - Design maps with CartoCSS and Mapnik. ArcGIS Pro - Generate vector tiles from maps authored in ArcGIS Pro or imported from ArcMap. MVT Styler - map style editor for vector tiles. Maputnik - A visual style editor for the Mapbox GL style specification. QGIS Vector Tiles Reader - QGIS Python plugin which reads Mapbox Vector Tiles from local MBTiles file or remote mapbox-gl-inspect - Plugin for Mapbox GL JS to view the view and inspect VT features.","title":"Applications / Command line tools"},{"location":"introduccion_a_vector_tiles/#cli-utilities","text":"mbview - Watch MBTiles in your localhost. View tiles in a basic Mapbox GL JS webapp locally tippecanoe - Build vector tilesets from large collections of GeoJSON features. tilemaker - Command line tool to produce vector tiles directly from an .osm.pbf extract without an intermediate database. mapbox-filter - Filter MBTiles according to Mapbox GL JS styles, shrink MBTiles directly, serve locally over http, publish to S3-compatibile storage vector-tiles-producer Command line tool in C++ to creates vector tiles for a given area at chosen zoom levels using a Mapnik XML. :warning: no longer maintained vt-geojson - decodes vector tiles to GeoJSON FeatureCollections tl - An alternate command line interface to tilelive tileshrink - Reduce the layer extent and simplify the resulting geometries of all vector tiles in an MBTiles tiler @GeoVation - Command line tool for converting GeoJSON, Shapefiles or PostGIS layer to raw Vector Tiles (or MBTiles) tiler @thomersch - Command line tool to convert GeoJSON to Vector Tiles (written in Go language). geojson2mvt - npm package for building a static vector tile tree for given xyz bounds from a geojson file (uses geojson-vt ) OGR MVT and MBTiles - The GDAL/OGR MVT and MBTILES drivers can be used to read and write vector tiles, respectively as tileset on the filesystem or in a mbtiles container (GDAL >= 2.3.0) MBUtil - Import and export MBTiles to disk :warning: no longer maintained Datamaps C application that can be used to create vector tiles and store them in an mbtiles. See the render-vector command. :warning: no longer maintained, use tippecanoe instead","title":"CLI Utilities"},{"location":"introduccion_a_vector_tiles/#mapbox-gl-js-plugins","text":"gl-draw - Adds support for drawing and editing features on Mapbox GL JS maps","title":"Mapbox GL JS Plugins"},{"location":"introduccion_a_vector_tiles/#servers","text":"tessera - Supports serving and rendering vector tiles. Uses the same core libraries as Mapbox Studio. tessella - lightweight Node.js Mapbox Vector Tiles server. Inspired by tessera. tilestrata - with tilestrata-vt, it can generate Mapnik Vector Tiles; with tilestrata-postgismvt , it can serve Mapbox Vector Tiles from a PostGIS db Utilery Server to generate vector tiles from PostGIS queries. Python based :warning: no longer maintained tileserver Mapzen Vector Tile Service. TileStache added support for Mapbox Vector tiles via .pbf extension requests. Kartotherian Wikipedia tile server with Tilerator backend tile pre-generator ArcGIS Online - Supports serving vector tiles and rendering in the mapping application powered by the ArcGIS API for JavaScript Portal for ArcGIS - Supports serving vector tiles and rendering in the mapping application powered by the ArcGIS API for JavaScript tilesplash - A light and quick nodejs webserver for serving topojson or mapbox vector tiles from a postgis backend go-vtile-example - An example server written in Go Tegola - A MVT server written in pure Go that supports serving tiles from a PostGIS data provider. t-rex - MVT server in a single executable written in Rust. Serves tiles from PostGIS supporting custom tile grids. OSM Scout Server - Maps server providing vector and raster tiles, geocoder, and router. Designed to be used on Linux (mobile and PC) to provide offline maps; written in C++ postserve - A small Python based tileserver using ST_AsMVT and ST_AsMVTGeom to generate vector tiles on the fly. Designed for use with PostGIS 2.4 and the OpenMapTiles project SpatialServer (PGRestAPI) - A multi-purpose GeoSpatial NodeJS web server created at SpatialDev that not only serves MBTiles stuffed with vector tiles, it can also cut vector tiles on the fly from a PostGIS database. :warning: No longer maintained. OpenMapTiles - Set of open-source tools for self-hosting of OpenStreetMap maps in more than 50 languages. It provides both raster as well as vector tiles, WMS and WMTS services for GIS programs, support for JavaScript viewers and mobile SDK. Hastile - Haskell web server using PostGIS to deliver vector tiles. MapServer - Open Source platform for publishing spatial data and interactive mapping applications to the web. MVT output available in 7.2","title":"Servers"},{"location":"introduccion_a_vector_tiles/#low-level-utilities","text":"vt-pbf serialize JavaScript objects representing vector tiles into binary Protocol Buffer encodings of vector tiles vtzero - minimalist vector tile decoder and encoder in C++ mvt-fixtures - a suite of valid and invalid test fixtures according to the Mapbox Vector Tile spec versions. Includes simplified unit test fixtures and real-world fixtures to test your encoders and decoders. zellige - command line utility written to convert GeoJSON to MVT. mapbox-gl-function - Mapbox GL style function evaluator :warning: now maintained as party of mapbox-gl-js mapbox-gl-filter-simplify - Simplifies and complexifies filters in Mapbox GL Styles :warning: removed","title":"Low-level utilities"},{"location":"introduccion_a_vector_tiles/#articles","text":"Vector tiles remixed - guide to using tilemaker to generating vector tiles Build Your Own Static Vector Tile Pipeline - guide transforming, encoding and hosting tiles in the cloud; using ogr2ogr + tippecanoe + Mapbox GL JS Using the new MVT function in PostGIS - Building a vector tile service with PostGIS, express, and pg-promise.","title":"Articles"},{"location":"introduccion_a_vector_tiles/#license","text":"","title":"License"},{"location":"introduccion_github/","text":"2. La Plataforma GitHub y \u00f3rdenes b\u00e1sicas Git. Recursos GitHub Web https://github.com/ Tutorial https://guides.github.com/activities/hello-world/ Github Pages https://guides.github.com/features/pages/ Tutorial http://rogerdudler.github.io/git-guide/index.es.html Wikipedia https://es.wikipedia.org/wiki/GitHub \u00bfQu\u00e9 es GitHub? GitHub plataforma web de desarrollo colaborativoque permite para alojar proyectos utilizando el sistema de control de versiones Git . Se utiliza principalmente para la creaci\u00f3n de c\u00f3digo fuente software. Tambi\u00e9n permite hacer hosting de p\u00e0ginas web. \u00bfPara qu\u00e9 nos va servir GitHub? Para matener nuestros desarrollos y hacer hosting de nuestros mapas. \u00bfQu\u00e9 es Git? Git es un sistema de control de versiones desarrollado por Linus Torvalds (creador de Linux) El sistema de control de versiones ayuda a registrar los cambios realizados al c\u00f3digo por una o varias personas, posibilitando as\u00ed el trabajo colaborativo y el versionado de software. Flujo de trabajo El repositorio local esta compuesto por tres \"\u00e1rboles\" administrados por git. El primero es tu Directorio de trabajo que contiene los archivos, el segundo es el Index que actua como una zona intermedia, y el \u00faltimo es el HEAD que apunta al \u00faltimo commit realizado. Fuente: https://rogerdudler.github.io/git-guide/index.es.html \u00d3rdenes b\u00e1sicas de Git \u00d3rdenes Description git clone <url_repo_git> Clonar proyecto git pull Recibir cambios proyecto remoto git add . A\u00f1adir cambios al \u00cdndice local git commit -m \"mensaje commit\" Realizar commit git push origin main Enviar cambios al repositorio remoto Para saber m\u00e1s: https://desarrolloweb.com/manuales/manual-de-git.html Instalar cliente GIT Atencion!! Para poder lanzar \u00f3rdenes GIT, clonar y mantener un reopositorio necessitamos tener instalado un cliente GIT Instalar cliente GIT para windows https://git-scm.com/download/win NOTA: Para m\u00e1s informaci\u00f3n ver VIDEO 1","title":"2. La Plataforma GitHub y \u00f3rdenes b\u00e1sicas Git."},{"location":"introduccion_github/#2-la-plataforma-github-y-ordenes-basicas-git","text":"","title":"2. La Plataforma GitHub y \u00f3rdenes b\u00e1sicas Git."},{"location":"introduccion_github/#recursos-github","text":"Web https://github.com/ Tutorial https://guides.github.com/activities/hello-world/ Github Pages https://guides.github.com/features/pages/ Tutorial http://rogerdudler.github.io/git-guide/index.es.html Wikipedia https://es.wikipedia.org/wiki/GitHub","title":"Recursos GitHub"},{"location":"introduccion_github/#que-es-github","text":"GitHub plataforma web de desarrollo colaborativoque permite para alojar proyectos utilizando el sistema de control de versiones Git . Se utiliza principalmente para la creaci\u00f3n de c\u00f3digo fuente software. Tambi\u00e9n permite hacer hosting de p\u00e0ginas web.","title":"\u00bfQu\u00e9 es GitHub?"},{"location":"introduccion_github/#para-que-nos-va-servir-github","text":"Para matener nuestros desarrollos y hacer hosting de nuestros mapas.","title":"\u00bfPara qu\u00e9 nos va servir GitHub?"},{"location":"introduccion_github/#que-es-git","text":"Git es un sistema de control de versiones desarrollado por Linus Torvalds (creador de Linux) El sistema de control de versiones ayuda a registrar los cambios realizados al c\u00f3digo por una o varias personas, posibilitando as\u00ed el trabajo colaborativo y el versionado de software.","title":"\u00bfQu\u00e9 es Git?"},{"location":"introduccion_github/#flujo-de-trabajo","text":"El repositorio local esta compuesto por tres \"\u00e1rboles\" administrados por git. El primero es tu Directorio de trabajo que contiene los archivos, el segundo es el Index que actua como una zona intermedia, y el \u00faltimo es el HEAD que apunta al \u00faltimo commit realizado. Fuente: https://rogerdudler.github.io/git-guide/index.es.html","title":"Flujo de trabajo"},{"location":"introduccion_github/#ordenes-basicas-de-git","text":"\u00d3rdenes Description git clone <url_repo_git> Clonar proyecto git pull Recibir cambios proyecto remoto git add . A\u00f1adir cambios al \u00cdndice local git commit -m \"mensaje commit\" Realizar commit git push origin main Enviar cambios al repositorio remoto Para saber m\u00e1s: https://desarrolloweb.com/manuales/manual-de-git.html","title":"\u00d3rdenes b\u00e1sicas de Git"},{"location":"introduccion_github/#instalar-cliente-git","text":"Atencion!! Para poder lanzar \u00f3rdenes GIT, clonar y mantener un reopositorio necessitamos tener instalado un cliente GIT Instalar cliente GIT para windows https://git-scm.com/download/win NOTA: Para m\u00e1s informaci\u00f3n ver VIDEO 1","title":"Instalar cliente GIT"},{"location":"introduccion_mapas_3d/","text":"","title":"11. Introducci\u00f3n Mapas 3D"},{"location":"introduccion_maputnik/","text":"Introducci\u00f3n Podemos trabajar con la libreria MapBox GL JS sin utilizar los estilos , servicios ni app Tokens de Mapbox Podemos editar estilos sin utilizar MapBox Studio, directamente con Maputnik https://maputnik.github.io/ \u00bf Cuando utilizar los servicios de MapBox? Cuando tenemos un dataset grande.Mapbox nos ofrece hasta 50 GB gratis Cuando necesitamos utilitzar alguno de sus servicios (geocoding, routing) o sus estilos Cuando necesitamos alta disponibilidad \u00bf Cuando utilizar los servicios de MapBox? Cuando necesito trabajor con cartografia oficial Cuando tengo dataset peque\u00f1os (< 50.000 geometrias) Cuando solos visualizo terceros servicios OpenICGC Es un web con recursos y servicios open del Institut Cartogr\u00e1fic i Geol\u00f2gic de Catalunya Presenta estilos y bases Vector Tiles mundiales d\u00f3nde fusiona datos OSM y del ICGC en un esquema de OpenMapTiles https://openicgc.github.io/ Mapa estilo H\u00edbrido Seleccionaremos el estilo Hibrid de OpenICGC https://geoserveis.icgc.cat/contextmaps/hibrid.json Creamos archivo mapbox-icgc.html < html > < head > < meta charset = 'utf-8' /> < title > Hibrido </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < style > body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } </ style > < script > function Init () { mapboxgl . accessToken = '' ; var map = new mapboxgl . Map ({ container : 'map' , style : 'https://geoserveis.icgc.cat/contextmaps/hibrid.json' , center : [ 2.16859 , 41.3954 ], zoom : 13 , hash : true , pitch : 45 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); } </ script > </ head > < body onload = \"Init()\" > < div id = 'map' ></ div > </ body > </ html > Crear nuestro propio estilo Seleccionaremos el estilo Full dark de OpenICGC https://geoserveis.icgc.cat/contextmaps/fulldark.json Vamos al editor de Maputnik https://maputnik.github.io/editor/ Open --> Load from Url -->Pegamos URL --> Open URL Canviamos colores del estilos de forma libre Export --> Download --> Guardamos en /geoweb/datos/miestilo.json \u00bfSubimos el estilo al GitHub? git pull git add . git commit -m \"mi estilo\" git push Mapa estilo propio Creamos archivo mapbox-miestilo2.html < html > < head > < meta charset = 'utf-8' /> < title > Mi estilo </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < style > body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } </ style > < script > function Init () { mapboxgl . accessToken = '' ; var map = new mapboxgl . Map ({ container : 'map' , style : 'https://gis-master-m2.github.io/geoweb/datos/miestilo.json' , center : [ 2.16859 , 41.3954 ], zoom : 13 , hash : true , pitch : 45 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); } </ script > </ head > < body onload = \"Init()\" > < div id = 'map' ></ div > </ body > </ html > A\u00f1adimos un GeoJson local , como un nuevo source GeoJSON Es el constructor principal del mapa https://docs.mapbox.com/mapbox-gl-js/style-spec/#sources-geojson < html > < head > < meta charset = 'utf-8' /> < title > Mi estilo </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < style > body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } </ style > < script > function Init () { mapboxgl . accessToken = '' ; var map = new mapboxgl . Map ({ container : 'map' , style : 'https://gis-master-m2.github.io/geoweb/datos/miestilo.json' , center : [ 2.16859 , 41.3954 ], zoom : 13 , hash : true , pitch : 45 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( 'load' , function () { map . addSource ( \"carrils-bici\" , { type : \"geojson\" , data : \"datos/carrils-bici.geojson\" }); //fin map source map . addLayer ({ id : \"carrils-bici-layer\" , type : \"line\" , source : \"carrils-bici\" , layout : { \"line-join\" : \"round\" , \"line-cap\" : \"round\" }, paint : { \"line-color\" : \"#FF0000\" , \"line-width\" : 8 } }); //fin add layers }); //Fin load mapa } </ script > </ head > < body onload = \"Init()\" > < div id = 'map' ></ div > </ body > </ html > \u00bfSubimos el ejemplo al GitHub? git pull git add . git commit -m \"mi estilo\" git push","title":"14. Mapas personalizados con Maputnik y MapBox GL JS"},{"location":"introduccion_maputnik/#introduccion","text":"Podemos trabajar con la libreria MapBox GL JS sin utilizar los estilos , servicios ni app Tokens de Mapbox Podemos editar estilos sin utilizar MapBox Studio, directamente con Maputnik https://maputnik.github.io/","title":"Introducci\u00f3n"},{"location":"introduccion_maputnik/#cuando-utilizar-los-servicios-de-mapbox","text":"Cuando tenemos un dataset grande.Mapbox nos ofrece hasta 50 GB gratis Cuando necesitamos utilitzar alguno de sus servicios (geocoding, routing) o sus estilos Cuando necesitamos alta disponibilidad","title":"\u00bf Cuando utilizar los servicios de MapBox?"},{"location":"introduccion_maputnik/#cuando-utilizar-los-servicios-de-mapbox_1","text":"Cuando necesito trabajor con cartografia oficial Cuando tengo dataset peque\u00f1os (< 50.000 geometrias) Cuando solos visualizo terceros servicios","title":"\u00bf Cuando utilizar los servicios de MapBox?"},{"location":"introduccion_maputnik/#openicgc","text":"Es un web con recursos y servicios open del Institut Cartogr\u00e1fic i Geol\u00f2gic de Catalunya Presenta estilos y bases Vector Tiles mundiales d\u00f3nde fusiona datos OSM y del ICGC en un esquema de OpenMapTiles https://openicgc.github.io/","title":"OpenICGC"},{"location":"introduccion_maputnik/#mapa-estilo-hibrido","text":"Seleccionaremos el estilo Hibrid de OpenICGC https://geoserveis.icgc.cat/contextmaps/hibrid.json Creamos archivo mapbox-icgc.html < html > < head > < meta charset = 'utf-8' /> < title > Hibrido </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < style > body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } </ style > < script > function Init () { mapboxgl . accessToken = '' ; var map = new mapboxgl . Map ({ container : 'map' , style : 'https://geoserveis.icgc.cat/contextmaps/hibrid.json' , center : [ 2.16859 , 41.3954 ], zoom : 13 , hash : true , pitch : 45 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); } </ script > </ head > < body onload = \"Init()\" > < div id = 'map' ></ div > </ body > </ html >","title":"Mapa estilo H\u00edbrido"},{"location":"introduccion_maputnik/#crear-nuestro-propio-estilo","text":"Seleccionaremos el estilo Full dark de OpenICGC https://geoserveis.icgc.cat/contextmaps/fulldark.json Vamos al editor de Maputnik https://maputnik.github.io/editor/ Open --> Load from Url -->Pegamos URL --> Open URL Canviamos colores del estilos de forma libre Export --> Download --> Guardamos en /geoweb/datos/miestilo.json \u00bfSubimos el estilo al GitHub? git pull git add . git commit -m \"mi estilo\" git push","title":"Crear nuestro propio estilo"},{"location":"introduccion_maputnik/#mapa-estilo-propio","text":"Creamos archivo mapbox-miestilo2.html < html > < head > < meta charset = 'utf-8' /> < title > Mi estilo </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < style > body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } </ style > < script > function Init () { mapboxgl . accessToken = '' ; var map = new mapboxgl . Map ({ container : 'map' , style : 'https://gis-master-m2.github.io/geoweb/datos/miestilo.json' , center : [ 2.16859 , 41.3954 ], zoom : 13 , hash : true , pitch : 45 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); } </ script > </ head > < body onload = \"Init()\" > < div id = 'map' ></ div > </ body > </ html > A\u00f1adimos un GeoJson local , como un nuevo source GeoJSON Es el constructor principal del mapa https://docs.mapbox.com/mapbox-gl-js/style-spec/#sources-geojson < html > < head > < meta charset = 'utf-8' /> < title > Mi estilo </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < style > body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } </ style > < script > function Init () { mapboxgl . accessToken = '' ; var map = new mapboxgl . Map ({ container : 'map' , style : 'https://gis-master-m2.github.io/geoweb/datos/miestilo.json' , center : [ 2.16859 , 41.3954 ], zoom : 13 , hash : true , pitch : 45 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( 'load' , function () { map . addSource ( \"carrils-bici\" , { type : \"geojson\" , data : \"datos/carrils-bici.geojson\" }); //fin map source map . addLayer ({ id : \"carrils-bici-layer\" , type : \"line\" , source : \"carrils-bici\" , layout : { \"line-join\" : \"round\" , \"line-cap\" : \"round\" }, paint : { \"line-color\" : \"#FF0000\" , \"line-width\" : 8 } }); //fin add layers }); //Fin load mapa } </ script > </ head > < body onload = \"Init()\" > < div id = 'map' ></ div > </ body > </ html > \u00bfSubimos el ejemplo al GitHub? git pull git add . git commit -m \"mi estilo\" git push","title":"Mapa estilo propio"},{"location":"mallas_discretas_algoritmos/","text":"Mallas discretas y algoritmos en JS El creciente inter\u00e9s y facilidad para acceder a plataformas de Machine Learning, el uso generalizado del lenguage JavaScript y la captura masiva de datos geolocalizados permiten que cada vez existan m\u00e1s aplicaciones de webmaping que ejecutan y visualizan complejos algoritmos antes, solo accessible en servidor y en \u00e0mbitos cientificos. Los modelos y algoritmos espaciales se han convertido en modelo de negocio Temario Mallas discretas y algoritmos en JS Machine Learning Algoritmos en JS Mallas discretas Ejemplos de aplicaciones Ver presentaci\u00f3n Video 10","title":"17. Mallas discretas y algoritmos en JS"},{"location":"mallas_discretas_algoritmos/#mallas-discretas-y-algoritmos-en-js","text":"El creciente inter\u00e9s y facilidad para acceder a plataformas de Machine Learning, el uso generalizado del lenguage JavaScript y la captura masiva de datos geolocalizados permiten que cada vez existan m\u00e1s aplicaciones de webmaping que ejecutan y visualizan complejos algoritmos antes, solo accessible en servidor y en \u00e0mbitos cientificos. Los modelos y algoritmos espaciales se han convertido en modelo de negocio Temario Mallas discretas y algoritmos en JS Machine Learning Algoritmos en JS Mallas discretas Ejemplos de aplicaciones","title":"Mallas discretas y algoritmos en JS"},{"location":"mallas_discretas_algoritmos/#ver-presentacion","text":"Video 10","title":"Ver presentaci\u00f3n"},{"location":"mapa_de_rutas/","text":"","title":"12. Mapa de rutas"},{"location":"mapbox_avanzado/","text":"Ejemplos avanzados Vamos a realizar dos aplicaciones avanzadas tanto en su complejidad com viusializaci\u00f3n \u00bfPara que no puede servir? Como base para nuestra pr\u00e1ctica final Para ver la potencialidad de los estilos de mapbox Para aprender nuevos m\u00e9todos y funcionalidades de Mapbox GL JS Para connectarnos y utlizar servicios externos Para observar formas de programar y solucionar problemas Para aprender a reutilizar c\u00f3digo Visualizador de terremotos Atencion!! Nos han encargado realizar un mapa mundial para visualizar los \u00faltimos terremotos acontecidos Sabemos que GeoNames.org tiene un servicio JSON para interrogar los terremotos https://www.geonames.org/ OpenICGC tiene un estio mundial que nos puede servir como fondo https://geoserveis.icgc.cat/contextmaps/positron.json El estilo de Mapbox tiene un tipo \"circle\" que puedo cambiar de color y tama\u00f1o https://docs.mapbox.com/mapbox-gl-js/style-spec/#layers-circle Paso 1: Servicio GeoNames Geonames.org Buscamos el servicio de terremotos y cu\u00e1l es su implementaci\u00f3n https://www.geonames.org/export/JSON-webservices.html#earthquakesJSON Paso 2: Crearemos el archivo terremotos.html A\u00f1adimos c\u00f3digo con mapa base \"positron\" ICGC < html > < head > < meta charset = 'utf-8' /> < title > Terremotos </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script > var map ; function init () { mapboxgl . accessToken = \"\" ; map = new mapboxgl . Map ({ container : 'map' , style : 'https://geoserveis.icgc.cat/contextmaps/positron.json' , center : [ 9.746 , 40.473 ], zoom : 5.5 , hash : true , pitch : 0 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); } //fin init </ script > </ head > < body onload = \"init()\" > < div id = 'map' ></ div > </ body > </ html > Paso 3:Creamos archivo JS Dentro de nuestro directorio /geoweb/js/ creamos el archivo terremotos.js , d\u00f3nde crearemos funciones especificas de nuestro proyect Dentro de nuestro directorio /geoweb/js/ creamos el archivo utils.js , d\u00f3nde crearemos funciones gen\u00e9ricas que puedan ser reutilizadas Paso 4. A\u00f1adimos JS A\u00f1adimos estos archivos (de momento vac\u00edos) a terremotos.html < html > < head > < meta charset = 'utf-8' /> < title > Terremotos </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/terremotos.js' ></ script > < script > var map ; function init () { mapboxgl . accessToken = \"\" ; map = new mapboxgl . Map ({ container : 'map' , style : 'https://geoserveis.icgc.cat/contextmaps/positron.json' , center : [ 9.746 , 40.473 ], zoom : 5.5 , hash : true , pitch : 0 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); } //fin init </ script > </ head > < body onload = \"init()\" > < div id = 'map' ></ div > </ body > </ html > Paso 5: funci\u00f3n gen\u00e9rica GET Creamos una funci\u00f3n gen\u00e9rica para enviar y recibir respuesta de cualquier servicio GET que retorne un JSON dentro de utils.js async function enviarPeticion ( url ) { return fetch ( url ) . then ( function ( response ) { return response . json () }) . then ( function ( data ) { //console.log('Respuesta', data); return data ; }). catch ( function ( error ) { console . log ( 'Error' , error ); alert ( \"Error peticion\" ); return null ; }); } Paso 6 :convertir la respuesta de JSON GeoNames al formato GeoJSON Creamos una funci\u00f3n para convertir la respuesta de JSON GeoNames al formato GeoJSON en terremotos.js Miramos web https://geojson.io function terremotosGeonamesToGeoJSON ( respuestaGeonames ){ var geoJSON = { \"type\" : \"FeatureCollection\" , \"features\" : [] }; for ( var i = 0 ; i < respuestaGeonames . earthquakes . length ; i ++ ){ geoJSON . features . push ( { \"type\" : \"Feature\" , \"properties\" : { \"magnitude\" : respuestaGeonames . earthquakes [ i ]. magnitude , \"datetime\" : respuestaGeonames . earthquakes [ i ]. datetime }, \"geometry\" : { \"type\" : \"Point\" , \"coordinates\" : [ respuestaGeonames . earthquakes [ i ]. lng , respuestaGeonames . earthquakes [ i ]. lat ] } } ); } //fin loop return geoJSON ; } //fin funcion Paso 7 : Funci\u00f3n generarPeticionTerremotos() Vamos a a\u00f1adir otra funcion dentro terremotos.js de para: Capturar las coordenadas de mapa (BoundigBox) Crear la petici\u00f3n a Geonames Enviar petici\u00f3n Capturar la respuesta y convertirla a GeoJSON Generar Source y Layer de Mapbox Style y a\u00f1adir datos Justo debajo toda de la funci\u00f3n terremotosGeonamesToGeoJSON() a\u00f1adimos\" function generarPeticionTerremotos () { var peticion = 'https://secure.geonames.org/earthquakesJSON?' + 'north=' + map . getBounds (). _ne . lat + '&' + 'south=' + map . getBounds (). _sw . lat + '&' + 'east=' + map . getBounds (). _ne . lng + '&' + 'west=' + map . getBounds (). _sw . lng + '&' + 'maxRows=50&' + 'minMagnitude=5&' + 'username=masterupc&' ; enviarPeticion ( peticion ). then ( function ( respuestaGeonames ) { var geoJSON = terremotosGeonamesToGeoJSON ( respuestaGeonames ); if ( map . getSource ( \"terremotos_source\" )) { map . getSource ( \"terremotos_source\" ). setData ( geoJSON ); } else { map . addSource ( \"terremotos_source\" , { type : \"geojson\" , data : geoJSON }); map . addLayer ({ 'id' : 'terremotos' , 'type' : 'circle' , 'source' : 'terremotos_source' , 'paint' : { 'circle-color' : [ 'interpolate' , [ 'linear' ], [ 'get' , 'magnitude' ], 3 , '#ebe709' , 5 , '#eb1809' , 7 , '#ef4bf2' , ], 'circle-opacity' : 0.75 , 'circle-radius' : [ 'interpolate' , [ 'linear' ], [ 'get' , 'magnitude' ], 3 , 8 , 5 , 16 , 8 , 32 ] } }); map . addLayer ({ 'id' : 'terremotos-textos' , 'type' : 'symbol' , 'source' : 'terremotos_source' , 'layout' : { 'text-field' : [ 'format' , [ 'get' , 'magnitude' ], ], \"text-font\" : [ \"FiraSans-Italic\" ], 'text-size' : 10 }, 'paint' : { 'text-color' : 'rgba(0,0,0,1)' } }); } }); } // fin funcion Paso 8:La funci\u00f3n generarPeticionTerremotos() La funci\u00f3n generarPeticionTerremotos() \u00e9s la funci\u00f3n principal que necesitamos que se ejecute: Al cargar el mapa (evento load ) Cada vex que me muevo por el mapa (eventos moveend y zoomend ) < html > < head > < meta charset = 'utf-8' /> < title > Terremotos </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/terremotos.js' ></ script > < script > var map ; function Init () { mapboxgl . accessToken = '' ; map = new mapboxgl . Map ({ container : 'map' , style : 'https://geoserveis.icgc.cat/contextmaps/positron.json' , center : [ 9.746 , 40.473 ], zoom : 5.5 , hash : true , pitch : 0 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( \"load\" , function () { generarPeticionTerremotos (); }); // fin load mapa map . on ( \"zoomend\" , function () { generarPeticionTerremotos (); }); map . on ( \"moveend\" , function () { generarPeticionTerremotos (); }); } //fin init </ script > </ head > < body onload = \"Init()\" > < div id = 'map' ></ div > </ body > </ html > Paso 9:funci\u00f3n para generar popups Dentro del archivo utils.js a\u00f1adimos una funci\u00f3n para generar popups: function addPopupToMap ( nombreCapa ) { map . on ( 'click' , nombreCapa , function ( e ) { var text = \"\" ; //console.info(e); for ( key in e . features [ 0 ]. properties ) { text += \"<b>\" + key + \"</b>:\" + e . features [ 0 ]. properties [ key ] + \"<br>\" ; } new mapboxgl . Popup () . setLngLat ( e . lngLat ) . setHTML ( text ) . addTo ( map ); }); map . on ( 'mouseenter' , nombreCapa , function () { map . getCanvas (). style . cursor = 'pointer' ; }); map . on ( 'mouseleave' , nombreCapa , function () { map . getCanvas (). style . cursor = '' ; }); } Paso 10: Llamamos a la funcion addPopupToMap() Llamamos a la funcion addPopupToMap() pasando el nombre de nuestra capa activa: < html > < head > < meta charset = 'utf-8' /> < title > Terremotos </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/terremotos.js' ></ script > < script > var map ; function Init () { mapboxgl . accessToken = '' ; map = new mapboxgl . Map ({ container : 'map' , style : 'https://geoserveis.icgc.cat/contextmaps/positron.json' , center : [ 9.746 , 40.473 ], zoom : 5.5 , hash : true , pitch : 0 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( \"load\" , function () { generarPeticionTerremotos (); addPopupToMap ( \"terremotos\" ); }); // fin load mapa map . on ( \"zoomend\" , function () { generarPeticionTerremotos (); }); map . on ( \"moveend\" , function () { generarPeticionTerremotos (); }); } //fin init </ script > </ head > < body onload = \"Init()\" > < div id = 'map' ></ div > </ body > </ html > \u00bfA\u00f1adimos Titulo? \u00bfSubimos el ejemplo al GitHub? git pull git add . git commit -m \"terremotos\" git push Visualizador de edificios catastro BCN Atencion!! Nos han encargado realizar un mapa para visualizar edificios de Barcelona Sabemos que la direccion Direccion General de Catastro ofrece servicio de descarga de edificios http://www.catastro.minhap.es/webinspire/index.html OpenICGC tiene un estio mundial que nos puede servir como fondo https://geoserveis.icgc.cat/contextmaps/icgc.json Mapbox tiene un estio mundial oscuro que tambi\u00e9n nos puede servir como fondo mapbox://styles/mapbox/dark-v10 El estilo de Mapbox tiene un tipo \"fill-extrusion\" que puedo cambiar de color y extrudir geometrias https://docs.mapbox.com/mapbox-gl-js/style-spec/#layers-fill-extrusion Paso 1: Convertir edificios Catastro 1 * Descargamos datos [http://www.catastro.minhap.es/INSPIRE/Buildings/08/08900-BARCELONA/A.ES.SDGC.BU.08900.zip](http://www.catastro.minhap.es/INSPIRE/Buildings/08/08900-BARCELONA/A.ES.SDGC.BU.08900.zip) Convertimos el archivo A.ES.SDGC.BU.08900.buildingpart.gml a GeoJSON \"contrucciones.geojson\" con QGIS Lo cargamos como Tileset dentro de MapBox.com Paso 2: Crearemos el archivo edificios.html A\u00f1adimos ya los JS pr\u00f2pios < html > < head > < meta charset = 'utf-8' /> < title > Edificios </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/edificios.js' ></ script > < script > //A\u00f1adir vuestor token y/o estilo !! var map ; function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/mapbox/dark-v10' , center : [ 2.16859 , 41.3954 ], zoom : 15 , attributionControl : false , pitch : 45 , hash : true }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); } // final init </ script > </ head > < body onload = \"init()\" > < div id = \"map\" ></ div > </ body > </ html > Paso 3: Creamos archivo JS Dentro de nuestro directorio /geoweb/js/ creamos el archivo edificios.js , d\u00f3nde crearemos funciones especificas de nuestro proyecto Creamos la funci\u00f3n addEdificiosCapa() function addEdificiosCapa () { map . addSource ( \"edificios_source\" , { \"type\" : \"vector\" , \"url\" : \"mapbox://gismasterm2.47fz7naw\" // Nuestor ID Tileset }); //fin map source map . addLayer ({ \"id\" : \"edificios\" , \"type\" : \"fill-extrusion\" , \"source\" : \"edificios_source\" , \"source-layer\" : \"contrucciones-2558vn\" , // Nuestro nombre Tileset \"maxzoom\" : 21 , \"minzoom\" : 15 , // \"filter\": [\">\", \"numberOfFloorsAboveGround\", 0], \"paint\" : { \"fill-extrusion-color\" : [ \"interpolate\" , [ \"linear\" ], [ \"number\" , [ \"get\" , \"numberOfFloorsAboveGround\" ]], 0 , \"#FFFFFF\" , 1 , \"#e6b03d\" , 3 , \"#e6b03d\" , 6 , \"#3de66d\" , 9 , \"#3de6b1\" , 12 , \"#22ecf0\" , 15 , \"#14b1fd\" , 20 , \"#3d73e6\" , 40 , \"#123a8f\" , 60 , \"#ce2f7e\" , 106 , \"#ff4d4d\" ], \"fill-extrusion-height\" : [ \"interpolate\" , [ \"linear\" ], [ \"zoom\" ], 8 , 0 , 12.5 , 0 , 14 , [ \"*\" , 1 , [ \"to-number\" , [ \"get\" , \"numberOfFloorsAboveGround\" ]]], 16 , [ \"*\" , 1.5 , [ \"to-number\" , [ \"get\" , \"numberOfFloorsAboveGround\" ]]], 20 , [ \"*\" , 2 , [ \"to-number\" , [ \"get\" , \"numberOfFloorsAboveGround\" ]]] ], \"fill-extrusion-opacity\" : 0.9 } }); // fin addLayer capa texto \"water-name-lakeline-platja\", \"road-label\" } A\u00f1adimos filtro y orden de capas para una mejor visualizaci\u00f3n Paso 4: Llamamos funciones en el evento load de map Llamamos a la funci\u00f3n addEdificiosCapa() Reutilizamos c\u00f3digo !! y tambi\u00e9n llamamos a la funci\u00f3n de crear popup addPopupToMap < html > < head > < meta charset = 'utf-8' /> < title > Edificios </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/edificios.js' ></ script > < script > //A\u00f1adir vuestor token y/o estilo !! var map ; function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/mapbox/dark-v10' , center : [ 2.16859 , 41.3954 ], zoom : 15 , attributionControl : false , pitch : 45 , hash : true }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( 'load' , function () { addEdificiosCapa (); addPopupToMap ( \"edificios\" ); }); //fin onload } // final init </ script > </ head > < body onload = \"init()\" > < div id = \"map\" ></ div > </ body > </ html > Paso 5: Opciones de filtro Vamos a crear una funcionalidad para filtrar edificios seg\u00fan su altura Creamos un elementos HTML de tipu input:range para poder filtrar < html > < head > < meta charset = 'utf-8' /> < title > Edificios </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/edificios.js' ></ script > < script > //A\u00f1adir vuestor token y/o estilo !! var map ; function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/mapbox/dark-v10' , center : [ 2.16859 , 41.3954 ], zoom : 15 , attributionControl : false , pitch : 45 , hash : true }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( 'load' , function () { addEdificiosCapa (); addPopupToMap ( \"edificios\" ); }); //fin onload } // final init </ script > </ head > < body onload = \"init()\" > < div class = \"panelTopIzquierda\" > < h5 > Altura edificios </ h5 > < label id = \"altura\" > Altura superior a 0 m </ label > < input id = \"slider\" type = \"range\" min = \"1\" max = \"110\" step = \"5\" value = \"0\" /> </ div > < div id = \"map\" ></ div > </ body > </ html > A\u00f1adimos a estilobase.css las siguientes clases . panelTopIzquierda { position : absolute ; top : 45 px ; left : 20 px ; width : 200 px ; z-index : 1000 ; background-color : rgba ( 255 , 255 , 255 , 0.9 ); padding : 10 px ; font-size : 20 px ; color : #333333 ; border-radius : 5 px ; } . panelTopIzquierda label { font-size : 0.85 em ; } . panelTopIzquierda input { cursor : pointer ; width : 95 % ; } Paso 4: Funci\u00f3n de filtro A\u00f1adimos a edificios.js la funcion filtrarEdificios() function filtrarEdificios ( valor ) { map . setFilter ( \"edificios\" , [ \">\" , \"numberOfFloorsAboveGround\" , parseInt ( valor )]); document . getElementById ( \"altura\" ). innerHTML = \"Altura superior a \" + valor + \"m.\" ; } Paso 4: Evento onChange LLamamos a la funci\u00f3n de desde el evento onChange del objeto input de HTML < html > < head > < meta charset = 'utf-8' /> < title > Edificios </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/edificios.js' ></ script > < script > //A\u00f1adir vuestor token y/o estilo !! var map ; function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/mapbox/dark-v10' , center : [ 2.16859 , 41.3954 ], zoom : 15 , attributionControl : false , pitch : 45 , hash : true }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( 'load' , function () { addEdificiosCapa (); addPopupToMap ( \"edificios\" ); }); //fin onload } // final init </ script > </ head > < body onload = \"init()\" > < div class = \"panelTopIzquierda\" > < h5 > Altura edificios </ h5 > < label id = \"altura\" > Altura superior a 0 m </ label > < input onChange = \"filtrarEdificios(this.value)\" id = \"slider\" type = \"range\" min = \"1\" max = \"110\" step = \"5\" value = \"0\" /> </ div > < div id = \"map\" ></ div > </ body > </ html > Activar/ desactivar capa via c\u00f3digo map . setLayoutProperty ( \"edificios\" , \"visibility\" , \"visible\" ); map . setLayoutProperty ( \"edificios\" , \"visibility\" , \"none\" ); Popup personalizado function addPopupToMapEdificios ( nombreCapa ) { map . on ( 'click' , nombreCapa , function ( e ) { var text = \"\" ; //console.info(e); for ( key in e . features [ 0 ]. properties ) { if ( key == \"numberOfFloorsAboveGround\" ) { text += \"<b>Numero de plantas</b>:\" + e . features [ 0 ]. properties [ key ] + \"<br>\" ; } if ( key == \"localId\" ) { //localId 0004702DF3800C_part1 //http://ovc.catastro.meh.es/OVCServWeb/OVCWcfLibres/OVCFotoFachada.svc/RecuperarFotoFachadaGet?ReferenciaCatastral=0004701DF3800C //https://www1.sedecatastro.gob.es/CYCBienInmueble/OVCListaBienes.aspx?rc1=0004701&rc2=DF3800C var localId = e . features [ 0 ]. properties [ key ]; var localIdSplit = localId . split ( \"_\" ); // 0004702DF3800C part1 var parte1 = localIdSplit [ 0 ]. substring ( 0 , 7 ); var parte2 = localIdSplit [ 0 ]. substring ( 7 , localIdSplit [ 0 ]. length ); text += \"<img width=200 src=http://ovc.catastro.meh.es/OVCServWeb/OVCWcfLibres/OVCFotoFachada.svc/RecuperarFotoFachadaGet?ReferenciaCatastral=\" + localId + \"><br>\" ; text += \"<a target=blank href=https://www1.sedecatastro.gob.es/CYCBienInmueble/OVCListaBienes.aspx?rc1=\" + parte1 + \"&rc2=\" + parte2 + \">Ficha</a><br>\" ; } } new mapboxgl . Popup () . setLngLat ( e . lngLat ) . setHTML ( text ) . addTo ( map ); }); map . on ( 'mouseenter' , nombreCapa , function () { map . getCanvas (). style . cursor = 'pointer' ; }); map . on ( 'mouseleave' , nombreCapa , function () { map . getCanvas (). style . cursor = '' ; }); } Geocodificador Mapbox GL < html > < head > < meta charset = 'utf-8' /> < title > Edificios </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < script src = \"https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.min.js\" ></ script > < link rel = \"stylesheet\" href = \"https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.css\" type = \"text/css\" /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/edificios.js' ></ script > < script > //A\u00f1adir vuestor token y/o estilo !! var map ; function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/mapbox/dark-v10' , center : [ 2.16859 , 41.3954 ], zoom : 15 , attributionControl : false , pitch : 45 , hash : true }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . addControl ( new MapboxGeocoder ({ accessToken : mapboxgl . accessToken , mapboxgl : mapboxgl })); map . on ( 'load' , function () { addEdificiosCapa (); addPopupToMapEdificios ( \"edificios\" ); }); //fin onload } // final init </ script > </ head > < body onload = \"init()\" > < div class = \"panelTopIzquierda\" > < h5 > Altura edificios </ h5 > < label id = \"altura\" > Altura superior a 0 m </ label > < input onChange = \"filtrarEdificios(this.value)\" id = \"slider\" type = \"range\" min = \"1\" max = \"110\" step = \"5\" value = \"0\" /> </ div > < div id = \"map\" ></ div > </ body > </ html > ``` \u00bfPonemos t\u00edtulo? \u00bfSubimos el ejemplo al GitHub? ```bash 1 2 3 4 git pull git add . git commit -m \"terremotos\" git push ```","title":"16. Visor de terremotos"},{"location":"mapbox_avanzado/#ejemplos-avanzados","text":"Vamos a realizar dos aplicaciones avanzadas tanto en su complejidad com viusializaci\u00f3n","title":"Ejemplos avanzados"},{"location":"mapbox_avanzado/#para-que-no-puede-servir","text":"Como base para nuestra pr\u00e1ctica final Para ver la potencialidad de los estilos de mapbox Para aprender nuevos m\u00e9todos y funcionalidades de Mapbox GL JS Para connectarnos y utlizar servicios externos Para observar formas de programar y solucionar problemas Para aprender a reutilizar c\u00f3digo","title":"\u00bfPara que no puede servir?"},{"location":"mapbox_avanzado/#visualizador-de-terremotos","text":"Atencion!!","title":"Visualizador de terremotos"},{"location":"mapbox_avanzado/#paso-1-servicio-geonames","text":"Geonames.org Buscamos el servicio de terremotos y cu\u00e1l es su implementaci\u00f3n https://www.geonames.org/export/JSON-webservices.html#earthquakesJSON","title":"Paso 1: Servicio GeoNames"},{"location":"mapbox_avanzado/#paso-2","text":"Crearemos el archivo terremotos.html A\u00f1adimos c\u00f3digo con mapa base \"positron\" ICGC < html > < head > < meta charset = 'utf-8' /> < title > Terremotos </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script > var map ; function init () { mapboxgl . accessToken = \"\" ; map = new mapboxgl . Map ({ container : 'map' , style : 'https://geoserveis.icgc.cat/contextmaps/positron.json' , center : [ 9.746 , 40.473 ], zoom : 5.5 , hash : true , pitch : 0 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); } //fin init </ script > </ head > < body onload = \"init()\" > < div id = 'map' ></ div > </ body > </ html >","title":"Paso 2:"},{"location":"mapbox_avanzado/#paso-3creamos-archivo-js","text":"Dentro de nuestro directorio /geoweb/js/ creamos el archivo terremotos.js , d\u00f3nde crearemos funciones especificas de nuestro proyect Dentro de nuestro directorio /geoweb/js/ creamos el archivo utils.js , d\u00f3nde crearemos funciones gen\u00e9ricas que puedan ser reutilizadas","title":"Paso 3:Creamos archivo JS"},{"location":"mapbox_avanzado/#paso-4-anadimos-js","text":"A\u00f1adimos estos archivos (de momento vac\u00edos) a terremotos.html < html > < head > < meta charset = 'utf-8' /> < title > Terremotos </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/terremotos.js' ></ script > < script > var map ; function init () { mapboxgl . accessToken = \"\" ; map = new mapboxgl . Map ({ container : 'map' , style : 'https://geoserveis.icgc.cat/contextmaps/positron.json' , center : [ 9.746 , 40.473 ], zoom : 5.5 , hash : true , pitch : 0 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); } //fin init </ script > </ head > < body onload = \"init()\" > < div id = 'map' ></ div > </ body > </ html >","title":"Paso 4. A\u00f1adimos JS"},{"location":"mapbox_avanzado/#paso-5-funcion-generica-get","text":"Creamos una funci\u00f3n gen\u00e9rica para enviar y recibir respuesta de cualquier servicio GET que retorne un JSON dentro de utils.js async function enviarPeticion ( url ) { return fetch ( url ) . then ( function ( response ) { return response . json () }) . then ( function ( data ) { //console.log('Respuesta', data); return data ; }). catch ( function ( error ) { console . log ( 'Error' , error ); alert ( \"Error peticion\" ); return null ; }); }","title":"Paso 5: funci\u00f3n gen\u00e9rica GET"},{"location":"mapbox_avanzado/#paso-6-convertir-la-respuesta-de-json-geonames-al-formato-geojson","text":"Creamos una funci\u00f3n para convertir la respuesta de JSON GeoNames al formato GeoJSON en terremotos.js Miramos web https://geojson.io function terremotosGeonamesToGeoJSON ( respuestaGeonames ){ var geoJSON = { \"type\" : \"FeatureCollection\" , \"features\" : [] }; for ( var i = 0 ; i < respuestaGeonames . earthquakes . length ; i ++ ){ geoJSON . features . push ( { \"type\" : \"Feature\" , \"properties\" : { \"magnitude\" : respuestaGeonames . earthquakes [ i ]. magnitude , \"datetime\" : respuestaGeonames . earthquakes [ i ]. datetime }, \"geometry\" : { \"type\" : \"Point\" , \"coordinates\" : [ respuestaGeonames . earthquakes [ i ]. lng , respuestaGeonames . earthquakes [ i ]. lat ] } } ); } //fin loop return geoJSON ; } //fin funcion","title":"Paso 6 :convertir la respuesta de JSON GeoNames al formato GeoJSON"},{"location":"mapbox_avanzado/#paso-7-funcion-generarpeticionterremotos","text":"Vamos a a\u00f1adir otra funcion dentro terremotos.js de para: Capturar las coordenadas de mapa (BoundigBox) Crear la petici\u00f3n a Geonames Enviar petici\u00f3n Capturar la respuesta y convertirla a GeoJSON Generar Source y Layer de Mapbox Style y a\u00f1adir datos Justo debajo toda de la funci\u00f3n terremotosGeonamesToGeoJSON() a\u00f1adimos\" function generarPeticionTerremotos () { var peticion = 'https://secure.geonames.org/earthquakesJSON?' + 'north=' + map . getBounds (). _ne . lat + '&' + 'south=' + map . getBounds (). _sw . lat + '&' + 'east=' + map . getBounds (). _ne . lng + '&' + 'west=' + map . getBounds (). _sw . lng + '&' + 'maxRows=50&' + 'minMagnitude=5&' + 'username=masterupc&' ; enviarPeticion ( peticion ). then ( function ( respuestaGeonames ) { var geoJSON = terremotosGeonamesToGeoJSON ( respuestaGeonames ); if ( map . getSource ( \"terremotos_source\" )) { map . getSource ( \"terremotos_source\" ). setData ( geoJSON ); } else { map . addSource ( \"terremotos_source\" , { type : \"geojson\" , data : geoJSON }); map . addLayer ({ 'id' : 'terremotos' , 'type' : 'circle' , 'source' : 'terremotos_source' , 'paint' : { 'circle-color' : [ 'interpolate' , [ 'linear' ], [ 'get' , 'magnitude' ], 3 , '#ebe709' , 5 , '#eb1809' , 7 , '#ef4bf2' , ], 'circle-opacity' : 0.75 , 'circle-radius' : [ 'interpolate' , [ 'linear' ], [ 'get' , 'magnitude' ], 3 , 8 , 5 , 16 , 8 , 32 ] } }); map . addLayer ({ 'id' : 'terremotos-textos' , 'type' : 'symbol' , 'source' : 'terremotos_source' , 'layout' : { 'text-field' : [ 'format' , [ 'get' , 'magnitude' ], ], \"text-font\" : [ \"FiraSans-Italic\" ], 'text-size' : 10 }, 'paint' : { 'text-color' : 'rgba(0,0,0,1)' } }); } }); } // fin funcion","title":"Paso 7 : Funci\u00f3n generarPeticionTerremotos()"},{"location":"mapbox_avanzado/#paso-8la-funcion-generarpeticionterremotos","text":"La funci\u00f3n generarPeticionTerremotos() \u00e9s la funci\u00f3n principal que necesitamos que se ejecute: Al cargar el mapa (evento load ) Cada vex que me muevo por el mapa (eventos moveend y zoomend ) < html > < head > < meta charset = 'utf-8' /> < title > Terremotos </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/terremotos.js' ></ script > < script > var map ; function Init () { mapboxgl . accessToken = '' ; map = new mapboxgl . Map ({ container : 'map' , style : 'https://geoserveis.icgc.cat/contextmaps/positron.json' , center : [ 9.746 , 40.473 ], zoom : 5.5 , hash : true , pitch : 0 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( \"load\" , function () { generarPeticionTerremotos (); }); // fin load mapa map . on ( \"zoomend\" , function () { generarPeticionTerremotos (); }); map . on ( \"moveend\" , function () { generarPeticionTerremotos (); }); } //fin init </ script > </ head > < body onload = \"Init()\" > < div id = 'map' ></ div > </ body > </ html >","title":"Paso 8:La funci\u00f3n generarPeticionTerremotos()"},{"location":"mapbox_avanzado/#paso-9funcion-para-generar-popups","text":"Dentro del archivo utils.js a\u00f1adimos una funci\u00f3n para generar popups: function addPopupToMap ( nombreCapa ) { map . on ( 'click' , nombreCapa , function ( e ) { var text = \"\" ; //console.info(e); for ( key in e . features [ 0 ]. properties ) { text += \"<b>\" + key + \"</b>:\" + e . features [ 0 ]. properties [ key ] + \"<br>\" ; } new mapboxgl . Popup () . setLngLat ( e . lngLat ) . setHTML ( text ) . addTo ( map ); }); map . on ( 'mouseenter' , nombreCapa , function () { map . getCanvas (). style . cursor = 'pointer' ; }); map . on ( 'mouseleave' , nombreCapa , function () { map . getCanvas (). style . cursor = '' ; }); }","title":"Paso 9:funci\u00f3n para generar popups"},{"location":"mapbox_avanzado/#paso-10-llamamos-a-la-funcion-addpopuptomap","text":"Llamamos a la funcion addPopupToMap() pasando el nombre de nuestra capa activa: < html > < head > < meta charset = 'utf-8' /> < title > Terremotos </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/terremotos.js' ></ script > < script > var map ; function Init () { mapboxgl . accessToken = '' ; map = new mapboxgl . Map ({ container : 'map' , style : 'https://geoserveis.icgc.cat/contextmaps/positron.json' , center : [ 9.746 , 40.473 ], zoom : 5.5 , hash : true , pitch : 0 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( \"load\" , function () { generarPeticionTerremotos (); addPopupToMap ( \"terremotos\" ); }); // fin load mapa map . on ( \"zoomend\" , function () { generarPeticionTerremotos (); }); map . on ( \"moveend\" , function () { generarPeticionTerremotos (); }); } //fin init </ script > </ head > < body onload = \"Init()\" > < div id = 'map' ></ div > </ body > </ html > \u00bfA\u00f1adimos Titulo? \u00bfSubimos el ejemplo al GitHub? git pull git add . git commit -m \"terremotos\" git push","title":"Paso 10: Llamamos a la funcion addPopupToMap()"},{"location":"mapbox_avanzado/#visualizador-de-edificios-catastro-bcn","text":"Atencion!!","title":"Visualizador de edificios catastro BCN"},{"location":"mapbox_avanzado/#paso-1-convertir-edificios-catastro","text":"1 * Descargamos datos [http://www.catastro.minhap.es/INSPIRE/Buildings/08/08900-BARCELONA/A.ES.SDGC.BU.08900.zip](http://www.catastro.minhap.es/INSPIRE/Buildings/08/08900-BARCELONA/A.ES.SDGC.BU.08900.zip) Convertimos el archivo A.ES.SDGC.BU.08900.buildingpart.gml a GeoJSON \"contrucciones.geojson\" con QGIS Lo cargamos como Tileset dentro de MapBox.com","title":"Paso 1: Convertir edificios Catastro"},{"location":"mapbox_avanzado/#paso-2_1","text":"Crearemos el archivo edificios.html A\u00f1adimos ya los JS pr\u00f2pios < html > < head > < meta charset = 'utf-8' /> < title > Edificios </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/edificios.js' ></ script > < script > //A\u00f1adir vuestor token y/o estilo !! var map ; function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/mapbox/dark-v10' , center : [ 2.16859 , 41.3954 ], zoom : 15 , attributionControl : false , pitch : 45 , hash : true }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); } // final init </ script > </ head > < body onload = \"init()\" > < div id = \"map\" ></ div > </ body > </ html >","title":"Paso 2:"},{"location":"mapbox_avanzado/#paso-3-creamos-archivo-js","text":"Dentro de nuestro directorio /geoweb/js/ creamos el archivo edificios.js , d\u00f3nde crearemos funciones especificas de nuestro proyecto Creamos la funci\u00f3n addEdificiosCapa() function addEdificiosCapa () { map . addSource ( \"edificios_source\" , { \"type\" : \"vector\" , \"url\" : \"mapbox://gismasterm2.47fz7naw\" // Nuestor ID Tileset }); //fin map source map . addLayer ({ \"id\" : \"edificios\" , \"type\" : \"fill-extrusion\" , \"source\" : \"edificios_source\" , \"source-layer\" : \"contrucciones-2558vn\" , // Nuestro nombre Tileset \"maxzoom\" : 21 , \"minzoom\" : 15 , // \"filter\": [\">\", \"numberOfFloorsAboveGround\", 0], \"paint\" : { \"fill-extrusion-color\" : [ \"interpolate\" , [ \"linear\" ], [ \"number\" , [ \"get\" , \"numberOfFloorsAboveGround\" ]], 0 , \"#FFFFFF\" , 1 , \"#e6b03d\" , 3 , \"#e6b03d\" , 6 , \"#3de66d\" , 9 , \"#3de6b1\" , 12 , \"#22ecf0\" , 15 , \"#14b1fd\" , 20 , \"#3d73e6\" , 40 , \"#123a8f\" , 60 , \"#ce2f7e\" , 106 , \"#ff4d4d\" ], \"fill-extrusion-height\" : [ \"interpolate\" , [ \"linear\" ], [ \"zoom\" ], 8 , 0 , 12.5 , 0 , 14 , [ \"*\" , 1 , [ \"to-number\" , [ \"get\" , \"numberOfFloorsAboveGround\" ]]], 16 , [ \"*\" , 1.5 , [ \"to-number\" , [ \"get\" , \"numberOfFloorsAboveGround\" ]]], 20 , [ \"*\" , 2 , [ \"to-number\" , [ \"get\" , \"numberOfFloorsAboveGround\" ]]] ], \"fill-extrusion-opacity\" : 0.9 } }); // fin addLayer capa texto \"water-name-lakeline-platja\", \"road-label\" } A\u00f1adimos filtro y orden de capas para una mejor visualizaci\u00f3n","title":"Paso 3: Creamos archivo JS"},{"location":"mapbox_avanzado/#paso-4-llamamos-funciones-en-el-evento-load-de-map","text":"Llamamos a la funci\u00f3n addEdificiosCapa() Reutilizamos c\u00f3digo !! y tambi\u00e9n llamamos a la funci\u00f3n de crear popup addPopupToMap < html > < head > < meta charset = 'utf-8' /> < title > Edificios </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/edificios.js' ></ script > < script > //A\u00f1adir vuestor token y/o estilo !! var map ; function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/mapbox/dark-v10' , center : [ 2.16859 , 41.3954 ], zoom : 15 , attributionControl : false , pitch : 45 , hash : true }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( 'load' , function () { addEdificiosCapa (); addPopupToMap ( \"edificios\" ); }); //fin onload } // final init </ script > </ head > < body onload = \"init()\" > < div id = \"map\" ></ div > </ body > </ html >","title":"Paso 4: Llamamos funciones en el evento load de map"},{"location":"mapbox_avanzado/#paso-5-opciones-de-filtro","text":"Vamos a crear una funcionalidad para filtrar edificios seg\u00fan su altura Creamos un elementos HTML de tipu input:range para poder filtrar < html > < head > < meta charset = 'utf-8' /> < title > Edificios </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/edificios.js' ></ script > < script > //A\u00f1adir vuestor token y/o estilo !! var map ; function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/mapbox/dark-v10' , center : [ 2.16859 , 41.3954 ], zoom : 15 , attributionControl : false , pitch : 45 , hash : true }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( 'load' , function () { addEdificiosCapa (); addPopupToMap ( \"edificios\" ); }); //fin onload } // final init </ script > </ head > < body onload = \"init()\" > < div class = \"panelTopIzquierda\" > < h5 > Altura edificios </ h5 > < label id = \"altura\" > Altura superior a 0 m </ label > < input id = \"slider\" type = \"range\" min = \"1\" max = \"110\" step = \"5\" value = \"0\" /> </ div > < div id = \"map\" ></ div > </ body > </ html > A\u00f1adimos a estilobase.css las siguientes clases . panelTopIzquierda { position : absolute ; top : 45 px ; left : 20 px ; width : 200 px ; z-index : 1000 ; background-color : rgba ( 255 , 255 , 255 , 0.9 ); padding : 10 px ; font-size : 20 px ; color : #333333 ; border-radius : 5 px ; } . panelTopIzquierda label { font-size : 0.85 em ; } . panelTopIzquierda input { cursor : pointer ; width : 95 % ; }","title":"Paso 5: Opciones de filtro"},{"location":"mapbox_avanzado/#paso-4-funcion-de-filtro","text":"A\u00f1adimos a edificios.js la funcion filtrarEdificios() function filtrarEdificios ( valor ) { map . setFilter ( \"edificios\" , [ \">\" , \"numberOfFloorsAboveGround\" , parseInt ( valor )]); document . getElementById ( \"altura\" ). innerHTML = \"Altura superior a \" + valor + \"m.\" ; }","title":"Paso 4: Funci\u00f3n de filtro"},{"location":"mapbox_avanzado/#paso-4-evento-onchange","text":"LLamamos a la funci\u00f3n de desde el evento onChange del objeto input de HTML < html > < head > < meta charset = 'utf-8' /> < title > Edificios </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/edificios.js' ></ script > < script > //A\u00f1adir vuestor token y/o estilo !! var map ; function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/mapbox/dark-v10' , center : [ 2.16859 , 41.3954 ], zoom : 15 , attributionControl : false , pitch : 45 , hash : true }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( 'load' , function () { addEdificiosCapa (); addPopupToMap ( \"edificios\" ); }); //fin onload } // final init </ script > </ head > < body onload = \"init()\" > < div class = \"panelTopIzquierda\" > < h5 > Altura edificios </ h5 > < label id = \"altura\" > Altura superior a 0 m </ label > < input onChange = \"filtrarEdificios(this.value)\" id = \"slider\" type = \"range\" min = \"1\" max = \"110\" step = \"5\" value = \"0\" /> </ div > < div id = \"map\" ></ div > </ body > </ html > Activar/ desactivar capa via c\u00f3digo map . setLayoutProperty ( \"edificios\" , \"visibility\" , \"visible\" ); map . setLayoutProperty ( \"edificios\" , \"visibility\" , \"none\" ); Popup personalizado function addPopupToMapEdificios ( nombreCapa ) { map . on ( 'click' , nombreCapa , function ( e ) { var text = \"\" ; //console.info(e); for ( key in e . features [ 0 ]. properties ) { if ( key == \"numberOfFloorsAboveGround\" ) { text += \"<b>Numero de plantas</b>:\" + e . features [ 0 ]. properties [ key ] + \"<br>\" ; } if ( key == \"localId\" ) { //localId 0004702DF3800C_part1 //http://ovc.catastro.meh.es/OVCServWeb/OVCWcfLibres/OVCFotoFachada.svc/RecuperarFotoFachadaGet?ReferenciaCatastral=0004701DF3800C //https://www1.sedecatastro.gob.es/CYCBienInmueble/OVCListaBienes.aspx?rc1=0004701&rc2=DF3800C var localId = e . features [ 0 ]. properties [ key ]; var localIdSplit = localId . split ( \"_\" ); // 0004702DF3800C part1 var parte1 = localIdSplit [ 0 ]. substring ( 0 , 7 ); var parte2 = localIdSplit [ 0 ]. substring ( 7 , localIdSplit [ 0 ]. length ); text += \"<img width=200 src=http://ovc.catastro.meh.es/OVCServWeb/OVCWcfLibres/OVCFotoFachada.svc/RecuperarFotoFachadaGet?ReferenciaCatastral=\" + localId + \"><br>\" ; text += \"<a target=blank href=https://www1.sedecatastro.gob.es/CYCBienInmueble/OVCListaBienes.aspx?rc1=\" + parte1 + \"&rc2=\" + parte2 + \">Ficha</a><br>\" ; } } new mapboxgl . Popup () . setLngLat ( e . lngLat ) . setHTML ( text ) . addTo ( map ); }); map . on ( 'mouseenter' , nombreCapa , function () { map . getCanvas (). style . cursor = 'pointer' ; }); map . on ( 'mouseleave' , nombreCapa , function () { map . getCanvas (). style . cursor = '' ; }); } Geocodificador Mapbox GL < html > < head > < meta charset = 'utf-8' /> < title > Edificios </ title > < meta name = 'viewport' content = 'initial-scale=1,maximum-scale=1,user-scalable=no' /> < script src = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js' ></ script > < link href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel = 'stylesheet' /> < script src = \"https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.min.js\" ></ script > < link rel = \"stylesheet\" href = \"https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.css\" type = \"text/css\" /> < link href = 'css/estilobase.css' rel = 'stylesheet' /> < script src = 'js/utils.js' ></ script > < script src = 'js/edificios.js' ></ script > < script > //A\u00f1adir vuestor token y/o estilo !! var map ; function init () { mapboxgl . accessToken = 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' ; map = new mapboxgl . Map ({ container : 'map' , style : 'mapbox://styles/mapbox/dark-v10' , center : [ 2.16859 , 41.3954 ], zoom : 15 , attributionControl : false , pitch : 45 , hash : true }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . addControl ( new MapboxGeocoder ({ accessToken : mapboxgl . accessToken , mapboxgl : mapboxgl })); map . on ( 'load' , function () { addEdificiosCapa (); addPopupToMapEdificios ( \"edificios\" ); }); //fin onload } // final init </ script > </ head > < body onload = \"init()\" > < div class = \"panelTopIzquierda\" > < h5 > Altura edificios </ h5 > < label id = \"altura\" > Altura superior a 0 m </ label > < input onChange = \"filtrarEdificios(this.value)\" id = \"slider\" type = \"range\" min = \"1\" max = \"110\" step = \"5\" value = \"0\" /> </ div > < div id = \"map\" ></ div > </ body > </ html > ``` \u00bfPonemos t\u00edtulo? \u00bfSubimos el ejemplo al GitHub? ```bash 1 2 3 4 git pull git add . git commit -m \"terremotos\" git push ```","title":"Paso 4: Evento onChange"},{"location":"plugins_leaflet/","text":"5. Plugins Leaflet Gracias a ser un proyecto de c\u00f3digo abierto y de las aportaciones de los usuarios, Leaflet tiene m\u00e1s de 250 plugins o \"peque\u00f1as aplicaciones\" que a\u00f1aden funcionalidades a la libreria. Plugins http://leafletjs.com/plugins.html Success Visitamos la p\u00e1gina de plugins y miramos ejemplos \u00bfC\u00f3mo utilizar un Plugin? 1-Primero debemos buscar en la p\u00e1gina de plugins si existe alguno que nos ayude a solucionar nuestro problema o necessidad 2-Entraremos en la p\u00e1gina GIT del plugin y leeremos su documentaci\u00f3n. Atencion !! A veces la documentaci\u00f3n pueder ser poca y confusa 3.1- Si existe una versi\u00f3n on-line del plugin (URL en CDN), la invocaremos en nuestra aplicaci\u00f3n directamente 3.2- Si existe una p\u00e1gina de demo podemos mediante crtl+u ver c\u00f3digo fuente la url del plugin 3.3- Si no existe, descargaremos los archivos del plugin - son .js, pero tambie\u0144 pueden ser .css e imagenes - normalmente se encuentran en los directorios /dist o /src y los guardaremos en nuestro proyecto. Ejemplo a\u00f1adir plugin OSM Geocoder Plugin que permite connectar con servicios de Geocodificaci\u00f3nde OSM * Plugin https://github.com/k4r573n/leaflet-control-osm-geocoder < html lang = \"es\" > < head > < title > Leaflet ejemplo plugin </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > <!--Plugin OSNGeocode --> <!--si descargamos 3.3 --> <!--<script src=\"js/Control.OSMGeocoder.js\"></script>--> <!--<link rel=\"stylesheet\" href=\"js/Control.OSMGeocoder.css\" />--> <!--si a\u00f1adimos directamente 3.1--> < script src = \"https://rawgit.com/k4r573n/leaflet-control-osm-geocoder/master/Control.OSMGeocoder.js\" ></ script > < link rel = \"stylesheet\" href = \"https://rawgit.com/k4r573n/leaflet-control-osm-geocoder/master/Control.OSMGeocoder.css\" /> < style > body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } </ style > < script > var map , capa1 ; function init (){ map = L . map ( \"map\" ,{ center : [ 41.6863 , 1.8382 ], zoom : 8 }); capa1 = L . tileLayer ( \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" , { maxZoom : 19 , minZoom : 1 , attribution : \"OSM\" }); capa1 . addTo ( map ); //a\u00f1adir plugin var osmGeocoder = new L . Control . OSMGeocoder ({ placeholder : 'Buscar lugar...' }); map . addControl ( osmGeocoder ); } </ script > </ head > < body onLoad = \"init()\" > < div id = \"map\" ></ div > </ body > </ html >","title":"5. Plugins Leaflet"},{"location":"plugins_leaflet/#5-plugins-leaflet","text":"Gracias a ser un proyecto de c\u00f3digo abierto y de las aportaciones de los usuarios, Leaflet tiene m\u00e1s de 250 plugins o \"peque\u00f1as aplicaciones\" que a\u00f1aden funcionalidades a la libreria. Plugins http://leafletjs.com/plugins.html Success Visitamos la p\u00e1gina de plugins y miramos ejemplos","title":"5. Plugins Leaflet"},{"location":"plugins_leaflet/#como-utilizar-un-plugin","text":"1-Primero debemos buscar en la p\u00e1gina de plugins si existe alguno que nos ayude a solucionar nuestro problema o necessidad 2-Entraremos en la p\u00e1gina GIT del plugin y leeremos su documentaci\u00f3n. Atencion !! A veces la documentaci\u00f3n pueder ser poca y confusa 3.1- Si existe una versi\u00f3n on-line del plugin (URL en CDN), la invocaremos en nuestra aplicaci\u00f3n directamente 3.2- Si existe una p\u00e1gina de demo podemos mediante crtl+u ver c\u00f3digo fuente la url del plugin 3.3- Si no existe, descargaremos los archivos del plugin - son .js, pero tambie\u0144 pueden ser .css e imagenes - normalmente se encuentran en los directorios /dist o /src y los guardaremos en nuestro proyecto.","title":"\u00bfC\u00f3mo utilizar un Plugin?"},{"location":"plugins_leaflet/#ejemplo-anadir-plugin-osm-geocoder","text":"Plugin que permite connectar con servicios de Geocodificaci\u00f3nde OSM * Plugin https://github.com/k4r573n/leaflet-control-osm-geocoder < html lang = \"es\" > < head > < title > Leaflet ejemplo plugin </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > < link rel = \"stylesheet\" href = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" /> < script src = \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\" ></ script > <!--Plugin OSNGeocode --> <!--si descargamos 3.3 --> <!--<script src=\"js/Control.OSMGeocoder.js\"></script>--> <!--<link rel=\"stylesheet\" href=\"js/Control.OSMGeocoder.css\" />--> <!--si a\u00f1adimos directamente 3.1--> < script src = \"https://rawgit.com/k4r573n/leaflet-control-osm-geocoder/master/Control.OSMGeocoder.js\" ></ script > < link rel = \"stylesheet\" href = \"https://rawgit.com/k4r573n/leaflet-control-osm-geocoder/master/Control.OSMGeocoder.css\" /> < style > body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } </ style > < script > var map , capa1 ; function init (){ map = L . map ( \"map\" ,{ center : [ 41.6863 , 1.8382 ], zoom : 8 }); capa1 = L . tileLayer ( \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" , { maxZoom : 19 , minZoom : 1 , attribution : \"OSM\" }); capa1 . addTo ( map ); //a\u00f1adir plugin var osmGeocoder = new L . Control . OSMGeocoder ({ placeholder : 'Buscar lugar...' }); map . addControl ( osmGeocoder ); } </ script > </ head > < body onLoad = \"init()\" > < div id = \"map\" ></ div > </ body > </ html >","title":"Ejemplo a\u00f1adir plugin OSM Geocoder"},{"location":"recursos_open_data/","text":"Recursos open data Ver presentaci\u00f3n OpenData Ejemplo API CKAN El API de CKAN http://docs.ckan.org/en/latest/api/index.html no ofrece diferetes niveles y m\u00e9todos para poder buscar y filtrar datasets. En este ejemplo utilizaremos el m\u00e9todo resource_search para buscar datasets en cualquier portal de CKAN Para buscar en portales CKAN necesitamos saber la URL del portal , exemplo http://demo.ckan.org y a\u00f1adir el path del m\u00e9todo a utilizar /api/3/action/resource_search? http://demo.ckan.org/api/3/action/resource_search ? Creaci\u00f3n de un buscador Dentro de nuestor espacio de trabajo creamos un archivo con el nombre de ckan.html . Abrimos el archivo ckan.html con un editor de texto y copiamos el siguiente c\u00f3digo. <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" > < title > B\u00e0sic sample Resource Search API CKAN </ title > < link rel = \"stylesheet\" href = \"https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" /> < script type = \"text/javascript\" src = \"https://code.jquery.com/jquery-3.3.1.min.js\" ></ script > < script type = \"text/javascript\" src = \"https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\" ></ script > < style > # results { width : 100 % ; background-color : #f2f2f2 ; margin : 5 px ; } </ style > </ head > < body > </ body > </ html > Abrimos el archivo ckan.html en el navegador. A\u00f1adimos dentro del tag <body> la maquetaci\u00f3n HTML < div class = \"container\" > < h3 > Resource Search example </ h3 > < p > Package Search < br > < a target = \"_blank\" href = \"http://docs.ckan.org/en/latest/api/\" > http://docs.ckan.org/en/latest/api/ </ a > </ p > < form id = \"_form\" > < div class = \"form-group\" > < label for = \"url_ckan\" > Url: </ label > < select id = \"url_ckan\" > < option value = \"http://demo.ckan.org/api/3/action/resource_search?\" > ckan.org </ option > < option value = \"http://old.datahub.io/api/3/action/resource_search?\" > old.datahub.io </ option > < option value = \"http://dadesobertes.seu-e.cat/api/action/resource_search?\" > Dades Obertes aoc </ option > <!-- a\u00f1adimos BCN opendata --> </ select > </ div > < div class = \"form-group\" > < label for = \"text_filter_ckan\" > Filter < u > (name, descripton, format ) </ u ></ label > < input type = \"text\" class = \"form-control\" id = \"text_filter_ckan\" value = \"name:wifi\" placeholder = \"text filter\" > </ div > </ form > < form class = \"form-inline\" > < div class = \"form-group\" > < label for = \"num_results_ckan\" > Num results </ label > < input type = \"number\" size = \"3\" class = \"form-control\" id = \"num_results_ckan\" value = \"5\" > </ div > </ form > < form > < div class = \"form-group\" > < button id = \"bt_send\" type = \"button\" class = \"btn btn-default btn-success\" > Send </ button > </ div > </ form > < hr > < div id = \"results\" ></ div > < div id = \"mygrid\" style = \"height: 500px\" ></ div > </ div > Abrimos el archivo ckan.html en el navegador. A\u00f1adimos just encima del tag </head> el siguiente c\u00f3digo javascript < script > $ . ajaxSetup ({ cache : true }); $ ( document ). ready ( function () { $ ( '#bt_send' ). on ( 'click' , function () { sendRequest (); }); $ ( \"#_form\" ). submit ( function ( event ) { sendRequest (); event . preventDefault (); }); function sendRequest (){ var data = { rows : $ ( '#num_results_ckan' ). val (), query : $ ( '#text_filter_ckan' ). val () }; $ . ajax ({ url : $ ( '#url_ckan' ). val (), data : data , dataType : 'jsonp' , success : function ( data ) { if ( data . success ) { $ ( '#results' ). html ( 'Total results found: ' + data . result . count ); $ ( '#mygrid' ). html ( '' ); if ( data . result . count >= 1 ) { $ ( '#mygrid' ). append ( '<ul>' ); $ . each ( data . result . results , function ( index , value ) { $ ( '#mygrid' ). append ( '<li>' + value . name + ': <a href=\"' + value . url + '\">' + value . url + '</a>' ); $ ( '#mygrid' ). append ( '</li>' ); }); $ ( '#mygrid' ). append ( '</ul>' ); } } else { $ ( '#results' ). html ( \"An error occured: \" + data . error . message ); } }, error : function ( xhr ) { $ ( '#results' ). html ( \"An error occured: \" + xhr . status + \" \" + xhr . statusText ); } }); } }); < /script> Abrimos p\u00e0gina ckan.html y lanzamos b\u00fasquedas Note Ejercicio 1 : A\u00f1adir una o m\u00e1s URLs de otros portales de CKAN, por ejemplo OpenDataBCN Note Ejercicio 2 : \u00bfC\u00f3mo har\u00edamos para qu\u00e9 en los resultados apareciera la fecha de creaci\u00f3n del dato? Note Ejercicio 3 : Descargamos CSV accidentes Ejemplos API SOCRATA El API de Socrata https://dev.socrata.com no ofrece diferetes niveles y m\u00e9todos para poder buscar y filtra datasets. En este primer ejemplo utilizaremos la Discovery API https://socratadiscovery.docs.apiary.io/ para buscar datasets en cualquier portal de Socrata Creaci\u00f3n de un buscador Creamos un archivo con el nombre de socrata.html . Abrimos el archivo socrata.html con un editor de texto y copiamos el siguiente c\u00f3digo. <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" > < title > Basic sample API Discovery SOCRATA </ title > < link rel = \"stylesheet\" href = \"https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" /> < script type = \"text/javascript\" src = \"https://code.jquery.com/jquery-3.3.1.min.js\" ></ script > < script type = \"text/javascript\" src = \"https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\" ></ script > < style > # results { width : 100 % ; background-color : #f2f2f2 ; margin : 5 px ; } </ style > </ head > < body > </ body > </ html > Abrimos el archivo socrata.html en el navegador. A\u00f1adimos dentro del tag * <body> * la maquetaci\u00f3n HTML. < div class = \"container\" > < h3 > SOCRATA Resource Search example </ h3 > < p > Discovery API < br > < a target = \"_blank\" href = \"http://docs.socratadiscovery.apiary.io\" > http://docs.socratadiscovery.apiary.io </ a > </ p > < form > < div class = \"form-group\" > < div class = \"radio\" > < label > < input type = \"radio\" name = \"optionsRadios\" id = \"optionsRadios1\" value = \"https://api.eu.socrata.com/api/catalog/v1\" checked > EU API Discovery </ label > </ div > < div class = \"radio\" > < label > < input type = \"radio\" name = \"optionsRadios\" id = \"optionsRadios2\" value = \"https://api.us.socrata.com/api/catalog/v1\" > US API Discovery </ label > </ div > </ div > < div class = \"form-group\" > < label for = \"text_filter_socrata\" > Filter < u ></ u ></ label > < input type = \"text\" class = \"form-control\" id = \"text_filter_socrata\" value = \"Contracts\" placeholder = \"text filter\" > </ div > </ form > < form class = \"form-inline\" > < div class = \"form-group\" > < label for = \"num_results_socrata\" > Num results </ label > < input type = \"number\" size = \"3\" class = \"form-control\" id = \"num_results_socrata\" value = \"25\" > </ div > </ form > < form > < div class = \"form-group\" > < button id = \"bt_send\" type = \"button\" class = \"btn btn-default btn-success\" > Send </ button > </ div > </ form > < hr > < div id = \"results\" ></ div > < div id = \"mygrid\" style = \"height: 500px\" ></ div > </ div > Abrimos el archivo socrata.html en el navegador. A\u00f1adimos just encima del tag </head> el siguiente c\u00f3digo javascript < script > $ . ajaxSetup ({ cache : true }); $ ( document ). ready ( function () { $ ( '#bt_send' ). on ( 'click' , function () { sendRequest (); }); $ ( '#text_filter_socrata' ). on ( 'keypress' , function ( event ) { if ( event . which == 13 ) { sendRequest (); event . preventDefault (); } }); function sendRequest () { var _data = { q : $ ( '#text_filter_socrata' ). val (), limit : $ ( '#num_results_socrata' ). val () }; $ . ajax ({ url : $ ( 'input:radio[name=optionsRadios]:checked' ). val (), data : _data , method : 'GET' , dataType : 'json' , success : function ( data ) { console . info ( data ); if ( data ) { $ ( '#results' ). html ( 'Total results found: ' + data . resultSetSize ); $ ( '#mygrid' ). html ( '' ); if ( data . resultSetSize >= 1 ) { $ ( '#mygrid' ). append ( '<ul>' ); $ . each ( data . results , function ( index , value ) { $ ( '#mygrid' ). append ( '<li><b>' + value . resource . name + '</b>(' + value . resource . type + '): <a target=\"_blank\" href=\"' + value . link + '\">' + value . link + '</a>' ); $ ( '#mygrid' ). append ( '</li>' ); }); $ ( '#mygrid' ). append ( '</ul>' ); } } else { $ ( '#results' ). html ( \"An error occured:\" ); } }, error : function ( xhr ) { $ ( '#results' ). html ( \"An error occured: \" + xhr . status + \" \" + xhr . statusText ); } }); } }); < /script> Abrimos p\u00e0gina socrata.html y lanzamos b\u00fasquedas Note Ejercicio 1 : \u00bfC\u00f3mo filtrar\u00edamos para qu\u00e9 s\u00f3lo ense\u00f1ara \"assets\" de tipo \"map\", only:map ? Socrata y Leaflet: Mapificaci\u00f3n de resultados Creamos un archivo con el nombre de socrata_mapa.html . Abrimos el archivo socrata_mapa.html con un editor de texto y copiamos el siguiente c\u00f3digo. <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" > < title > Basic Leaflet Map sample API Discovery SOCRATA </ title > < link rel = \"stylesheet\" href = \"https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" /> < link rel = \"stylesheet\" href = \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/leaflet.css\" /> < script type = \"text/javascript\" src = \"https://code.jquery.com/jquery-3.3.1.min.js\" ></ script > < script type = \"text/javascript\" src = \"https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\" ></ script > < script type = \"text/javascript\" src = \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/leaflet.js\" ></ script > < script type = \"text/javascript\" src = \"https://cdnjs.cloudflare.com/ajax/libs/leaflet-ajax/2.1.0/leaflet.ajax.min.js\" ></ script > < script type = \"text/javascript\" src = \"https://cdnjs.cloudflare.com/ajax/libs/spin.js/2.3.2/spin.min.js\" ></ script > < script type = \"text/javascript\" src = \"https://cdnjs.cloudflare.com/ajax/libs/Leaflet.Spin/1.1.0/leaflet.spin.min.js\" ></ script > < style > # results { width : 100 % ; background-color : #f2f2f2 ; margin : 5 px ; } </ style > </ head > < body > </ body > </ html > A\u00f1adimos dentro del tag <body> la maquetaci\u00f3n HTML < div class = \"container\" > < h3 > SOCRATA Maps Resources </ h3 > < div class = \"row\" > < div class = \"col-md-6\" > < p > Discovery API < br > < a target = \"_blank\" href = \"http://docs.socratadiscovery.apiary.io\" > http://docs.socratadiscovery.apiary.io </ a > </ p > < form > < div class = \"form-group\" > < div class = \"radio\" > < label > < input type = \"radio\" name = \"optionsRadios\" id = \"optionsRadios1\" value = \"https://api.eu.socrata.com/api/catalog/v1\" checked > EU API Discovery </ label > </ div > < div class = \"radio\" > < label > < input type = \"radio\" name = \"optionsRadios\" id = \"optionsRadios2\" value = \"https://api.us.socrata.com/api/catalog/v1\" > US API Discovery </ label > </ div > </ div > < div class = \"form-group\" > < label for = \"text_filter_socrata\" > Filter < u ></ u ></ label > < input type = \"text\" class = \"form-control\" id = \"text_filter_socrata\" value = \"\" placeholder = \"text filter\" > < div class = \"checkbox\" > < label >< input type = \"checkbox\" id = \"chk_transparencia\" value = \"analisi.transparenciacatalunya.cat\" > Only https://analisi.transparenciacatalunya.cat </ label > </ div > < div > Filter : only=maps </ div > </ div > </ form > < form class = \"form-inline\" > < div class = \"form-group\" > < label for = \"num_results_socrata\" > Num results </ label > < input type = \"number\" size = \"3\" class = \"form-control\" id = \"num_results_socrata\" value = \"25\" > </ div > </ form > < form > < div class = \"form-group\" > < button id = \"bt_send\" type = \"button\" class = \"btn btn-default btn-success\" > Send </ button > </ div > </ form > < hr > < div id = \"results\" ></ div > < div id = \"mygrid\" style = \"height: 365px;overflow:auto\" > </ div > </ div > < div class = \"col-md-6\" > < div id = \"map\" style = \"width:100%;height:700px\" ></ div > </ div > </ div > Abrimos el archivo socrata_mapa.html en el navegador. A\u00f1adimos just encima del tag </head> el siguiente c\u00f3digo javascript < script > $ . ajaxSetup ({ cache : true }); var map ; var geojsonLayer ; var _LL ; $ ( document ). ready ( function () { map = L . map ( 'map' ). setView ([ 41.6863 , 1.8382 ], 8 ); esri = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}' , { maxZoom : 17 , minZoom : 1 , attribution : 'Tiles \u00a9 Esri' , }) osm = L . tileLayer ( 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png' , { maxZoom : 19 , minZoom : 1 , attribution : 'OSM' }). addTo ( map ); Stamen_Toner = L . tileLayer ( 'http://{s}.tile.stamen.com/toner/{z}/{x}/{y}.png' , { attribution : 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>' , subdomains : 'abcd' , minZoom : 0 , maxZoom : 20 }) var baseMaps = { \"Orto\" : esri , \"Mapa\" : osm , \"Toner\" : Stamen_Toner }; L . control . layers ( baseMaps , null ). addTo ( map ); L . control . scale (). addTo ( map ); $ ( '#bt_send' ). on ( 'click' , function () { sendRequest (); }); $ ( '#text_filter_socrata' ). on ( 'keypress' , function ( event ) { if ( event . which == 13 ) { sendRequest (); event . preventDefault (); } }); $ ( document ). on ( 'click' , '.btn-xs' , function () { var attr = $ ( this ). attr ( 'data' ); if ( attr && attr . indexOf ( '#' ) != - 1 ) { var params = attr . split ( \"#\" ); var _url = 'https://' + params [ 1 ] + '/api/views.json?method=getByResourceName&name=' + params [ 0 ]; $ . ajax ({ url : _url , method : 'GET' , dataType : 'json' , success : function ( data ) { if ( data . childViews ) { //var _url2 = 'https://' + params[1] + '/resource/' + data.childViews[0] + '.json?$limit=30'; var _url2 = 'https://' + params [ 1 ] + '/api/geospatial/' + data . childViews [ 0 ] + '?method=export&format=GeoJSON' ; sendRequestGEOJSON ( _url2 , true ); } else { var _url2 = 'http://' + params [ 1 ] + '/resource/' + params [ 0 ] + '.json?$limit=30' ; sendRequestGEOJSON ( _url2 , false ); } }, error : function ( xhr ) { $ ( '#results' ). html ( \"An error occured: \" + xhr . status + \" \" + xhr . statusText ); } }); } else { alert ( \"No resource available\" ); } }); function clearLayers () { if ( map . hasLayer ( geojsonLayer )) { map . removeLayer ( geojsonLayer ); }; if ( map . hasLayer ( _LL )) { map . removeLayer ( _LL ); }; } function sendRequestGEOJSON ( _url2 , isGeoJson ) { map . spin ( true ); var stylePoint = { radius : 8 , fillColor : \"#ff7800\" , color : \"#000\" , weight : 1 , opacity : 1 , fillOpacity : 0.8 }; clearLayers (); $ . ajax ({ type : \"GET\" , url : _url2 , // jsonp: \"$jsonp\", // dataType: \"jsonp\", success : function ( response ) { if ( isGeoJson ) { geojsonLayer = L . geoJson ( response , { style : function ( feature ) { return { weight : 2 , color : \"#999\" , opacity : 1 , fillColor : \"#B0DE5C\" , fillOpacity : 0.8 }; }, onEachFeature : popUp }). addTo ( map ); map . fitBounds ( geojsonLayer . getBounds ()); map . spin ( false ); } else { _LL = L . featureGroup () for ( var i = 0 ; i < response . length ; i ++ ) { var marker = response [ i ]; if ( response [ i ]. location_1 ) { L . circleMarker ([ response [ i ]. location_1 . latitude , response [ i ]. location_1 . longitude ], stylePoint ). addTo ( _LL ); } else if ( response [ i ]. location ) { L . circleMarker ([ response [ i ]. location . latitude , response [ i ]. location . longitude ], stylePoint ). addTo ( _LL ); } else { $ ( '#results' ). html ( \"ERROR no locations found\" ); map . spin ( false ); } } _LL . addTo ( map ); map . panTo ( _LL . getBounds (). getCenter ()); map . spin ( false ); } }, error : function ( xhr ) { $ ( '#results' ). html ( \"An error occured: \" + xhr . status + \" \" + xhr . statusText ); map . spin ( false ); } }); } function popUp ( f , l ) { var out = []; if ( f . properties ) { for ( key in f . properties ) { out . push ( key + \": \" + f . properties [ key ]); } l . bindPopup ( out . join ( \"<br />\" )); } } function sendRequest () { var _data = { limit : $ ( '#num_results_socrata' ). val (), only : 'maps' }; console . info ( $ ( '#chk_transparencia' ). attr ( 'checked' )); if ( $ ( '#chk_transparencia' ). attr ( 'checked' )) { _data . domains = $ ( '#chk_transparencia' ). val (); } if ( $ ( '#text_filter_socrata' ). val () != \"\" ) { _data . q = $ ( '#text_filter_socrata' ). val (); } $ . ajax ({ url : $ ( 'input:radio[name=optionsRadios]:checked' ). val (), data : _data , method : 'GET' , dataType : 'json' , success : function ( data ) { console . info ( data ); if ( data ) { $ ( '#results' ). html ( 'Total results found: ' + data . resultSetSize ); $ ( '#mygrid' ). html ( '' ); if ( data . resultSetSize >= 1 ) { var cList = $ ( '<ul>' ). appendTo ( '#mygrid' ); $ . each ( data . results , function ( index , value ) { $ ( '<li class=\"li\"><b>' + value . resource . name + ': </b>' + '<a target=\"_blank\" href=\"' + value . link + '\"> Link </a> ' + '<a class=\"btn btn-success btn-xs\" href=\"#\" data=\"' + value . resource . id + '#' + value . metadata . domain + '\">Map it</a>' ). appendTo ( cList ); }); } } else { console . info ( data ); $ ( '#results' ). html ( \"An error occured:\" ); } }, error : function ( xhr ) { $ ( '#results' ). html ( \"An error occured: \" + xhr . status + \" \" + xhr . statusText ); } }); } }); < /script> Abrimos p\u00e0gina socrat_mapa.html y lanzamos b\u00fasquedas Note Ejercicio 1 : A\u00f1adimos attribution y download_count a los resultados Note Ejercicio 2 : \u00bfCambiamos colores y estilos de los puntos del mapa? Referencias http://docs.ckan.org/en/latest/api/ http://ckan.org https://www.socrata.com http://docs.socratadiscovery.apiary.io","title":"19. Recursos OpenData"},{"location":"recursos_open_data/#recursos-open-data","text":"","title":"Recursos open data"},{"location":"recursos_open_data/#ver-presentacion-opendata","text":"","title":"Ver presentaci\u00f3n OpenData"},{"location":"recursos_open_data/#ejemplo-api-ckan","text":"El API de CKAN http://docs.ckan.org/en/latest/api/index.html no ofrece diferetes niveles y m\u00e9todos para poder buscar y filtrar datasets. En este ejemplo utilizaremos el m\u00e9todo resource_search para buscar datasets en cualquier portal de CKAN Para buscar en portales CKAN necesitamos saber la URL del portal , exemplo http://demo.ckan.org y a\u00f1adir el path del m\u00e9todo a utilizar /api/3/action/resource_search? http://demo.ckan.org/api/3/action/resource_search ?","title":"Ejemplo API CKAN"},{"location":"recursos_open_data/#creacion-de-un-buscador","text":"Dentro de nuestor espacio de trabajo creamos un archivo con el nombre de ckan.html . Abrimos el archivo ckan.html con un editor de texto y copiamos el siguiente c\u00f3digo. <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" > < title > B\u00e0sic sample Resource Search API CKAN </ title > < link rel = \"stylesheet\" href = \"https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" /> < script type = \"text/javascript\" src = \"https://code.jquery.com/jquery-3.3.1.min.js\" ></ script > < script type = \"text/javascript\" src = \"https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\" ></ script > < style > # results { width : 100 % ; background-color : #f2f2f2 ; margin : 5 px ; } </ style > </ head > < body > </ body > </ html > Abrimos el archivo ckan.html en el navegador. A\u00f1adimos dentro del tag <body> la maquetaci\u00f3n HTML < div class = \"container\" > < h3 > Resource Search example </ h3 > < p > Package Search < br > < a target = \"_blank\" href = \"http://docs.ckan.org/en/latest/api/\" > http://docs.ckan.org/en/latest/api/ </ a > </ p > < form id = \"_form\" > < div class = \"form-group\" > < label for = \"url_ckan\" > Url: </ label > < select id = \"url_ckan\" > < option value = \"http://demo.ckan.org/api/3/action/resource_search?\" > ckan.org </ option > < option value = \"http://old.datahub.io/api/3/action/resource_search?\" > old.datahub.io </ option > < option value = \"http://dadesobertes.seu-e.cat/api/action/resource_search?\" > Dades Obertes aoc </ option > <!-- a\u00f1adimos BCN opendata --> </ select > </ div > < div class = \"form-group\" > < label for = \"text_filter_ckan\" > Filter < u > (name, descripton, format ) </ u ></ label > < input type = \"text\" class = \"form-control\" id = \"text_filter_ckan\" value = \"name:wifi\" placeholder = \"text filter\" > </ div > </ form > < form class = \"form-inline\" > < div class = \"form-group\" > < label for = \"num_results_ckan\" > Num results </ label > < input type = \"number\" size = \"3\" class = \"form-control\" id = \"num_results_ckan\" value = \"5\" > </ div > </ form > < form > < div class = \"form-group\" > < button id = \"bt_send\" type = \"button\" class = \"btn btn-default btn-success\" > Send </ button > </ div > </ form > < hr > < div id = \"results\" ></ div > < div id = \"mygrid\" style = \"height: 500px\" ></ div > </ div > Abrimos el archivo ckan.html en el navegador. A\u00f1adimos just encima del tag </head> el siguiente c\u00f3digo javascript < script > $ . ajaxSetup ({ cache : true }); $ ( document ). ready ( function () { $ ( '#bt_send' ). on ( 'click' , function () { sendRequest (); }); $ ( \"#_form\" ). submit ( function ( event ) { sendRequest (); event . preventDefault (); }); function sendRequest (){ var data = { rows : $ ( '#num_results_ckan' ). val (), query : $ ( '#text_filter_ckan' ). val () }; $ . ajax ({ url : $ ( '#url_ckan' ). val (), data : data , dataType : 'jsonp' , success : function ( data ) { if ( data . success ) { $ ( '#results' ). html ( 'Total results found: ' + data . result . count ); $ ( '#mygrid' ). html ( '' ); if ( data . result . count >= 1 ) { $ ( '#mygrid' ). append ( '<ul>' ); $ . each ( data . result . results , function ( index , value ) { $ ( '#mygrid' ). append ( '<li>' + value . name + ': <a href=\"' + value . url + '\">' + value . url + '</a>' ); $ ( '#mygrid' ). append ( '</li>' ); }); $ ( '#mygrid' ). append ( '</ul>' ); } } else { $ ( '#results' ). html ( \"An error occured: \" + data . error . message ); } }, error : function ( xhr ) { $ ( '#results' ). html ( \"An error occured: \" + xhr . status + \" \" + xhr . statusText ); } }); } }); < /script> Abrimos p\u00e0gina ckan.html y lanzamos b\u00fasquedas Note Ejercicio 1 : A\u00f1adir una o m\u00e1s URLs de otros portales de CKAN, por ejemplo OpenDataBCN Note Ejercicio 2 : \u00bfC\u00f3mo har\u00edamos para qu\u00e9 en los resultados apareciera la fecha de creaci\u00f3n del dato? Note Ejercicio 3 : Descargamos CSV accidentes","title":"Creaci\u00f3n de un buscador"},{"location":"recursos_open_data/#ejemplos-api-socrata","text":"El API de Socrata https://dev.socrata.com no ofrece diferetes niveles y m\u00e9todos para poder buscar y filtra datasets. En este primer ejemplo utilizaremos la Discovery API https://socratadiscovery.docs.apiary.io/ para buscar datasets en cualquier portal de Socrata","title":"Ejemplos API SOCRATA"},{"location":"recursos_open_data/#creacion-de-un-buscador_1","text":"Creamos un archivo con el nombre de socrata.html . Abrimos el archivo socrata.html con un editor de texto y copiamos el siguiente c\u00f3digo. <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" > < title > Basic sample API Discovery SOCRATA </ title > < link rel = \"stylesheet\" href = \"https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" /> < script type = \"text/javascript\" src = \"https://code.jquery.com/jquery-3.3.1.min.js\" ></ script > < script type = \"text/javascript\" src = \"https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\" ></ script > < style > # results { width : 100 % ; background-color : #f2f2f2 ; margin : 5 px ; } </ style > </ head > < body > </ body > </ html > Abrimos el archivo socrata.html en el navegador. A\u00f1adimos dentro del tag * <body> * la maquetaci\u00f3n HTML. < div class = \"container\" > < h3 > SOCRATA Resource Search example </ h3 > < p > Discovery API < br > < a target = \"_blank\" href = \"http://docs.socratadiscovery.apiary.io\" > http://docs.socratadiscovery.apiary.io </ a > </ p > < form > < div class = \"form-group\" > < div class = \"radio\" > < label > < input type = \"radio\" name = \"optionsRadios\" id = \"optionsRadios1\" value = \"https://api.eu.socrata.com/api/catalog/v1\" checked > EU API Discovery </ label > </ div > < div class = \"radio\" > < label > < input type = \"radio\" name = \"optionsRadios\" id = \"optionsRadios2\" value = \"https://api.us.socrata.com/api/catalog/v1\" > US API Discovery </ label > </ div > </ div > < div class = \"form-group\" > < label for = \"text_filter_socrata\" > Filter < u ></ u ></ label > < input type = \"text\" class = \"form-control\" id = \"text_filter_socrata\" value = \"Contracts\" placeholder = \"text filter\" > </ div > </ form > < form class = \"form-inline\" > < div class = \"form-group\" > < label for = \"num_results_socrata\" > Num results </ label > < input type = \"number\" size = \"3\" class = \"form-control\" id = \"num_results_socrata\" value = \"25\" > </ div > </ form > < form > < div class = \"form-group\" > < button id = \"bt_send\" type = \"button\" class = \"btn btn-default btn-success\" > Send </ button > </ div > </ form > < hr > < div id = \"results\" ></ div > < div id = \"mygrid\" style = \"height: 500px\" ></ div > </ div > Abrimos el archivo socrata.html en el navegador. A\u00f1adimos just encima del tag </head> el siguiente c\u00f3digo javascript < script > $ . ajaxSetup ({ cache : true }); $ ( document ). ready ( function () { $ ( '#bt_send' ). on ( 'click' , function () { sendRequest (); }); $ ( '#text_filter_socrata' ). on ( 'keypress' , function ( event ) { if ( event . which == 13 ) { sendRequest (); event . preventDefault (); } }); function sendRequest () { var _data = { q : $ ( '#text_filter_socrata' ). val (), limit : $ ( '#num_results_socrata' ). val () }; $ . ajax ({ url : $ ( 'input:radio[name=optionsRadios]:checked' ). val (), data : _data , method : 'GET' , dataType : 'json' , success : function ( data ) { console . info ( data ); if ( data ) { $ ( '#results' ). html ( 'Total results found: ' + data . resultSetSize ); $ ( '#mygrid' ). html ( '' ); if ( data . resultSetSize >= 1 ) { $ ( '#mygrid' ). append ( '<ul>' ); $ . each ( data . results , function ( index , value ) { $ ( '#mygrid' ). append ( '<li><b>' + value . resource . name + '</b>(' + value . resource . type + '): <a target=\"_blank\" href=\"' + value . link + '\">' + value . link + '</a>' ); $ ( '#mygrid' ). append ( '</li>' ); }); $ ( '#mygrid' ). append ( '</ul>' ); } } else { $ ( '#results' ). html ( \"An error occured:\" ); } }, error : function ( xhr ) { $ ( '#results' ). html ( \"An error occured: \" + xhr . status + \" \" + xhr . statusText ); } }); } }); < /script> Abrimos p\u00e0gina socrata.html y lanzamos b\u00fasquedas Note Ejercicio 1 : \u00bfC\u00f3mo filtrar\u00edamos para qu\u00e9 s\u00f3lo ense\u00f1ara \"assets\" de tipo \"map\", only:map ?","title":"Creaci\u00f3n de un buscador"},{"location":"recursos_open_data/#socrata-y-leaflet-mapificacion-de-resultados","text":"Creamos un archivo con el nombre de socrata_mapa.html . Abrimos el archivo socrata_mapa.html con un editor de texto y copiamos el siguiente c\u00f3digo. <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" > < title > Basic Leaflet Map sample API Discovery SOCRATA </ title > < link rel = \"stylesheet\" href = \"https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" /> < link rel = \"stylesheet\" href = \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/leaflet.css\" /> < script type = \"text/javascript\" src = \"https://code.jquery.com/jquery-3.3.1.min.js\" ></ script > < script type = \"text/javascript\" src = \"https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\" ></ script > < script type = \"text/javascript\" src = \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/leaflet.js\" ></ script > < script type = \"text/javascript\" src = \"https://cdnjs.cloudflare.com/ajax/libs/leaflet-ajax/2.1.0/leaflet.ajax.min.js\" ></ script > < script type = \"text/javascript\" src = \"https://cdnjs.cloudflare.com/ajax/libs/spin.js/2.3.2/spin.min.js\" ></ script > < script type = \"text/javascript\" src = \"https://cdnjs.cloudflare.com/ajax/libs/Leaflet.Spin/1.1.0/leaflet.spin.min.js\" ></ script > < style > # results { width : 100 % ; background-color : #f2f2f2 ; margin : 5 px ; } </ style > </ head > < body > </ body > </ html > A\u00f1adimos dentro del tag <body> la maquetaci\u00f3n HTML < div class = \"container\" > < h3 > SOCRATA Maps Resources </ h3 > < div class = \"row\" > < div class = \"col-md-6\" > < p > Discovery API < br > < a target = \"_blank\" href = \"http://docs.socratadiscovery.apiary.io\" > http://docs.socratadiscovery.apiary.io </ a > </ p > < form > < div class = \"form-group\" > < div class = \"radio\" > < label > < input type = \"radio\" name = \"optionsRadios\" id = \"optionsRadios1\" value = \"https://api.eu.socrata.com/api/catalog/v1\" checked > EU API Discovery </ label > </ div > < div class = \"radio\" > < label > < input type = \"radio\" name = \"optionsRadios\" id = \"optionsRadios2\" value = \"https://api.us.socrata.com/api/catalog/v1\" > US API Discovery </ label > </ div > </ div > < div class = \"form-group\" > < label for = \"text_filter_socrata\" > Filter < u ></ u ></ label > < input type = \"text\" class = \"form-control\" id = \"text_filter_socrata\" value = \"\" placeholder = \"text filter\" > < div class = \"checkbox\" > < label >< input type = \"checkbox\" id = \"chk_transparencia\" value = \"analisi.transparenciacatalunya.cat\" > Only https://analisi.transparenciacatalunya.cat </ label > </ div > < div > Filter : only=maps </ div > </ div > </ form > < form class = \"form-inline\" > < div class = \"form-group\" > < label for = \"num_results_socrata\" > Num results </ label > < input type = \"number\" size = \"3\" class = \"form-control\" id = \"num_results_socrata\" value = \"25\" > </ div > </ form > < form > < div class = \"form-group\" > < button id = \"bt_send\" type = \"button\" class = \"btn btn-default btn-success\" > Send </ button > </ div > </ form > < hr > < div id = \"results\" ></ div > < div id = \"mygrid\" style = \"height: 365px;overflow:auto\" > </ div > </ div > < div class = \"col-md-6\" > < div id = \"map\" style = \"width:100%;height:700px\" ></ div > </ div > </ div > Abrimos el archivo socrata_mapa.html en el navegador. A\u00f1adimos just encima del tag </head> el siguiente c\u00f3digo javascript < script > $ . ajaxSetup ({ cache : true }); var map ; var geojsonLayer ; var _LL ; $ ( document ). ready ( function () { map = L . map ( 'map' ). setView ([ 41.6863 , 1.8382 ], 8 ); esri = L . tileLayer ( 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}' , { maxZoom : 17 , minZoom : 1 , attribution : 'Tiles \u00a9 Esri' , }) osm = L . tileLayer ( 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png' , { maxZoom : 19 , minZoom : 1 , attribution : 'OSM' }). addTo ( map ); Stamen_Toner = L . tileLayer ( 'http://{s}.tile.stamen.com/toner/{z}/{x}/{y}.png' , { attribution : 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>' , subdomains : 'abcd' , minZoom : 0 , maxZoom : 20 }) var baseMaps = { \"Orto\" : esri , \"Mapa\" : osm , \"Toner\" : Stamen_Toner }; L . control . layers ( baseMaps , null ). addTo ( map ); L . control . scale (). addTo ( map ); $ ( '#bt_send' ). on ( 'click' , function () { sendRequest (); }); $ ( '#text_filter_socrata' ). on ( 'keypress' , function ( event ) { if ( event . which == 13 ) { sendRequest (); event . preventDefault (); } }); $ ( document ). on ( 'click' , '.btn-xs' , function () { var attr = $ ( this ). attr ( 'data' ); if ( attr && attr . indexOf ( '#' ) != - 1 ) { var params = attr . split ( \"#\" ); var _url = 'https://' + params [ 1 ] + '/api/views.json?method=getByResourceName&name=' + params [ 0 ]; $ . ajax ({ url : _url , method : 'GET' , dataType : 'json' , success : function ( data ) { if ( data . childViews ) { //var _url2 = 'https://' + params[1] + '/resource/' + data.childViews[0] + '.json?$limit=30'; var _url2 = 'https://' + params [ 1 ] + '/api/geospatial/' + data . childViews [ 0 ] + '?method=export&format=GeoJSON' ; sendRequestGEOJSON ( _url2 , true ); } else { var _url2 = 'http://' + params [ 1 ] + '/resource/' + params [ 0 ] + '.json?$limit=30' ; sendRequestGEOJSON ( _url2 , false ); } }, error : function ( xhr ) { $ ( '#results' ). html ( \"An error occured: \" + xhr . status + \" \" + xhr . statusText ); } }); } else { alert ( \"No resource available\" ); } }); function clearLayers () { if ( map . hasLayer ( geojsonLayer )) { map . removeLayer ( geojsonLayer ); }; if ( map . hasLayer ( _LL )) { map . removeLayer ( _LL ); }; } function sendRequestGEOJSON ( _url2 , isGeoJson ) { map . spin ( true ); var stylePoint = { radius : 8 , fillColor : \"#ff7800\" , color : \"#000\" , weight : 1 , opacity : 1 , fillOpacity : 0.8 }; clearLayers (); $ . ajax ({ type : \"GET\" , url : _url2 , // jsonp: \"$jsonp\", // dataType: \"jsonp\", success : function ( response ) { if ( isGeoJson ) { geojsonLayer = L . geoJson ( response , { style : function ( feature ) { return { weight : 2 , color : \"#999\" , opacity : 1 , fillColor : \"#B0DE5C\" , fillOpacity : 0.8 }; }, onEachFeature : popUp }). addTo ( map ); map . fitBounds ( geojsonLayer . getBounds ()); map . spin ( false ); } else { _LL = L . featureGroup () for ( var i = 0 ; i < response . length ; i ++ ) { var marker = response [ i ]; if ( response [ i ]. location_1 ) { L . circleMarker ([ response [ i ]. location_1 . latitude , response [ i ]. location_1 . longitude ], stylePoint ). addTo ( _LL ); } else if ( response [ i ]. location ) { L . circleMarker ([ response [ i ]. location . latitude , response [ i ]. location . longitude ], stylePoint ). addTo ( _LL ); } else { $ ( '#results' ). html ( \"ERROR no locations found\" ); map . spin ( false ); } } _LL . addTo ( map ); map . panTo ( _LL . getBounds (). getCenter ()); map . spin ( false ); } }, error : function ( xhr ) { $ ( '#results' ). html ( \"An error occured: \" + xhr . status + \" \" + xhr . statusText ); map . spin ( false ); } }); } function popUp ( f , l ) { var out = []; if ( f . properties ) { for ( key in f . properties ) { out . push ( key + \": \" + f . properties [ key ]); } l . bindPopup ( out . join ( \"<br />\" )); } } function sendRequest () { var _data = { limit : $ ( '#num_results_socrata' ). val (), only : 'maps' }; console . info ( $ ( '#chk_transparencia' ). attr ( 'checked' )); if ( $ ( '#chk_transparencia' ). attr ( 'checked' )) { _data . domains = $ ( '#chk_transparencia' ). val (); } if ( $ ( '#text_filter_socrata' ). val () != \"\" ) { _data . q = $ ( '#text_filter_socrata' ). val (); } $ . ajax ({ url : $ ( 'input:radio[name=optionsRadios]:checked' ). val (), data : _data , method : 'GET' , dataType : 'json' , success : function ( data ) { console . info ( data ); if ( data ) { $ ( '#results' ). html ( 'Total results found: ' + data . resultSetSize ); $ ( '#mygrid' ). html ( '' ); if ( data . resultSetSize >= 1 ) { var cList = $ ( '<ul>' ). appendTo ( '#mygrid' ); $ . each ( data . results , function ( index , value ) { $ ( '<li class=\"li\"><b>' + value . resource . name + ': </b>' + '<a target=\"_blank\" href=\"' + value . link + '\"> Link </a> ' + '<a class=\"btn btn-success btn-xs\" href=\"#\" data=\"' + value . resource . id + '#' + value . metadata . domain + '\">Map it</a>' ). appendTo ( cList ); }); } } else { console . info ( data ); $ ( '#results' ). html ( \"An error occured:\" ); } }, error : function ( xhr ) { $ ( '#results' ). html ( \"An error occured: \" + xhr . status + \" \" + xhr . statusText ); } }); } }); < /script> Abrimos p\u00e0gina socrat_mapa.html y lanzamos b\u00fasquedas Note Ejercicio 1 : A\u00f1adimos attribution y download_count a los resultados Note Ejercicio 2 : \u00bfCambiamos colores y estilos de los puntos del mapa? Referencias http://docs.ckan.org/en/latest/api/ http://ckan.org https://www.socrata.com http://docs.socratadiscovery.apiary.io","title":"Socrata y Leaflet: Mapificaci\u00f3n de resultados"},{"location":"storytelling/","text":"Introducci\u00f3n Los Storytelling o StoryMaps s\u00f3n una combinaci\u00f3n de mapas con textos narrativos, im\u00e1genes y contenido multimedia que nos permite crear un hilo narrativo para contar una historia Es un recurso muy utilizado por ejemplo en publicaciones digitales. Si tenemos una historia que contar con una mapa, nos ser\u00e0 una herramienta muy \u00fatil. Ejemplo de StoryTelling Save the Nile publicado por AlJazeera Post 8 compelling stories told with the Storytelling solution Informaci\u00f3n y templates https://www.mapbox.com/solutions/interactive-storytelling https://github.com/mapbox/storytelling \u00bfC\u00f3mo empezar? Mapbox ofrece un template para empezar a crear hist\u00f3rias sin apenas programaci\u00f3n, b\u00e1sicamenten s\u00f3lo habr\u00e1 que editar un archivo de configuraci\u00f3n. Vamos descarganos datos/storytelling.zip y descoprimiremos su contenido dentro del directorio de trabajo geoweb Observaremos que tenemos tres nuevos archivos Archivos Description storytelling.html Archivo principal basado en template de mapbox config.js Archivo de configuracion helper.html Mapa de ayuda para capturar coordenadas i vistas Para saber m\u00e1s: https://github.com/mapbox/storytelling#getting-started Note Para ver toda la sesi\u00f3n 5 ver Videos 8 y 9 Nuestro StoryTelling Aprovechando que conocemos ya las propiedades 3D de Mapbox, vamos a crear un storyTelling sobre los principales volcanes en activos del mundo Paso 1: Visualizamos storytelling.html Si hacemos scroll veremos que s\u00f3lo tenemos un volcan Necesitamos entender y editar el archivo config.js para poder a\u00f1adir m\u00e1s contenido Paso 2: Abrimos config.js Cambiamos el accesstoken y ponemos el nuestro var config = { style : 'mapbox://styles/mapbox/satellite-v9' , accessToken : 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' , showMarkers : false , markerColor : '#3FB1CE' , theme : 'dark' , use3dTerrain : true , title : 'Volcanes' , subtitle : 'Los principales volcanes activos del mundo' , byline : 'M2B ' , footer : 'Source: Wikipedia' , chapters : [ { id : 'volcan1' , alignment : 'left' , hidden : false , title : 'Eyjafjallaj\u00f6kull, Islandia' , image : 'https://upload.wikimedia.org/wikipedia/commons/e/e4/Eyjafjallaj%C3%B6kull_first_crater_20100329.jpg' , description : 'Tambi\u00e9n conocido como Eyjafj\u00f6ll,2\u200b o Eyjafjalla,3\u200b es un volc\u00e1n situado al norte de Sk\u00f3gar, en la regi\u00f3n de Su\u00f0urland, al sur de Islandia.4\u200b Tiene entre 1651 m y 1666 m de altitud,\u200b y ha estado moderadamente activo en los \u00faltimos 8000 a\u00f1os.' , location : { center : [ - 19.62 , 63.63 ], zoom : 13.5 , pitch : 60 , bearing : 0 }, mapAnimation : 'flyTo' , rotateAnimation : true , callback : '' , onChapterEnter : [ // { // layer: 'layer-name', // opacity: 1, // duration: 5000 // } ], onChapterExit : [ // { // layer: 'layer-name', // opacity: 0 // } ] } ] }; Las principales opciones del documento config son: Items en negrita son obligatorios . style : Url estilo de MapBox , puede ser un nuestro propio accessToken : Mapbox access token. showMarkers : Mostrar un marker. markerColor : Color hexadecimal del marker. theme : Tema b\u00e1sico CSS (light o dark). use3dTerrain : Activar 3D terrain. (Optional) title : T\u00edtulo de la hist\u00f3ria. (Optional) subtitle : Subt\u00edtulo (Optional) byline : Cr\u00e9ditos del autor. (Optional) footer : Citati\u00f3n de fuentes. chapters : Es una matriz que contiene cada una de las visualizaciones (\u00edtems) de la hist\u00f3ria id : id \u00fanico que se assigna a un HTML id de un div . alignment : Define d\u00f3nde va aparecer el texto de la hist\u00f3ria. Las opciones son; center , left , right , y full . title : T\u00edtulo de la secci\u00f3n. image : Imagen descriptiva. description : Descripci\u00f3n de la secci\u00f3n. Puede contener texto en formato HTML. location : Localizaci\u00f3n del mapa. center : Centro del mapa en coordenadads longitude, latitude zoom : Nivel de zoom. pitch : \u00c1ngulo de inclinaci\u00f3n de la c\u00e1mara. bearing : Rotaci\u00f3n del mapa respeto al norte. mapAnimation : Define el tipo de animaci\u00f3n para la transici\u00f3n entre lugares. Soportas 'flyTo', 'easeTo', y 'jumpTo' animations. Per defecto es flyTo . rotateAnimation : Si es true . El mapa rotar\u00e1 90 grados durante 24 segundos. callback : pPuede ejcutar una funci\u00f3n de Javascript para por ejemplo mostrar un gr\u00e0fico. onChapterEnter : Podemos cambiar partes del estilo de las capas al inciar la secci\u00f3n. layer : Nombre de la capa. opacity : Opacidad. 0 transparente, 1 opaca. duration : Duraci\u00f3n de la transisci\u00f3n en milisegundos. Por defecto 300.. onChapterExit : lo mismo onChapterEnter pero al salir de la secci\u00f3n. Paso 3: A\u00f1adimos un nuevo volcan Para a\u00f1adir nuevo contenido tenemos que a\u00f1adir item dentro de chapters , cada item lo debmos separar por coma var config = { style : 'mapbox://styles/mapbox/satellite-v9' , accessToken : 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' , showMarkers : false , markerColor : '#3FB1CE' , theme : 'dark' , use3dTerrain : true , title : 'Volcanes' , subtitle : 'Los principales volcanes activos del mundo' , byline : 'M2B ' , footer : 'Source: Wikipedia' , chapters : [ { id : 'volcan1' , alignment : 'left' , hidden : false , title : 'Eyjafjallaj\u00f6kull, Islandia' , image : 'https://upload.wikimedia.org/wikipedia/commons/e/e4/Eyjafjallaj%C3%B6kull_first_crater_20100329.jpg' , description : 'Tambi\u00e9n conocido como Eyjafj\u00f6ll,2\u200b o Eyjafjalla,3\u200b es un volc\u00e1n situado al norte de Sk\u00f3gar, en la regi\u00f3n de Su\u00f0urland, al sur de Islandia.4\u200b Tiene entre 1651 m y 1666 m de altitud,\u200b y ha estado moderadamente activo en los \u00faltimos 8000 a\u00f1os.' , location : { center : [ - 19.62 , 63.63 ], zoom : 13.5 , pitch : 60 , bearing : 0 }, mapAnimation : 'flyTo' , rotateAnimation : true , callback : '' , onChapterEnter : [ // { // layer: 'layer-name', // opacity: 1, // duration: 5000 // } ], onChapterExit : [ // { // layer: 'layer-name', // opacity: 0 // } ] },{ id : 'volcan2' , alignment : 'right' , hidden : false , title : 'Monte Vesubio, Italia' , image : 'https://upload.wikimedia.org/wikipedia/commons/2/24/Cr%C3%A1ter_del_Vesubio.jpg' , description : 'Es un volc\u00e1n activo del tipo vesubiano situado frente a la bah\u00eda de N\u00e1poles y a unos nueve kil\u00f3metros de distancia de la ciudad de N\u00e1poles. Se encuentra en la ciudad metropolitana de N\u00e1poles, perteneciente a la regi\u00f3n italiana de la Campania. Tiene una altura m\u00e1xima de 1281 m s. n. m. y se alza al sur de la cadena principal de los Apeninos.' , location : { center : [ 14.42555555 , 40.82138888 ], zoom : 14.5 , pitch : 60 , bearing : - 43.2 }, mapAnimation : 'flyTo' , rotateAnimation : true , callback : '' , onChapterEnter : [], onChapterExit : [] } ] }; Paso 4: Subimos ejemplo a Github Editamos tambi\u00e9n index.html git pull git add . git commit -m \"storytelling\" git push origin main Pr\u00e1cticas no puntuables Intentamos a\u00f1adir dos o m\u00e1s volcanes Buscamos en la wikipedia informaci\u00f3n e imagenes Intentamos mejorar el texto de la descripcion de los volcanes Podemos a\u00f1adir parte c\u00f3digo HTML enla descripci\u00f3n c\u00f3mo por ejemplo un hiperv\u00ednculo o un embed de un v\u00eddeo Podemos intentar cambiar estilos CSS Volvemos a subir los cambios a GitHub git pull git add . git commit -m \"a\u00f1adidos m\u00e1s volcanes\" git push origin main Un StoryTelling podr\u00eda ser un buen ejemplo de pr\u00e1ctica final!!","title":"13. StoryTelling"},{"location":"storytelling/#introduccion","text":"Los Storytelling o StoryMaps s\u00f3n una combinaci\u00f3n de mapas con textos narrativos, im\u00e1genes y contenido multimedia que nos permite crear un hilo narrativo para contar una historia Es un recurso muy utilizado por ejemplo en publicaciones digitales. Si tenemos una historia que contar con una mapa, nos ser\u00e0 una herramienta muy \u00fatil. Ejemplo de StoryTelling Save the Nile publicado por AlJazeera Post 8 compelling stories told with the Storytelling solution","title":"Introducci\u00f3n"},{"location":"storytelling/#informacion-y-templates","text":"https://www.mapbox.com/solutions/interactive-storytelling https://github.com/mapbox/storytelling","title":"Informaci\u00f3n y templates"},{"location":"storytelling/#como-empezar","text":"Mapbox ofrece un template para empezar a crear hist\u00f3rias sin apenas programaci\u00f3n, b\u00e1sicamenten s\u00f3lo habr\u00e1 que editar un archivo de configuraci\u00f3n. Vamos descarganos datos/storytelling.zip y descoprimiremos su contenido dentro del directorio de trabajo geoweb Observaremos que tenemos tres nuevos archivos Archivos Description storytelling.html Archivo principal basado en template de mapbox config.js Archivo de configuracion helper.html Mapa de ayuda para capturar coordenadas i vistas Para saber m\u00e1s: https://github.com/mapbox/storytelling#getting-started Note Para ver toda la sesi\u00f3n 5 ver Videos 8 y 9","title":"\u00bfC\u00f3mo empezar?"},{"location":"storytelling/#nuestro-storytelling","text":"Aprovechando que conocemos ya las propiedades 3D de Mapbox, vamos a crear un storyTelling sobre los principales volcanes en activos del mundo","title":"Nuestro StoryTelling"},{"location":"storytelling/#paso-1-visualizamos-storytellinghtml","text":"Si hacemos scroll veremos que s\u00f3lo tenemos un volcan Necesitamos entender y editar el archivo config.js para poder a\u00f1adir m\u00e1s contenido","title":"Paso 1: Visualizamos storytelling.html"},{"location":"storytelling/#paso-2-abrimos-configjs","text":"Cambiamos el accesstoken y ponemos el nuestro var config = { style : 'mapbox://styles/mapbox/satellite-v9' , accessToken : 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' , showMarkers : false , markerColor : '#3FB1CE' , theme : 'dark' , use3dTerrain : true , title : 'Volcanes' , subtitle : 'Los principales volcanes activos del mundo' , byline : 'M2B ' , footer : 'Source: Wikipedia' , chapters : [ { id : 'volcan1' , alignment : 'left' , hidden : false , title : 'Eyjafjallaj\u00f6kull, Islandia' , image : 'https://upload.wikimedia.org/wikipedia/commons/e/e4/Eyjafjallaj%C3%B6kull_first_crater_20100329.jpg' , description : 'Tambi\u00e9n conocido como Eyjafj\u00f6ll,2\u200b o Eyjafjalla,3\u200b es un volc\u00e1n situado al norte de Sk\u00f3gar, en la regi\u00f3n de Su\u00f0urland, al sur de Islandia.4\u200b Tiene entre 1651 m y 1666 m de altitud,\u200b y ha estado moderadamente activo en los \u00faltimos 8000 a\u00f1os.' , location : { center : [ - 19.62 , 63.63 ], zoom : 13.5 , pitch : 60 , bearing : 0 }, mapAnimation : 'flyTo' , rotateAnimation : true , callback : '' , onChapterEnter : [ // { // layer: 'layer-name', // opacity: 1, // duration: 5000 // } ], onChapterExit : [ // { // layer: 'layer-name', // opacity: 0 // } ] } ] };","title":"Paso 2: Abrimos config.js"},{"location":"storytelling/#las-principales-opciones-del-documento-config-son","text":"Items en negrita son obligatorios . style : Url estilo de MapBox , puede ser un nuestro propio accessToken : Mapbox access token. showMarkers : Mostrar un marker. markerColor : Color hexadecimal del marker. theme : Tema b\u00e1sico CSS (light o dark). use3dTerrain : Activar 3D terrain. (Optional) title : T\u00edtulo de la hist\u00f3ria. (Optional) subtitle : Subt\u00edtulo (Optional) byline : Cr\u00e9ditos del autor. (Optional) footer : Citati\u00f3n de fuentes. chapters : Es una matriz que contiene cada una de las visualizaciones (\u00edtems) de la hist\u00f3ria id : id \u00fanico que se assigna a un HTML id de un div . alignment : Define d\u00f3nde va aparecer el texto de la hist\u00f3ria. Las opciones son; center , left , right , y full . title : T\u00edtulo de la secci\u00f3n. image : Imagen descriptiva. description : Descripci\u00f3n de la secci\u00f3n. Puede contener texto en formato HTML. location : Localizaci\u00f3n del mapa. center : Centro del mapa en coordenadads longitude, latitude zoom : Nivel de zoom. pitch : \u00c1ngulo de inclinaci\u00f3n de la c\u00e1mara. bearing : Rotaci\u00f3n del mapa respeto al norte. mapAnimation : Define el tipo de animaci\u00f3n para la transici\u00f3n entre lugares. Soportas 'flyTo', 'easeTo', y 'jumpTo' animations. Per defecto es flyTo . rotateAnimation : Si es true . El mapa rotar\u00e1 90 grados durante 24 segundos. callback : pPuede ejcutar una funci\u00f3n de Javascript para por ejemplo mostrar un gr\u00e0fico. onChapterEnter : Podemos cambiar partes del estilo de las capas al inciar la secci\u00f3n. layer : Nombre de la capa. opacity : Opacidad. 0 transparente, 1 opaca. duration : Duraci\u00f3n de la transisci\u00f3n en milisegundos. Por defecto 300.. onChapterExit : lo mismo onChapterEnter pero al salir de la secci\u00f3n.","title":"Las principales opciones del documento config son:"},{"location":"storytelling/#paso-3-anadimos-un-nuevo-volcan","text":"Para a\u00f1adir nuevo contenido tenemos que a\u00f1adir item dentro de chapters , cada item lo debmos separar por coma var config = { style : 'mapbox://styles/mapbox/satellite-v9' , accessToken : 'pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA' , showMarkers : false , markerColor : '#3FB1CE' , theme : 'dark' , use3dTerrain : true , title : 'Volcanes' , subtitle : 'Los principales volcanes activos del mundo' , byline : 'M2B ' , footer : 'Source: Wikipedia' , chapters : [ { id : 'volcan1' , alignment : 'left' , hidden : false , title : 'Eyjafjallaj\u00f6kull, Islandia' , image : 'https://upload.wikimedia.org/wikipedia/commons/e/e4/Eyjafjallaj%C3%B6kull_first_crater_20100329.jpg' , description : 'Tambi\u00e9n conocido como Eyjafj\u00f6ll,2\u200b o Eyjafjalla,3\u200b es un volc\u00e1n situado al norte de Sk\u00f3gar, en la regi\u00f3n de Su\u00f0urland, al sur de Islandia.4\u200b Tiene entre 1651 m y 1666 m de altitud,\u200b y ha estado moderadamente activo en los \u00faltimos 8000 a\u00f1os.' , location : { center : [ - 19.62 , 63.63 ], zoom : 13.5 , pitch : 60 , bearing : 0 }, mapAnimation : 'flyTo' , rotateAnimation : true , callback : '' , onChapterEnter : [ // { // layer: 'layer-name', // opacity: 1, // duration: 5000 // } ], onChapterExit : [ // { // layer: 'layer-name', // opacity: 0 // } ] },{ id : 'volcan2' , alignment : 'right' , hidden : false , title : 'Monte Vesubio, Italia' , image : 'https://upload.wikimedia.org/wikipedia/commons/2/24/Cr%C3%A1ter_del_Vesubio.jpg' , description : 'Es un volc\u00e1n activo del tipo vesubiano situado frente a la bah\u00eda de N\u00e1poles y a unos nueve kil\u00f3metros de distancia de la ciudad de N\u00e1poles. Se encuentra en la ciudad metropolitana de N\u00e1poles, perteneciente a la regi\u00f3n italiana de la Campania. Tiene una altura m\u00e1xima de 1281 m s. n. m. y se alza al sur de la cadena principal de los Apeninos.' , location : { center : [ 14.42555555 , 40.82138888 ], zoom : 14.5 , pitch : 60 , bearing : - 43.2 }, mapAnimation : 'flyTo' , rotateAnimation : true , callback : '' , onChapterEnter : [], onChapterExit : [] } ] };","title":"Paso 3: A\u00f1adimos un nuevo volcan"},{"location":"storytelling/#paso-4-subimos-ejemplo-a-github","text":"Editamos tambi\u00e9n index.html git pull git add . git commit -m \"storytelling\" git push origin main","title":"Paso 4: Subimos ejemplo a Github"},{"location":"storytelling/#practicas-no-puntuables","text":"Intentamos a\u00f1adir dos o m\u00e1s volcanes Buscamos en la wikipedia informaci\u00f3n e imagenes Intentamos mejorar el texto de la descripcion de los volcanes Podemos a\u00f1adir parte c\u00f3digo HTML enla descripci\u00f3n c\u00f3mo por ejemplo un hiperv\u00ednculo o un embed de un v\u00eddeo Podemos intentar cambiar estilos CSS Volvemos a subir los cambios a GitHub git pull git add . git commit -m \"a\u00f1adidos m\u00e1s volcanes\" git push origin main Un StoryTelling podr\u00eda ser un buen ejemplo de pr\u00e1ctica final!!","title":"Pr\u00e1cticas no puntuables"},{"location":"taller_github/","text":"3. Mi primer proyecto en GitHub Descripci\u00f3n Vamos a crear un proyecto en GitHub d\u00f3nde vamos a subir todo nuestros ejemplos de m\u00f3dulo as\u00f3 como las pr\u00e1cticas Utlizaremos VisualStudio Code c\u00f3mo editor web y tambi\u00e9n para , mediante \u00f3rdenes GIT mantener nuestro repositorio Paso 1 - Crear usuario en GitHub Crear usuario en: https://github.com/ Atencion!! El nombre de usuario debe ser \u00fanico y NO debe tener espacios ni accentos y ser\u00e1 el subdominio de nuestras p\u00e1ginas web. As\u00ed por ejemplo podr\u00edas crear un usuario tipo vuestras iniciales m\u00e1s palabra descriptiva - ejemplo: vpa_mapas o vpa_modulo2b - NOTA: Para m\u00e1s informaci\u00f3n ver VIDEO 2 Paso 2 - Crear repositorio Una vez validado nuestro correo y creado el usuario, vamos al avatar de la parte superior-derecha y seleccionamos Your repositories Nos mostrar\u00e1 que no tenemos repositorios y le damos al bot\u00f3n New Creamos nuevo repo llamado geoweb NOTA: Para m\u00e1s informaci\u00f3n ver VIDEO 2 Paso 3 - Clonar proyecto en nuestro ordenador Vamos al bot\u00f3n verde \"Code\" seleccionamos HTTPS y copiamos la URL del proyecto Vamos a nuestro ordenador y nos situamos en el directorio d\u00f3nde vamos a trabajar, por ejemplo c:/MasterUPC/m2/ Bot\u00f3n derecho del mouse -->\"Git Bash Here\" y escribo en la consola git clone y pego la URL + Enter git clone https://github.com/ { tu usuario git } /geoweb.git Note Si no aparece \"Git Bash Here\", tienes que instalar el cliente GIT https://git-scm.com/download/win NOTA: Para m\u00e1s informaci\u00f3n ver VIDEO 3 Paso 4 -A\u00f1adir proyecto a VSCode Abrimos VSCode y a\u00f1adimos directorio geoweb File -->Add folder to workspace Paso 5 - Creamos p\u00e1gina html Situamos puntero encima de geoweb bot\u00f3n derecho del mouse --> \"New File\" y creamos index.html Copiamos el siguiente c\u00f3digo HTML de la que ser\u00e1 nuestra p\u00e1gina de inicio < html > < head > < title > Mis mapas M2B </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > </ head > < body > < h2 > Mis mapas del m\u00f3dulo M2B </ h2 > < h4 > Leaflet </ h4 > < ul > < li ></ li > < li ></ li > < li ></ li > </ ul > < hr /> < h4 > MapBoxGL JS </ h4 > < ul > < li ></ li > < li ></ li > < li ></ li > </ ul > < hr /> < h4 > KeplerGL </ h4 > < ul > < li ></ li > < li ></ li > < li ></ li > </ ul > < hr /> < h4 > Pr\u00e1cticas </ h4 > < ul > < li ></ li > < li ></ li > < li ></ li > </ ul > < hr /> </ body > </ html > Guardamos archivo crtl + s Paso 6 - Visualizamos archivo Para visualizar un archivo HTML No es recomendable hacerlo c\u00f3mo si fuera un archivo local file:// , es decir \"doble-click\" sobre el archivo, ya que podria contener c\u00f3digo JavaScript que que no se ejecutara correctamente (por ejemplo todo aquello a cargar contenido a paritr de rutas relativas a un recurso web). Es mejor visualizar archivos HTML via http:// . Para ello instalaremos una extensi\u00f3n de VSCode llamada LiveServer Si utlizamos VSCODE , instalamos extensi\u00f3n Live Server View -->Extensions Paso 7 .Subir cambios a GitHub Abrimos una terminal en VSCode View --> Terminal y dentro de la terminal escribimos (linea + tecla Enter) git pull git add . git commit -m \"change readme\" git push -u origin main Si al hacer commit la primera vez tenemos este aviso Run git config --global user.email \"you@example.com\" git config --global user.name \"Your Name\" to set your account 's default identity. Omit --global to set the identity only in this repository. fatal: unable to auto-detect email address (got ' usuario@yourpc. ( none ) ' ) Entramos nuestor usuario de git y volvemos a hacer push git config --global user.email micorreo@gmail.com git config --global user.name misusuario git pull git add . git commit -m \"change readme\" git push -u origin main La primera vez puede ser que tengamos que autentificarnos en GitHub Al final cada vez que subamos cambios debemos escribir estas 4 lineas git pull git add . git commit -m \"mensaje commit\" git push origin main Note Cada vez que editamos debemos hacer esta operaci\u00f3n para subir c\u00f3digo NOTA: Para m\u00e1s informaci\u00f3n ver VIDEO 4 Paso 8 -GitHub como webhosting Para convertir el repo en una p\u00e1gina web, vamos al proyecto geoweb en github.com Seleccionamos opci\u00f3n Settings GitHub Pages -->Source opci\u00f3n Branch main -->Save NOTA: Para m\u00e1s informaci\u00f3n ver VIDEO 4 Paso 9 -Pr\u00e1ctica no puntuable con GitHub Editar index.html La pagina index.html no tiene estilo. \u00bfPodri\u00e1s a\u00f1adir css y divs para maquetar mejor la p\u00e0gina. Puedes utlizar librer\u00edas com Bootstrap o Materialize para un mejor dise\u00f1o pista Recuerda que al final cada vez que subamos cambios debemos escribir estas 4 lineas git pull git add . git commit -m \"mensaje commit\" git push origin main Anexos Para recuperar (clonar) nuestro trabajo en otro pc, por ejemplo Nos situamos en un directorio de nuestor PC. Bot\u00f3n derecho del mouse -->\"Git bash here\" Note Si no aparece \"Git bash here\", tienes que instalar el cliente GIT https://git-scm.com/download/win Para (clonar) clonar la doumentaci\u00f3n del curso Nos situamos en un directorio de nuestor PC. Bot\u00f3n derecho del mouse -->\"Git bash here\" git clone https://github.com/gis-master-m2/m2-geoweb.git Para actualizar-sincronizar documentacion Nos situamos dentro del directorio del proyecto, por ejemplo geoweb o m2-geoweb. Bot\u00f3n derecho del mouse -->\"Git bash here\" git pull Para crear un proyecto desde nuestro PC directament a Github Crearemos repo des de nuestro pc Tutorial Nos situamos dentro del directorio geoweb de nuestro servidor y abrimos termial git (bot\u00f3n derecho mouse y Git Bash here) git init git add . git commit -m \"proyecto geoweb\" git remote add origin https://github.com/ { tu usuario git } /geoweb.git git remote -v git push -u origin main Atentificamos con usuario y password","title":"3. Mi primer proyecto en GitHub"},{"location":"taller_github/#3-mi-primer-proyecto-en-github","text":"","title":"3. Mi primer proyecto en GitHub"},{"location":"taller_github/#descripcion","text":"Vamos a crear un proyecto en GitHub d\u00f3nde vamos a subir todo nuestros ejemplos de m\u00f3dulo as\u00f3 como las pr\u00e1cticas Utlizaremos VisualStudio Code c\u00f3mo editor web y tambi\u00e9n para , mediante \u00f3rdenes GIT mantener nuestro repositorio","title":"Descripci\u00f3n"},{"location":"taller_github/#paso-1-crear-usuario-en-github","text":"Crear usuario en: https://github.com/ Atencion!! El nombre de usuario debe ser \u00fanico y NO debe tener espacios ni accentos y ser\u00e1 el subdominio de nuestras p\u00e1ginas web. As\u00ed por ejemplo podr\u00edas crear un usuario tipo vuestras iniciales m\u00e1s palabra descriptiva - ejemplo: vpa_mapas o vpa_modulo2b - NOTA: Para m\u00e1s informaci\u00f3n ver VIDEO 2","title":"Paso 1 - Crear usuario en GitHub"},{"location":"taller_github/#paso-2-crear-repositorio","text":"Una vez validado nuestro correo y creado el usuario, vamos al avatar de la parte superior-derecha y seleccionamos Your repositories Nos mostrar\u00e1 que no tenemos repositorios y le damos al bot\u00f3n New Creamos nuevo repo llamado geoweb NOTA: Para m\u00e1s informaci\u00f3n ver VIDEO 2","title":"Paso 2 - Crear repositorio"},{"location":"taller_github/#paso-3-clonar-proyecto-en-nuestro-ordenador","text":"Vamos al bot\u00f3n verde \"Code\" seleccionamos HTTPS y copiamos la URL del proyecto Vamos a nuestro ordenador y nos situamos en el directorio d\u00f3nde vamos a trabajar, por ejemplo c:/MasterUPC/m2/ Bot\u00f3n derecho del mouse -->\"Git Bash Here\" y escribo en la consola git clone y pego la URL + Enter git clone https://github.com/ { tu usuario git } /geoweb.git Note Si no aparece \"Git Bash Here\", tienes que instalar el cliente GIT https://git-scm.com/download/win NOTA: Para m\u00e1s informaci\u00f3n ver VIDEO 3","title":"Paso 3 - Clonar proyecto en nuestro ordenador"},{"location":"taller_github/#paso-4-anadir-proyecto-a-vscode","text":"Abrimos VSCode y a\u00f1adimos directorio geoweb File -->Add folder to workspace","title":"Paso 4 -A\u00f1adir proyecto a VSCode"},{"location":"taller_github/#paso-5-creamos-pagina-html","text":"Situamos puntero encima de geoweb bot\u00f3n derecho del mouse --> \"New File\" y creamos index.html Copiamos el siguiente c\u00f3digo HTML de la que ser\u00e1 nuestra p\u00e1gina de inicio < html > < head > < title > Mis mapas M2B </ title > < meta charset = \"utf-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta name = \"author\" content = \"autor\" /> < meta name = \"description\" content = \"descripci\u00f3n p\u00e1gina\" > < meta name = \"robots\" content = \"index,follow\" > </ head > < body > < h2 > Mis mapas del m\u00f3dulo M2B </ h2 > < h4 > Leaflet </ h4 > < ul > < li ></ li > < li ></ li > < li ></ li > </ ul > < hr /> < h4 > MapBoxGL JS </ h4 > < ul > < li ></ li > < li ></ li > < li ></ li > </ ul > < hr /> < h4 > KeplerGL </ h4 > < ul > < li ></ li > < li ></ li > < li ></ li > </ ul > < hr /> < h4 > Pr\u00e1cticas </ h4 > < ul > < li ></ li > < li ></ li > < li ></ li > </ ul > < hr /> </ body > </ html > Guardamos archivo crtl + s","title":"Paso 5 - Creamos p\u00e1gina html"},{"location":"taller_github/#paso-6-visualizamos-archivo","text":"Para visualizar un archivo HTML No es recomendable hacerlo c\u00f3mo si fuera un archivo local file:// , es decir \"doble-click\" sobre el archivo, ya que podria contener c\u00f3digo JavaScript que que no se ejecutara correctamente (por ejemplo todo aquello a cargar contenido a paritr de rutas relativas a un recurso web). Es mejor visualizar archivos HTML via http:// . Para ello instalaremos una extensi\u00f3n de VSCode llamada LiveServer Si utlizamos VSCODE , instalamos extensi\u00f3n Live Server View -->Extensions","title":"Paso 6 - Visualizamos archivo"},{"location":"taller_github/#paso-7-subir-cambios-a-github","text":"Abrimos una terminal en VSCode View --> Terminal y dentro de la terminal escribimos (linea + tecla Enter) git pull git add . git commit -m \"change readme\" git push -u origin main Si al hacer commit la primera vez tenemos este aviso Run git config --global user.email \"you@example.com\" git config --global user.name \"Your Name\" to set your account 's default identity. Omit --global to set the identity only in this repository. fatal: unable to auto-detect email address (got ' usuario@yourpc. ( none ) ' ) Entramos nuestor usuario de git y volvemos a hacer push git config --global user.email micorreo@gmail.com git config --global user.name misusuario git pull git add . git commit -m \"change readme\" git push -u origin main La primera vez puede ser que tengamos que autentificarnos en GitHub Al final cada vez que subamos cambios debemos escribir estas 4 lineas git pull git add . git commit -m \"mensaje commit\" git push origin main Note Cada vez que editamos debemos hacer esta operaci\u00f3n para subir c\u00f3digo NOTA: Para m\u00e1s informaci\u00f3n ver VIDEO 4","title":"Paso 7 .Subir cambios a GitHub"},{"location":"taller_github/#paso-8-github-como-webhosting","text":"Para convertir el repo en una p\u00e1gina web, vamos al proyecto geoweb en github.com Seleccionamos opci\u00f3n Settings GitHub Pages -->Source opci\u00f3n Branch main -->Save NOTA: Para m\u00e1s informaci\u00f3n ver VIDEO 4","title":"Paso 8 -GitHub como webhosting"},{"location":"taller_github/#paso-9-practica-no-puntuable-con-github","text":"Editar index.html La pagina index.html no tiene estilo. \u00bfPodri\u00e1s a\u00f1adir css y divs para maquetar mejor la p\u00e0gina. Puedes utlizar librer\u00edas com Bootstrap o Materialize para un mejor dise\u00f1o pista Recuerda que al final cada vez que subamos cambios debemos escribir estas 4 lineas git pull git add . git commit -m \"mensaje commit\" git push origin main","title":"Paso 9 -Pr\u00e1ctica no puntuable con GitHub"},{"location":"taller_github/#anexos","text":"","title":"Anexos"},{"location":"taller_github/#para-recuperar-clonar-nuestro-trabajo-en-otro-pc-por-ejemplo","text":"Nos situamos en un directorio de nuestor PC. Bot\u00f3n derecho del mouse -->\"Git bash here\" Note Si no aparece \"Git bash here\", tienes que instalar el cliente GIT https://git-scm.com/download/win","title":"Para recuperar (clonar) nuestro trabajo en otro pc, por ejemplo"},{"location":"taller_github/#para-clonar-clonar-la-doumentacion-del-curso","text":"Nos situamos en un directorio de nuestor PC. Bot\u00f3n derecho del mouse -->\"Git bash here\" git clone https://github.com/gis-master-m2/m2-geoweb.git","title":"Para (clonar) clonar la doumentaci\u00f3n del curso"},{"location":"taller_github/#para-actualizar-sincronizar-documentacion","text":"Nos situamos dentro del directorio del proyecto, por ejemplo geoweb o m2-geoweb. Bot\u00f3n derecho del mouse -->\"Git bash here\" git pull","title":"Para actualizar-sincronizar documentacion"},{"location":"taller_github/#para-crear-un-proyecto-desde-nuestro-pc-directament-a-github","text":"Crearemos repo des de nuestro pc Tutorial Nos situamos dentro del directorio geoweb de nuestro servidor y abrimos termial git (bot\u00f3n derecho mouse y Git Bash here) git init git add . git commit -m \"proyecto geoweb\" git remote add origin https://github.com/ { tu usuario git } /geoweb.git git remote -v git push -u origin main Atentificamos con usuario y password","title":"Para crear un proyecto desde nuestro PC directament a Github"},{"location":"taller_medium/","text":"Medium Recursos Medium Web https://medium.com// Tutorials https://help.medium.com/hc/en-us/articles/225168768 https://help.medium.com/hc/en-us/articles/115004681607-Create-a-publication Tutorial https://blog.hubspot.com/marketing/how-to-use-medium Wikipedia hhttps://es.wikipedia.org/wiki/Medium_(servicio) Descripci\u00f3n Medium es un servicio de publicaci\u00f3n de blogs fundado por los cofundadores de Twitter Evan Williams y Biz Stone en agosto de 2012.1\u200b La plataforma ha evolucionado hacia un h\u00edbrido de contribuciones no profesionales, profesionales y pagadas. Algunos art\u00edculos de Medium de la pr\u00e1ctica final https://medium.com/@jordi.rodriguezdiaz/pr%C3%A1ctica-final-de-porgrado-con-kepler-gl-m%C3%B3dulo-m2b-mapas-y-opendata-herramientas-de-99c33ed87678 https://medium.com/@claudiobracho9696/gis-and-field-analysis-after-gloria-storm-approximation-to-flooding-risk-assessment-in-8592ccebec0b https://medium.com/master-upc-sig/taller-de-la-asignatura-introducci%C3%B3-a-la-programaci%C3%B3-sig-en-entorn-web-cf39862c954f Note Nos damos de alta com usuarios en Medium https://medium.com/","title":"20. Taller de Medium"},{"location":"taller_medium/#medium","text":"","title":"Medium"},{"location":"taller_medium/#recursos-medium","text":"Web https://medium.com// Tutorials https://help.medium.com/hc/en-us/articles/225168768 https://help.medium.com/hc/en-us/articles/115004681607-Create-a-publication Tutorial https://blog.hubspot.com/marketing/how-to-use-medium Wikipedia hhttps://es.wikipedia.org/wiki/Medium_(servicio)","title":"Recursos Medium"},{"location":"taller_medium/#descripcion","text":"Medium es un servicio de publicaci\u00f3n de blogs fundado por los cofundadores de Twitter Evan Williams y Biz Stone en agosto de 2012.1\u200b La plataforma ha evolucionado hacia un h\u00edbrido de contribuciones no profesionales, profesionales y pagadas.","title":"Descripci\u00f3n"},{"location":"taller_medium/#algunos-articulos-de-medium-de-la-practica-final","text":"https://medium.com/@jordi.rodriguezdiaz/pr%C3%A1ctica-final-de-porgrado-con-kepler-gl-m%C3%B3dulo-m2b-mapas-y-opendata-herramientas-de-99c33ed87678 https://medium.com/@claudiobracho9696/gis-and-field-analysis-after-gloria-storm-approximation-to-flooding-risk-assessment-in-8592ccebec0b https://medium.com/master-upc-sig/taller-de-la-asignatura-introducci%C3%B3-a-la-programaci%C3%B3-sig-en-entorn-web-cf39862c954f Note Nos damos de alta com usuarios en Medium https://medium.com/","title":"Algunos art\u00edculos de Medium de la pr\u00e1ctica final"},{"location":"visualizacion_con_kepler_gl/","text":"Descripci\u00f3n Kepler.gl es una aplicaci\u00f3n desarrollada por Uber, en un principio para uso interno, para analizar y visualizar sus propios datos. Esta basada en WebGL y pensada para la exploraci\u00f3n visual de conjuntos de datos de geolocalizaci\u00f3s a gran escala. Kepler.gl est\u00e1 construido en la parte superior de Deck.gl, la libreria de visualizaci\u00f3n tambi\u00e9n desarrollada por Uber. kepler.gl puede representar millones de puntos que representan miles de viajes y realizar agregaciones espaciales, bsadas por ejemplo en hex\u00e1gonos. Tambi\u00e9n es possible desarrollar sobre Kepler.gl ya que existe una API basada en el framework de JavaScript React + Redux Web https://kepler.gl/ Aplicaci\u00f3n https://kepler.gl/demo P\u00e1gina refer\u00e9ncia Kepler GL (React JS + Redux) https://github.com/keplergl/kepler.gl/blob/master/docs/api-reference/README.md GitHUB https://github.com/keplergl Tutoriales https://github.com/keplergl/kepler.gl/blob/master/docs/user-guides/a-introduction.md https://github.com/keplergl/kepler.gl/blob/master/docs/user-guides/j-get-started.md Videos https://www.youtube.com/watch?v=b8wKEY4dlvg https://www.youtube.com/watch?v=y-SA6bOv4Eo https://www.youtube.com/watch?v=i2fRN4e2s0A Ejercicio de visualizaci\u00f3n con Kepler.gl Queremos analizar los accidentes de coche en la ciudad de Barcelona en el a\u00f1o 2019 Para m\u00e1s detalle ver Videos 11 y 12 Preparaci\u00f3n datos Origen dataset CSV de Personas involucradas en accidentes gestionados por la Guardia Urbana en la ciudad de Barcelona de OpenData BCN Este dataset contiene los accidentes, con coordenadas, de la ciudad de Barcelona en el a\u00f1o 2019. Las fechas de los accidentes estan separadas por A\u00f1o, Mes, Dias y Horas en diferentes campos.C\u00f3mo Keplerg trabaja muy bien con fechas tipo TIMESTAMP, hemos decidido a\u00f1adir un nuevo campo, llamado timestamp , d\u00f3nde hemos concatenado los campos de A\u00f1o, Mes, D\u00eda y Hora Con LibreOffice seria =CONCATENATE(L2;\"-\";M2;\"-\";O2;\"T\";P2;\":00\") Descargamos el archivo editado 2019_accidents_tipus_gu_bcn_.csv Paso1 : A\u00f1adir datos el mapa Vamos a https://kepler.gl/demo Cargamos 2019_accidents_tipus_gu_bcn_TIME.csv A\u00f1adimos csv Paso2 : A\u00f1adimos estilo pr\u00f3pio Base map --> add Map Style --> Paste style url Podemos a\u00f1adir un estilo de https://openicgc.github.io/ (Apartado:\"Estils \u00e0mbit mundial per Vector Tiles\") Podemos a\u00f1adir estilo propio de Mapbox + nuestro AccessToken Paso2 : A\u00f1adir capas Para m\u00e1s detalle ver Video 11 A\u00f1adimos tres capas de tipo Punto , Hexbin , HeatMap Ejemplo para Puntos -nombre capa \"Accidentes\"- Ejemplo para HexBin -nombre capa \"Agrupaci\u00f3n\"- Ejemplo para HeatMap -nombre capa \"Concentraci\u00f3n\"- Dejamos solo visible capa \"Agrupaci\u00f3n\" y utilizamos bot\u00f3n 3D para dar prespectiva al mapa Paso3 : A\u00f1adir filtros Permite filtrar los datos de todas las capa asociadas a un dataset Por ejemplo por: Por dia de la semana --> Campo \"Dia_semana\" Por hora del dia --> Campo \"Hora_dia\" ** Por barra temporal --> Campo \"timestamp\" Paso4 : Definir \"tooltips\" Paso5 : Guardar y exporta a HTML Seleccionaremos Map Format --> HTML Mapbox access token --> Pegaremos nuestro access token Map Mode --> Allow users to edit the map Guardaremos el archivo c\u00f3mo accidentes.html dentro de nuestro proyecto geoweb Podemos tambi\u00e9n guardar en formato JSON, c\u00f3mo si fuera un archivo de proyecto que podremos volver a cargar como \"dataset\" en https://kepler.gl/demo . Aqu\u00ed teneis el mapa creado accidentes.json Paso 6 : Subir a GitHub Subimos el ejemplo y editamos index.html a GitHub git pull git add . git commit -m \"Mapa KeplerGl\" git push origin main Pr\u00e1ctica no puntuable Comparar accidentes a\u00f1os 2018-2019 Tenemos tambi\u00e9n los accidentes del 2018 2018_accidents_tipus_gu_bcn_.csv Podrias a\u00f1adir este dataset a nuestro mapa y crear sus correspondientes capas para 2018 Despu\u00e9s puedes activar la vista Dual y comparar a\u00f1os Vuelve a exportar el mapa como \"accidentes-comparador.html\" y s\u00fabelo al GitHub","title":"18. Visualizaci\u00f3n y publicaci\u00f3n con Kepler GL"},{"location":"visualizacion_con_kepler_gl/#descripcion","text":"Kepler.gl es una aplicaci\u00f3n desarrollada por Uber, en un principio para uso interno, para analizar y visualizar sus propios datos. Esta basada en WebGL y pensada para la exploraci\u00f3n visual de conjuntos de datos de geolocalizaci\u00f3s a gran escala. Kepler.gl est\u00e1 construido en la parte superior de Deck.gl, la libreria de visualizaci\u00f3n tambi\u00e9n desarrollada por Uber. kepler.gl puede representar millones de puntos que representan miles de viajes y realizar agregaciones espaciales, bsadas por ejemplo en hex\u00e1gonos. Tambi\u00e9n es possible desarrollar sobre Kepler.gl ya que existe una API basada en el framework de JavaScript React + Redux","title":"Descripci\u00f3n"},{"location":"visualizacion_con_kepler_gl/#web","text":"https://kepler.gl/","title":"Web"},{"location":"visualizacion_con_kepler_gl/#aplicacion","text":"https://kepler.gl/demo","title":"Aplicaci\u00f3n"},{"location":"visualizacion_con_kepler_gl/#pagina-referencia-kepler-glreact-js-redux","text":"https://github.com/keplergl/kepler.gl/blob/master/docs/api-reference/README.md","title":"P\u00e1gina refer\u00e9ncia Kepler GL(React JS + Redux)"},{"location":"visualizacion_con_kepler_gl/#github","text":"https://github.com/keplergl","title":"GitHUB"},{"location":"visualizacion_con_kepler_gl/#tutoriales","text":"https://github.com/keplergl/kepler.gl/blob/master/docs/user-guides/a-introduction.md https://github.com/keplergl/kepler.gl/blob/master/docs/user-guides/j-get-started.md","title":"Tutoriales"},{"location":"visualizacion_con_kepler_gl/#videos","text":"https://www.youtube.com/watch?v=b8wKEY4dlvg https://www.youtube.com/watch?v=y-SA6bOv4Eo https://www.youtube.com/watch?v=i2fRN4e2s0A","title":"Videos"},{"location":"visualizacion_con_kepler_gl/#ejercicio-de-visualizacion-con-keplergl","text":"Queremos analizar los accidentes de coche en la ciudad de Barcelona en el a\u00f1o 2019 Para m\u00e1s detalle ver Videos 11 y 12","title":"Ejercicio de visualizaci\u00f3n con Kepler.gl"},{"location":"visualizacion_con_kepler_gl/#preparacion-datos","text":"Origen dataset CSV de Personas involucradas en accidentes gestionados por la Guardia Urbana en la ciudad de Barcelona de OpenData BCN Este dataset contiene los accidentes, con coordenadas, de la ciudad de Barcelona en el a\u00f1o 2019. Las fechas de los accidentes estan separadas por A\u00f1o, Mes, Dias y Horas en diferentes campos.C\u00f3mo Keplerg trabaja muy bien con fechas tipo TIMESTAMP, hemos decidido a\u00f1adir un nuevo campo, llamado timestamp , d\u00f3nde hemos concatenado los campos de A\u00f1o, Mes, D\u00eda y Hora Con LibreOffice seria =CONCATENATE(L2;\"-\";M2;\"-\";O2;\"T\";P2;\":00\") Descargamos el archivo editado 2019_accidents_tipus_gu_bcn_.csv","title":"Preparaci\u00f3n datos"},{"location":"visualizacion_con_kepler_gl/#paso1-anadir-datos-el-mapa","text":"Vamos a https://kepler.gl/demo Cargamos 2019_accidents_tipus_gu_bcn_TIME.csv A\u00f1adimos csv","title":"Paso1 : A\u00f1adir datos el mapa"},{"location":"visualizacion_con_kepler_gl/#paso2-anadimos-estilo-propio","text":"Base map --> add Map Style --> Paste style url Podemos a\u00f1adir un estilo de https://openicgc.github.io/ (Apartado:\"Estils \u00e0mbit mundial per Vector Tiles\") Podemos a\u00f1adir estilo propio de Mapbox + nuestro AccessToken","title":"Paso2 : A\u00f1adimos estilo pr\u00f3pio"},{"location":"visualizacion_con_kepler_gl/#paso2-anadir-capas","text":"Para m\u00e1s detalle ver Video 11 A\u00f1adimos tres capas de tipo Punto , Hexbin , HeatMap Ejemplo para Puntos -nombre capa \"Accidentes\"- Ejemplo para HexBin -nombre capa \"Agrupaci\u00f3n\"- Ejemplo para HeatMap -nombre capa \"Concentraci\u00f3n\"- Dejamos solo visible capa \"Agrupaci\u00f3n\" y utilizamos bot\u00f3n 3D para dar prespectiva al mapa","title":"Paso2 : A\u00f1adir capas"},{"location":"visualizacion_con_kepler_gl/#paso3-anadir-filtros","text":"Permite filtrar los datos de todas las capa asociadas a un dataset Por ejemplo por: Por dia de la semana --> Campo \"Dia_semana\" Por hora del dia --> Campo \"Hora_dia\" ** Por barra temporal --> Campo \"timestamp\"","title":"Paso3 : A\u00f1adir filtros"},{"location":"visualizacion_con_kepler_gl/#paso4-definir-tooltips","text":"","title":"Paso4 : Definir \"tooltips\""},{"location":"visualizacion_con_kepler_gl/#paso5-guardar-y-exporta-a-html","text":"Seleccionaremos Map Format --> HTML Mapbox access token --> Pegaremos nuestro access token Map Mode --> Allow users to edit the map Guardaremos el archivo c\u00f3mo accidentes.html dentro de nuestro proyecto geoweb Podemos tambi\u00e9n guardar en formato JSON, c\u00f3mo si fuera un archivo de proyecto que podremos volver a cargar como \"dataset\" en https://kepler.gl/demo . Aqu\u00ed teneis el mapa creado accidentes.json","title":"Paso5 : Guardar y exporta a HTML"},{"location":"visualizacion_con_kepler_gl/#paso-6-subir-a-github","text":"Subimos el ejemplo y editamos index.html a GitHub git pull git add . git commit -m \"Mapa KeplerGl\" git push origin main","title":"Paso 6 : Subir a GitHub"},{"location":"visualizacion_con_kepler_gl/#practica-no-puntuable","text":"Comparar accidentes a\u00f1os 2018-2019 Tenemos tambi\u00e9n los accidentes del 2018 2018_accidents_tipus_gu_bcn_.csv Podrias a\u00f1adir este dataset a nuestro mapa y crear sus correspondientes capas para 2018 Despu\u00e9s puedes activar la vista Dual y comparar a\u00f1os Vuelve a exportar el mapa como \"accidentes-comparador.html\" y s\u00fabelo al GitHub","title":"Pr\u00e1ctica no puntuable"}]}